Package edu.wpi.first.wpilibj
package
edu.wpi.first.wpilibj
Related Packages
Package
Description
edu.wpi.first.wpilibj.counter
edu.wpi.first.wpilibj.drive
edu.wpi.first.wpilibj.event
edu.wpi.first.wpilibj.internal
edu.wpi.first.wpilibj.livewindow
edu.wpi.first.wpilibj.motorcontrol
edu.wpi.first.wpilibj.romi
edu.wpi.first.wpilibj.shuffleboard
edu.wpi.first.wpilibj.simulation
edu.wpi.first.wpilibj.smartdashboard
edu.wpi.first.wpilibj.sysid
edu.wpi.first.wpilibj.util
edu.wpi.first.wpilibj.xrp
All Classes and Interfaces
Interfaces
Classes
Enum Classes
Exceptions
Class
Description
AddressableLED
A class for driving addressable LEDs, such as WS2812B, WS2815, and NeoPixels.
AddressableLED.ColorOrder
Order that color data is sent over the wire.
AddressableLEDBuffer
Buffer storage for Addressable LEDs.
AddressableLEDBufferView
A view of another addressable LED buffer.
ADIS16448_IMU
This class is for the ADIS16448 IMU that connects to the RoboRIO MXP port.
ADIS16448_IMU.CalibrationTime
ADIS16448 calibration times.
ADIS16448_IMU.IMUAxis
IMU axes.
ADIS16470_IMU
This class is for the ADIS16470 IMU that connects to the RoboRIO SPI port.
ADIS16470_IMU.CalibrationTime
ADIS16470 calibration times.
ADIS16470_IMU.IMUAxis
IMU axes.
ADXL345_I2C
ADXL345 I2C Accelerometer.
ADXL345_I2C.AllAxes
Container type for accelerations from all axes.
ADXL345_I2C.Axes
Accelerometer axes.
ADXL345_I2C.Range
Accelerometer range.
ADXL345_SPI
ADXL345 SPI Accelerometer.
ADXL345_SPI.AllAxes
Container type for accelerations from all axes.
ADXL345_SPI.Axes
Accelerometer axes.
ADXL345_SPI.Range
Accelerometer range.
ADXL362
ADXL362 SPI Accelerometer.
ADXL362.AllAxes
Container type for accelerations from all axes.
ADXL362.Axes
Accelerometer axes.
ADXL362.Range
Accelerometer range.
ADXRS450_Gyro
Use a rate gyro to return the robots heading relative to a starting position.
Alert
Persistent alert to be sent via NetworkTables.
Alert.AlertType
Represents an alert's level of urgency.
AnalogAccelerometer
Handle operation of an analog accelerometer.
AnalogEncoder
Class for supporting continuous analog encoders, such as the US Digital MA3.
AnalogGyro
Use a rate gyro to return the robots heading relative to a starting position.
AnalogInput
Analog channel class.
AnalogOutput
Analog output class.
AnalogPotentiometer
Class for reading analog potentiometers.
AnalogTrigger
Class for creating and configuring Analog Triggers.
AnalogTriggerOutput
Class to represent a specific output from an analog trigger.
AnalogTriggerOutput.AnalogTriggerOutputException
Exceptions dealing with improper operation of the Analog trigger output.
AnalogTriggerOutput.AnalogTriggerType
Defines the state in which the AnalogTrigger triggers.
AsynchronousInterrupt
Class for handling asynchronous interrupts using a callback thread.
BuiltInAccelerometer
Built-in accelerometer.
BuiltInAccelerometer.Range
Accelerometer range.
CAN
High level class for interfacing with CAN devices conforming to the standard CAN spec.
Compressor
Class for operating a compressor connected to a pneumatics module.
CompressorConfigType
Compressor config type.
Counter
Class for counting the number of ticks on a digital input channel.
Counter.Mode
Mode determines how and what the counter counts.
CounterBase
Interface for counting the number of ticks on a digital input channel.
CounterBase.EncodingType
The number of edges for the CounterBase to increment or decrement on.
DataLogManager
Centralized data log that provides automatic data log file management.
DigitalGlitchFilter
Class to enable glitch filtering on a set of digital inputs.
DigitalInput
Class to read a digital input.
DigitalOutput
Class to write digital outputs.
DigitalSource
DigitalSource Interface.
DMA
Class for configuring Direct Memory Access (DMA) of FPGA inputs.
DMASample
DMA sample.
DMASample.DMAReadStatus
DMA read status.
DoubleSolenoid
DoubleSolenoid class for running 2 channels of high voltage Digital Output on the pneumatics
 module.
DoubleSolenoid.Value
Possible values for a DoubleSolenoid.
DriverStation
Provide access to the network communication data to / from the Driver Station.
DriverStation.Alliance
The robot alliance that the robot is a part of.
DriverStation.MatchType
The type of robot match that the robot is part of.
DSControlWord
A wrapper around Driver Station control word.
DutyCycle
Class to read a duty cycle PWM input.
DutyCycleEncoder
Class for supporting duty cycle/PWM encoders, such as the US Digital MA3 with PWM Output, the
 CTRE Mag Encoder, the Rev Hex Encoder, and the AM Mag Encoder.
Encoder
Class to read quadrature encoders.
Encoder.IndexingType
Encoder indexing types.
Filesystem
Class for interacting with the Filesystem, particularly, interacting with FRC-related paths on
 the system, such as the launch and deploy directories.
GenericHID
Handle input from standard HID devices connected to the Driver Station.
GenericHID.HIDType
USB HID interface type.
GenericHID.RumbleType
Represents a rumble output on the Joystick.
I2C
I2C bus interface class.
I2C.Port
I2C connection ports.
IterativeRobotBase
IterativeRobotBase implements a specific type of robot program framework, extending the RobotBase
 class.
Joystick
Handle input from Flight Joysticks connected to the Driver Station.
Joystick.AxisType
Represents an analog axis on a joystick.
Joystick.ButtonType
Represents a digital button on a joystick.
LEDPattern
An LED pattern controls lights on an LED strip to command patterns of color that may change over
 time.
LEDPattern.GradientType
Types of gradients.
LEDPattern.IndexMapper
A functional interface for index mapping functions.
LEDReader
Generic interface for reading data from an LED buffer.
LEDReader.IndexedColorIterator
A functional interface that allows for iteration over an LED buffer without manually writing an
 indexed for-loop.
LEDWriter
Generic interface for writing data to an LED buffer.
MotorSafety
The Motor Safety feature acts as a watchdog timer for an individual motor.
Notifier
Notifiers run a user-provided callback function on a separate thread.
PneumaticHub
Module class for controlling a REV Robotics Pneumatic Hub.
PneumaticsBase
Interface for pneumatics devices.
PneumaticsControlModule
Module class for controlling a Cross The Road Electronics Pneumatics Control Module.
PneumaticsModuleType
Pneumatics module type.
PowerDistribution
Class for getting voltage, current, temperature, power and energy from the CTRE Power
 Distribution Panel (PDP) or REV Power Distribution Hub (PDH) over CAN.
PowerDistribution.ModuleType
Power distribution module type.
Preferences
The preferences class provides a relatively simple way to save important values to the roboRIO to
 access the next time the roboRIO is booted.
PS4Controller
Handle input from PS4 controllers connected to the Driver Station.
PS4Controller.Axis
Represents an axis on an PS4Controller.
PS4Controller.Button
Represents a digital button on a PS4Controller.
PS5Controller
Handle input from PS5 controllers connected to the Driver Station.
PS5Controller.Axis
Represents an axis on an PS5Controller.
PS5Controller.Button
Represents a digital button on a PS5Controller.
PWM
Class implements the PWM generation in the FPGA.
PWM.PeriodMultiplier
Represents the amount to multiply the minimum servo-pulse pwm period by.
Relay
Class for VEX Robotics Spike style relay outputs.
Relay.Direction
The Direction(s) that a relay is configured to operate in.
Relay.InvalidValueException
This class represents errors in trying to set relay values contradictory to the direction to
 which the relay is set.
Relay.Value
The state to drive a Relay to.
Resource
Deprecated, for removal: This API element is subject to removal in a future version.
Will be removed with no replacement.
RobotBase
Implement a Robot Program framework.
RobotController
Contains functions for roboRIO functionality.
RobotController.RadioLEDState
State for the radio led.
RobotState
Robot state utility functions.
RuntimeType
Runtime type.
SensorUtil
Stores most recent status information as well as containing utility functions for checking
 channels and error processing.
SerialPort
Driver for the serial ports (USB, MXP, Onboard) on the roboRIO.
SerialPort.FlowControl
Represents what type of flow control to use for serial communication.
SerialPort.Parity
Represents the parity to use for serial communications.
SerialPort.Port
Serial port.
SerialPort.StopBits
Represents the number of stop bits to use for Serial Communication.
SerialPort.WriteBufferMode
Represents which type of buffer mode to use when writing to a serial port.
Servo
Standard hobby style servo.
SharpIR
SharpIR analog distance sensor class.
Solenoid
Solenoid class for running high voltage Digital Output on a pneumatics module.
SPI
Represents an SPI bus port.
SPI.Mode
SPI mode.
SPI.Port
SPI port.
StadiaController
Handle input from Stadia controllers connected to the Driver Station.
StadiaController.Axis
Represents an axis on an StadiaController.
StadiaController.Button
Represents a digital button on a StadiaController.
SynchronousInterrupt
Class for handling synchronous (blocking) interrupts.
SynchronousInterrupt.WaitResult
Event trigger combinations for a synchronous interrupt.
Threads
Thread utility functions.
TimedRobot
TimedRobot implements the IterativeRobotBase robot program framework.
Timer
A timer class.
TimesliceRobot
TimesliceRobot extends the TimedRobot robot program framework to provide timeslice scheduling of
 periodic functions.
Tracer
A class for keeping track of how much time it takes for different parts of code to execute.
Ultrasonic
Ultrasonic rangefinder class.
Watchdog
A class that's a wrapper around a watchdog timer.
XboxController
Handle input from Xbox controllers connected to the Driver Station.
XboxController.Axis
Represents an axis on an XboxController.
XboxController.Button
Represents a digital button on a XboxController.