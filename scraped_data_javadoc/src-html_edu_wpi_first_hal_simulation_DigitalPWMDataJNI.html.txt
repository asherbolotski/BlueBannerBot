001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.hal.simulation;
006
007
import edu.wpi.first.hal.JNIWrapper;
008
009
/** JNI for digital PWM data. */
010
public class DigitalPWMDataJNI extends JNIWrapper {
011
public static native int registerInitializedCallback(
012
int index, NotifyCallback callback, boolean initialNotify);
013
014
public static native void cancelInitializedCallback(int index, int uid);
015
016
public static native boolean getInitialized(int index);
017
018
public static native void setInitialized(int index, boolean initialized);
019
020
public static native int registerDutyCycleCallback(
021
int index, NotifyCallback callback, boolean initialNotify);
022
023
public static native void cancelDutyCycleCallback(int index, int uid);
024
025
public static native double getDutyCycle(int index);
026
027
public static native void setDutyCycle(int index, double dutyCycle);
028
029
public static native int registerPinCallback(
030
int index, NotifyCallback callback, boolean initialNotify);
031
032
public static native void cancelPinCallback(int index, int uid);
033
034
public static native int getPin(int index);
035
036
public static native void setPin(int index, int pin);
037
038
public static native void resetData(int index);
039
040
public static native int findForChannel(int channel);
041
042
/** Utility class. */
043
private DigitalPWMDataJNI() {}
044
}