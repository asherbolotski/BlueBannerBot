Package
edu.wpi.first.wpilibj2.command
Class RamseteCommand
java.lang.Object
edu.wpi.first.wpilibj2.command.Command
edu.wpi.first.wpilibj2.command.RamseteCommand
All Implemented Interfaces:
Sendable
public class
RamseteCommand
extends
Command
A command that uses a RAMSETE controller (
RamseteController
) to follow a trajectory
Trajectory
with a differential drive.
The command handles trajectory-following, PID calculations, and feedforwards internally. This
 is intended to be a more-or-less "complete solution" that can be used by teams without a great
 deal of controls expertise.
Advanced teams seeking more flexibility (for example, those who wish to use the onboard PID
 functionality of a "smart" motor controller) may use the secondary constructor that omits the PID
 and feedforward functionality, returning only the raw wheel speeds from the RAMSETE controller.
This class is provided by the NewCommands VendorDep
Nested Class Summary
Nested classes/interfaces inherited from class edu.wpi.first.wpilibj2.command.
Command
Command.InterruptionBehavior
Constructor Summary
Constructors
Constructor
Description
RamseteCommand
(
Trajectory
trajectory,
Supplier
<
Pose2d
> pose,
RamseteController
controller,
SimpleMotorFeedforward
feedforward,
DifferentialDriveKinematics
kinematics,
Supplier
<
DifferentialDriveWheelSpeeds
> wheelSpeeds,
PIDController
leftController,
PIDController
rightController,
BiConsumer
<
Double
,
Double
> outputVolts,
Subsystem
... requirements)
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
RamseteCommand
(
Trajectory
trajectory,
Supplier
<
Pose2d
> pose,
RamseteController
follower,
DifferentialDriveKinematics
kinematics,
BiConsumer
<
Double
,
Double
> outputMetersPerSecond,
Subsystem
... requirements)
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
end
(boolean interrupted)
The action to take when the command ends.
void
execute
()
The main body of a command.
void
initialize
()
The initial subroutine of a command.
void
initSendable
(
SendableBuilder
builder)
Initializes this
Sendable
object.
boolean
isFinished
()
Whether the command has finished.
Methods inherited from class edu.wpi.first.wpilibj2.command.
Command
addRequirements
,
addRequirements
,
alongWith
,
andThen
,
andThen
,
asProxy
,
beforeStarting
,
beforeStarting
,
cancel
,
deadlineFor
,
deadlineWith
,
finallyDo
,
finallyDo
,
getInterruptionBehavior
,
getName
,
getRequirements
,
getSubsystem
,
handleInterrupt
,
hasRequirement
,
ignoringDisable
,
isScheduled
,
onlyIf
,
onlyWhile
,
raceWith
,
repeatedly
,
runsWhenDisabled
,
schedule
,
setName
,
setSubsystem
,
unless
,
until
,
withDeadline
,
withInterruptBehavior
,
withName
,
withTimeout
,
withTimeout
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
RamseteCommand
@Deprecated
(
since
="2025",
forRemoval
=true)
public
RamseteCommand
(
Trajectory
trajectory,
Supplier
<
Pose2d
> pose,
RamseteController
controller,
SimpleMotorFeedforward
feedforward,
DifferentialDriveKinematics
kinematics,
Supplier
<
DifferentialDriveWheelSpeeds
> wheelSpeeds,
PIDController
leftController,
PIDController
rightController,
BiConsumer
<
Double
,
Double
> outputVolts,
Subsystem
... requirements)
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
Constructs a new RamseteCommand that, when executed, will follow the provided trajectory. PID
 control and feedforward are handled internally, and outputs are scaled -12 to 12 representing
 units of volts.
Note: The controller will *not* set the outputVolts to zero upon completion of the path -
 this is left to the user, since it is not appropriate for paths with nonstationary endstates.
Parameters:
trajectory
- The trajectory to follow.
pose
- A function that supplies the robot pose - use one of the odometry classes to
     provide this.
controller
- The RAMSETE controller used to follow the trajectory.
feedforward
- The feedforward to use for the drive.
kinematics
- The kinematics for the robot drivetrain.
wheelSpeeds
- A function that supplies the speeds of the left and right sides of the robot
     drive.
leftController
- The PIDController for the left side of the robot drive.
rightController
- The PIDController for the right side of the robot drive.
outputVolts
- A function that consumes the computed left and right outputs (in volts) for
     the robot drive.
requirements
- The subsystems to require.
RamseteCommand
@Deprecated
(
since
="2025",
forRemoval
=true)
public
RamseteCommand
(
Trajectory
trajectory,
Supplier
<
Pose2d
> pose,
RamseteController
follower,
DifferentialDriveKinematics
kinematics,
BiConsumer
<
Double
,
Double
> outputMetersPerSecond,
Subsystem
... requirements)
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
Constructs a new RamseteCommand that, when executed, will follow the provided trajectory.
 Performs no PID control and calculates no feedforwards; outputs are the raw wheel speeds from
 the RAMSETE controller, and will need to be converted into a usable form by the user.
Parameters:
trajectory
- The trajectory to follow.
pose
- A function that supplies the robot pose - use one of the odometry classes to
     provide this.
follower
- The RAMSETE follower used to follow the trajectory.
kinematics
- The kinematics for the robot drivetrain.
outputMetersPerSecond
- A function that consumes the computed left and right wheel speeds.
requirements
- The subsystems to require.
Method Details
initialize
public
void
initialize
()
Description copied from class:
Command
The initial subroutine of a command. Called once when the command is initially scheduled.
Overrides:
initialize
in class
Command
execute
public
void
execute
()
Description copied from class:
Command
The main body of a command. Called repeatedly while the command is scheduled.
Overrides:
execute
in class
Command
end
public
void
end
(boolean interrupted)
Description copied from class:
Command
The action to take when the command ends. Called when either the command finishes normally, or
 when it interrupted/canceled.
Do not schedule commands here that share requirements with this command. Use
Command.andThen(Command...)
instead.
Overrides:
end
in class
Command
Parameters:
interrupted
- whether the command was interrupted/canceled
isFinished
public
boolean
isFinished
()
Description copied from class:
Command
Whether the command has finished. Once a command finishes, the scheduler will call its end()
 method and un-schedule it.
Overrides:
isFinished
in class
Command
Returns:
whether the command has finished.
initSendable
public
void
initSendable
(
SendableBuilder
builder)
Description copied from interface:
Sendable
Initializes this
Sendable
object.
Specified by:
initSendable
in interface
Sendable
Overrides:
initSendable
in class
Command
Parameters:
builder
- sendable builder