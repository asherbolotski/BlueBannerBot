001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
// THIS FILE WAS AUTO-GENERATED BY ./hal/generate_usage_reporting.py. DO NOT MODIFY
006
007
package edu.wpi.first.hal;
008
009
/**
010
* JNI wrapper for library <b>FRC_NetworkCommunication</b><br>.
011
*/
012
@SuppressWarnings("PMD.MissingStaticMethodInNonInstantiatableClass")
013
public final class FRCNetComm {
014
/**
015
* Resource type from UsageReporting.
016
*/
017
@SuppressWarnings("TypeName")
018
public static final class tResourceType {
019
private tResourceType() {
020
}
021
022
/** kResourceType_Controller = 0. */
023
public static final int kResourceType_Controller = 0;
024
/** kResourceType_Module = 1. */
025
public static final int kResourceType_Module = 1;
026
/** kResourceType_Language = 2. */
027
public static final int kResourceType_Language = 2;
028
/** kResourceType_CANPlugin = 3. */
029
public static final int kResourceType_CANPlugin = 3;
030
/** kResourceType_Accelerometer = 4. */
031
public static final int kResourceType_Accelerometer = 4;
032
/** kResourceType_ADXL345 = 5. */
033
public static final int kResourceType_ADXL345 = 5;
034
/** kResourceType_AnalogChannel = 6. */
035
public static final int kResourceType_AnalogChannel = 6;
036
/** kResourceType_AnalogTrigger = 7. */
037
public static final int kResourceType_AnalogTrigger = 7;
038
/** kResourceType_AnalogTriggerOutput = 8. */
039
public static final int kResourceType_AnalogTriggerOutput = 8;
040
/** kResourceType_CANJaguar = 9. */
041
public static final int kResourceType_CANJaguar = 9;
042
/** kResourceType_Compressor = 10. */
043
public static final int kResourceType_Compressor = 10;
044
/** kResourceType_Counter = 11. */
045
public static final int kResourceType_Counter = 11;
046
/** kResourceType_Dashboard = 12. */
047
public static final int kResourceType_Dashboard = 12;
048
/** kResourceType_DigitalInput = 13. */
049
public static final int kResourceType_DigitalInput = 13;
050
/** kResourceType_DigitalOutput = 14. */
051
public static final int kResourceType_DigitalOutput = 14;
052
/** kResourceType_DriverStationCIO = 15. */
053
public static final int kResourceType_DriverStationCIO = 15;
054
/** kResourceType_DriverStationEIO = 16. */
055
public static final int kResourceType_DriverStationEIO = 16;
056
/** kResourceType_DriverStationLCD = 17. */
057
public static final int kResourceType_DriverStationLCD = 17;
058
/** kResourceType_Encoder = 18. */
059
public static final int kResourceType_Encoder = 18;
060
/** kResourceType_GearTooth = 19. */
061
public static final int kResourceType_GearTooth = 19;
062
/** kResourceType_Gyro = 20. */
063
public static final int kResourceType_Gyro = 20;
064
/** kResourceType_I2C = 21. */
065
public static final int kResourceType_I2C = 21;
066
/** kResourceType_Framework = 22. */
067
public static final int kResourceType_Framework = 22;
068
/** kResourceType_Jaguar = 23. */
069
public static final int kResourceType_Jaguar = 23;
070
/** kResourceType_Joystick = 24. */
071
public static final int kResourceType_Joystick = 24;
072
/** kResourceType_Kinect = 25. */
073
public static final int kResourceType_Kinect = 25;
074
/** kResourceType_KinectStick = 26. */
075
public static final int kResourceType_KinectStick = 26;
076
/** kResourceType_PIDController = 27. */
077
public static final int kResourceType_PIDController = 27;
078
/** kResourceType_Preferences = 28. */
079
public static final int kResourceType_Preferences = 28;
080
/** kResourceType_PWM = 29. */
081
public static final int kResourceType_PWM = 29;
082
/** kResourceType_Relay = 30. */
083
public static final int kResourceType_Relay = 30;
084
/** kResourceType_RobotDrive = 31. */
085
public static final int kResourceType_RobotDrive = 31;
086
/** kResourceType_SerialPort = 32. */
087
public static final int kResourceType_SerialPort = 32;
088
/** kResourceType_Servo = 33. */
089
public static final int kResourceType_Servo = 33;
090
/** kResourceType_Solenoid = 34. */
091
public static final int kResourceType_Solenoid = 34;
092
/** kResourceType_SPI = 35. */
093
public static final int kResourceType_SPI = 35;
094
/** kResourceType_Task = 36. */
095
public static final int kResourceType_Task = 36;
096
/** kResourceType_Ultrasonic = 37. */
097
public static final int kResourceType_Ultrasonic = 37;
098
/** kResourceType_Victor = 38. */
099
public static final int kResourceType_Victor = 38;
100
/** kResourceType_Button = 39. */
101
public static final int kResourceType_Button = 39;
102
/** kResourceType_Command = 40. */
103
public static final int kResourceType_Command = 40;
104
/** kResourceType_AxisCamera = 41. */
105
public static final int kResourceType_AxisCamera = 41;
106
/** kResourceType_PCVideoServer = 42. */
107
public static final int kResourceType_PCVideoServer = 42;
108
/** kResourceType_SmartDashboard = 43. */
109
public static final int kResourceType_SmartDashboard = 43;
110
/** kResourceType_Talon = 44. */
111
public static final int kResourceType_Talon = 44;
112
/** kResourceType_HiTechnicColorSensor = 45. */
113
public static final int kResourceType_HiTechnicColorSensor = 45;
114
/** kResourceType_HiTechnicAccel = 46. */
115
public static final int kResourceType_HiTechnicAccel = 46;
116
/** kResourceType_HiTechnicCompass = 47. */
117
public static final int kResourceType_HiTechnicCompass = 47;
118
/** kResourceType_SRF08 = 48. */
119
public static final int kResourceType_SRF08 = 48;
120
/** kResourceType_AnalogOutput = 49. */
121
public static final int kResourceType_AnalogOutput = 49;
122
/** kResourceType_VictorSP = 50. */
123
public static final int kResourceType_VictorSP = 50;
124
/** kResourceType_PWMTalonSRX = 51. */
125
public static final int kResourceType_PWMTalonSRX = 51;
126
/** kResourceType_CANTalonSRX = 52. */
127
public static final int kResourceType_CANTalonSRX = 52;
128
/** kResourceType_ADXL362 = 53. */
129
public static final int kResourceType_ADXL362 = 53;
130
/** kResourceType_ADXRS450 = 54. */
131
public static final int kResourceType_ADXRS450 = 54;
132
/** kResourceType_RevSPARK = 55. */
133
public static final int kResourceType_RevSPARK = 55;
134
/** kResourceType_MindsensorsSD540 = 56. */
135
public static final int kResourceType_MindsensorsSD540 = 56;
136
/** kResourceType_DigitalGlitchFilter = 57. */
137
public static final int kResourceType_DigitalGlitchFilter = 57;
138
/** kResourceType_ADIS16448 = 58. */
139
public static final int kResourceType_ADIS16448 = 58;
140
/** kResourceType_PDP = 59. */
141
public static final int kResourceType_PDP = 59;
142
/** kResourceType_PCM = 60. */
143
public static final int kResourceType_PCM = 60;
144
/** kResourceType_PigeonIMU = 61. */
145
public static final int kResourceType_PigeonIMU = 61;
146
/** kResourceType_NidecBrushless = 62. */
147
public static final int kResourceType_NidecBrushless = 62;
148
/** kResourceType_CANifier = 63. */
149
public static final int kResourceType_CANifier = 63;
150
/** kResourceType_TalonFX = 64. */
151
public static final int kResourceType_TalonFX = 64;
152
/** kResourceType_CTRE_future1 = 65. */
153
public static final int kResourceType_CTRE_future1 = 65;
154
/** kResourceType_CTRE_future2 = 66. */
155
public static final int kResourceType_CTRE_future2 = 66;
156
/** kResourceType_CTRE_future3 = 67. */
157
public static final int kResourceType_CTRE_future3 = 67;
158
/** kResourceType_CTRE_future4 = 68. */
159
public static final int kResourceType_CTRE_future4 = 68;
160
/** kResourceType_CTRE_future5 = 69. */
161
public static final int kResourceType_CTRE_future5 = 69;
162
/** kResourceType_CTRE_future6 = 70. */
163
public static final int kResourceType_CTRE_future6 = 70;
164
/** kResourceType_LinearFilter = 71. */
165
public static final int kResourceType_LinearFilter = 71;
166
/** kResourceType_XboxController = 72. */
167
public static final int kResourceType_XboxController = 72;
168
/** kResourceType_UsbCamera = 73. */
169
public static final int kResourceType_UsbCamera = 73;
170
/** kResourceType_NavX = 74. */
171
public static final int kResourceType_NavX = 74;
172
/** kResourceType_Pixy = 75. */
173
public static final int kResourceType_Pixy = 75;
174
/** kResourceType_Pixy2 = 76. */
175
public static final int kResourceType_Pixy2 = 76;
176
/** kResourceType_ScanseSweep = 77. */
177
public static final int kResourceType_ScanseSweep = 77;
178
/** kResourceType_Shuffleboard = 78. */
179
public static final int kResourceType_Shuffleboard = 78;
180
/** kResourceType_CAN = 79. */
181
public static final int kResourceType_CAN = 79;
182
/** kResourceType_DigilentDMC60 = 80. */
183
public static final int kResourceType_DigilentDMC60 = 80;
184
/** kResourceType_PWMVictorSPX = 81. */
185
public static final int kResourceType_PWMVictorSPX = 81;
186
/** kResourceType_RevSparkMaxPWM = 82. */
187
public static final int kResourceType_RevSparkMaxPWM = 82;
188
/** kResourceType_RevSparkMaxCAN = 83. */
189
public static final int kResourceType_RevSparkMaxCAN = 83;
190
/** kResourceType_ADIS16470 = 84. */
191
public static final int kResourceType_ADIS16470 = 84;
192
/** kResourceType_PIDController2 = 85. */
193
public static final int kResourceType_PIDController2 = 85;
194
/** kResourceType_ProfiledPIDController = 86. */
195
public static final int kResourceType_ProfiledPIDController = 86;
196
/** kResourceType_Kinematics = 87. */
197
public static final int kResourceType_Kinematics = 87;
198
/** kResourceType_Odometry = 88. */
199
public static final int kResourceType_Odometry = 88;
200
/** kResourceType_Units = 89. */
201
public static final int kResourceType_Units = 89;
202
/** kResourceType_TrapezoidProfile = 90. */
203
public static final int kResourceType_TrapezoidProfile = 90;
204
/** kResourceType_DutyCycle = 91. */
205
public static final int kResourceType_DutyCycle = 91;
206
/** kResourceType_AddressableLEDs = 92. */
207
public static final int kResourceType_AddressableLEDs = 92;
208
/** kResourceType_FusionVenom = 93. */
209
public static final int kResourceType_FusionVenom = 93;
210
/** kResourceType_CTRE_future7 = 94. */
211
public static final int kResourceType_CTRE_future7 = 94;
212
/** kResourceType_CTRE_future8 = 95. */
213
public static final int kResourceType_CTRE_future8 = 95;
214
/** kResourceType_CTRE_future9 = 96. */
215
public static final int kResourceType_CTRE_future9 = 96;
216
/** kResourceType_CTRE_future10 = 97. */
217
public static final int kResourceType_CTRE_future10 = 97;
218
/** kResourceType_CTRE_future11 = 98. */
219
public static final int kResourceType_CTRE_future11 = 98;
220
/** kResourceType_CTRE_future12 = 99. */
221
public static final int kResourceType_CTRE_future12 = 99;
222
/** kResourceType_CTRE_future13 = 100. */
223
public static final int kResourceType_CTRE_future13 = 100;
224
/** kResourceType_CTRE_future14 = 101. */
225
public static final int kResourceType_CTRE_future14 = 101;
226
/** kResourceType_ExponentialProfile = 102. */
227
public static final int kResourceType_ExponentialProfile = 102;
228
/** kResourceType_PS4Controller = 103. */
229
public static final int kResourceType_PS4Controller = 103;
230
/** kResourceType_PhotonCamera = 104. */
231
public static final int kResourceType_PhotonCamera = 104;
232
/** kResourceType_PhotonPoseEstimator = 105. */
233
public static final int kResourceType_PhotonPoseEstimator = 105;
234
/** kResourceType_PathPlannerPath = 106. */
235
public static final int kResourceType_PathPlannerPath = 106;
236
/** kResourceType_PathPlannerAuto = 107. */
237
public static final int kResourceType_PathPlannerAuto = 107;
238
/** kResourceType_PathFindingCommand = 108. */
239
public static final int kResourceType_PathFindingCommand = 108;
240
/** kResourceType_Redux_future1 = 109. */
241
public static final int kResourceType_Redux_future1 = 109;
242
/** kResourceType_Redux_future2 = 110. */
243
public static final int kResourceType_Redux_future2 = 110;
244
/** kResourceType_Redux_future3 = 111. */
245
public static final int kResourceType_Redux_future3 = 111;
246
/** kResourceType_Redux_future4 = 112. */
247
public static final int kResourceType_Redux_future4 = 112;
248
/** kResourceType_Redux_future5 = 113. */
249
public static final int kResourceType_Redux_future5 = 113;
250
/** kResourceType_RevSparkFlexCAN = 114. */
251
public static final int kResourceType_RevSparkFlexCAN = 114;
252
/** kResourceType_RevSparkFlexPWM = 115. */
253
public static final int kResourceType_RevSparkFlexPWM = 115;
254
/** kResourceType_BangBangController = 116. */
255
public static final int kResourceType_BangBangController = 116;
256
/** kResourceType_DataLogManager = 117. */
257
public static final int kResourceType_DataLogManager = 117;
258
/** kResourceType_LoggingFramework = 118. */
259
public static final int kResourceType_LoggingFramework = 118;
260
/** kResourceType_ChoreoTrajectory = 119. */
261
public static final int kResourceType_ChoreoTrajectory = 119;
262
/** kResourceType_ChoreoTrigger = 120. */
263
public static final int kResourceType_ChoreoTrigger = 120;
264
/** kResourceType_PathWeaverTrajectory = 121. */
265
public static final int kResourceType_PathWeaverTrajectory = 121;
266
/** kResourceType_Koors40 = 122. */
267
public static final int kResourceType_Koors40 = 122;
268
/** kResourceType_ThriftyNova = 123. */
269
public static final int kResourceType_ThriftyNova = 123;
270
/** kResourceType_RevServoHub = 124. */
271
public static final int kResourceType_RevServoHub = 124;
272
/** kResourceType_PWFSEN36005 = 125. */
273
public static final int kResourceType_PWFSEN36005 = 125;
274
/** kResourceType_LaserShark = 126. */
275
public static final int kResourceType_LaserShark = 126;
276
}
277
278
/**
279
* Instances from UsageReporting.
280
*/
281
@SuppressWarnings("TypeName")
282
public static final class tInstances {
283
private tInstances() {
284
}
285
286
/** kLanguage_LabVIEW = 1. */
287
public static final int kLanguage_LabVIEW = 1;
288
/** kLanguage_CPlusPlus = 2. */
289
public static final int kLanguage_CPlusPlus = 2;
290
/** kLanguage_Java = 3. */
291
public static final int kLanguage_Java = 3;
292
/** kLanguage_Python = 4. */
293
public static final int kLanguage_Python = 4;
294
/** kLanguage_DotNet = 5. */
295
public static final int kLanguage_DotNet = 5;
296
/** kLanguage_Kotlin = 6. */
297
public static final int kLanguage_Kotlin = 6;
298
/** kLanguage_Rust = 7. */
299
public static final int kLanguage_Rust = 7;
300
/** kCANPlugin_BlackJagBridge = 1. */
301
public static final int kCANPlugin_BlackJagBridge = 1;
302
/** kCANPlugin_2CAN = 2. */
303
public static final int kCANPlugin_2CAN = 2;
304
/** kFramework_Iterative = 1. */
305
public static final int kFramework_Iterative = 1;
306
/** kFramework_Simple = 2. */
307
public static final int kFramework_Simple = 2;
308
/** kFramework_CommandControl = 3. */
309
public static final int kFramework_CommandControl = 3;
310
/** kFramework_Timed = 4. */
311
public static final int kFramework_Timed = 4;
312
/** kFramework_ROS = 5. */
313
public static final int kFramework_ROS = 5;
314
/** kFramework_RobotBuilder = 6. */
315
public static final int kFramework_RobotBuilder = 6;
316
/** kFramework_AdvantageKit = 7. */
317
public static final int kFramework_AdvantageKit = 7;
318
/** kFramework_MagicBot = 8. */
319
public static final int kFramework_MagicBot = 8;
320
/** kFramework_KitBotTraditional = 9. */
321
public static final int kFramework_KitBotTraditional = 9;
322
/** kFramework_KitBotInline = 10. */
323
public static final int kFramework_KitBotInline = 10;
324
/** kRobotDrive_ArcadeStandard = 1. */
325
public static final int kRobotDrive_ArcadeStandard = 1;
326
/** kRobotDrive_ArcadeButtonSpin = 2. */
327
public static final int kRobotDrive_ArcadeButtonSpin = 2;
328
/** kRobotDrive_ArcadeRatioCurve = 3. */
329
public static final int kRobotDrive_ArcadeRatioCurve = 3;
330
/** kRobotDrive_Tank = 4. */
331
public static final int kRobotDrive_Tank = 4;
332
/** kRobotDrive_MecanumPolar = 5. */
333
public static final int kRobotDrive_MecanumPolar = 5;
334
/** kRobotDrive_MecanumCartesian = 6. */
335
public static final int kRobotDrive_MecanumCartesian = 6;
336
/** kRobotDrive2_DifferentialArcade = 7. */
337
public static final int kRobotDrive2_DifferentialArcade = 7;
338
/** kRobotDrive2_DifferentialTank = 8. */
339
public static final int kRobotDrive2_DifferentialTank = 8;
340
/** kRobotDrive2_DifferentialCurvature = 9. */
341
public static final int kRobotDrive2_DifferentialCurvature = 9;
342
/** kRobotDrive2_MecanumCartesian = 10. */
343
public static final int kRobotDrive2_MecanumCartesian = 10;
344
/** kRobotDrive2_MecanumPolar = 11. */
345
public static final int kRobotDrive2_MecanumPolar = 11;
346
/** kRobotDrive2_KilloughCartesian = 12. */
347
public static final int kRobotDrive2_KilloughCartesian = 12;
348
/** kRobotDrive2_KilloughPolar = 13. */
349
public static final int kRobotDrive2_KilloughPolar = 13;
350
/** kRobotDriveSwerve_Other = 14. */
351
public static final int kRobotDriveSwerve_Other = 14;
352
/** kRobotDriveSwerve_YAGSL = 15. */
353
public static final int kRobotDriveSwerve_YAGSL = 15;
354
/** kRobotDriveSwerve_CTRE = 16. */
355
public static final int kRobotDriveSwerve_CTRE = 16;
356
/** kRobotDriveSwerve_MaxSwerve = 17. */
357
public static final int kRobotDriveSwerve_MaxSwerve = 17;
358
/** kRobotDriveSwerve_AdvantageKit = 18. */
359
public static final int kRobotDriveSwerve_AdvantageKit = 18;
360
/** kDriverStationCIO_Analog = 1. */
361
public static final int kDriverStationCIO_Analog = 1;
362
/** kDriverStationCIO_DigitalIn = 2. */
363
public static final int kDriverStationCIO_DigitalIn = 2;
364
/** kDriverStationCIO_DigitalOut = 3. */
365
public static final int kDriverStationCIO_DigitalOut = 3;
366
/** kDriverStationEIO_Acceleration = 1. */
367
public static final int kDriverStationEIO_Acceleration = 1;
368
/** kDriverStationEIO_AnalogIn = 2. */
369
public static final int kDriverStationEIO_AnalogIn = 2;
370
/** kDriverStationEIO_AnalogOut = 3. */
371
public static final int kDriverStationEIO_AnalogOut = 3;
372
/** kDriverStationEIO_Button = 4. */
373
public static final int kDriverStationEIO_Button = 4;
374
/** kDriverStationEIO_LED = 5. */
375
public static final int kDriverStationEIO_LED = 5;
376
/** kDriverStationEIO_DigitalIn = 6. */
377
public static final int kDriverStationEIO_DigitalIn = 6;
378
/** kDriverStationEIO_DigitalOut = 7. */
379
public static final int kDriverStationEIO_DigitalOut = 7;
380
/** kDriverStationEIO_FixedDigitalOut = 8. */
381
public static final int kDriverStationEIO_FixedDigitalOut = 8;
382
/** kDriverStationEIO_PWM = 9. */
383
public static final int kDriverStationEIO_PWM = 9;
384
/** kDriverStationEIO_Encoder = 10. */
385
public static final int kDriverStationEIO_Encoder = 10;
386
/** kDriverStationEIO_TouchSlider = 11. */
387
public static final int kDriverStationEIO_TouchSlider = 11;
388
/** kADXL345_SPI = 1. */
389
public static final int kADXL345_SPI = 1;
390
/** kADXL345_I2C = 2. */
391
public static final int kADXL345_I2C = 2;
392
/** kCommand_Scheduler = 1. */
393
public static final int kCommand_Scheduler = 1;
394
/** kCommand2_Scheduler = 2. */
395
public static final int kCommand2_Scheduler = 2;
396
/** kSmartDashboard_Instance = 1. */
397
public static final int kSmartDashboard_Instance = 1;
398
/** kSmartDashboard_LiveWindow = 2. */
399
public static final int kSmartDashboard_LiveWindow = 2;
400
/** kKinematics_DifferentialDrive = 1. */
401
public static final int kKinematics_DifferentialDrive = 1;
402
/** kKinematics_MecanumDrive = 2. */
403
public static final int kKinematics_MecanumDrive = 2;
404
/** kKinematics_SwerveDrive = 3. */
405
public static final int kKinematics_SwerveDrive = 3;
406
/** kOdometry_DifferentialDrive = 1. */
407
public static final int kOdometry_DifferentialDrive = 1;
408
/** kOdometry_MecanumDrive = 2. */
409
public static final int kOdometry_MecanumDrive = 2;
410
/** kOdometry_SwerveDrive = 3. */
411
public static final int kOdometry_SwerveDrive = 3;
412
/** kDashboard_Unknown = 1. */
413
public static final int kDashboard_Unknown = 1;
414
/** kDashboard_Glass = 2. */
415
public static final int kDashboard_Glass = 2;
416
/** kDashboard_SmartDashboard = 3. */
417
public static final int kDashboard_SmartDashboard = 3;
418
/** kDashboard_Shuffleboard = 4. */
419
public static final int kDashboard_Shuffleboard = 4;
420
/** kDashboard_Elastic = 5. */
421
public static final int kDashboard_Elastic = 5;
422
/** kDashboard_LabVIEW = 6. */
423
public static final int kDashboard_LabVIEW = 6;
424
/** kDashboard_AdvantageScope = 7. */
425
public static final int kDashboard_AdvantageScope = 7;
426
/** kDashboard_QFRCDashboard = 8. */
427
public static final int kDashboard_QFRCDashboard = 8;
428
/** kDashboard_FRCWebComponents = 9. */
429
public static final int kDashboard_FRCWebComponents = 9;
430
/** kDataLogLocation_Onboard = 1. */
431
public static final int kDataLogLocation_Onboard = 1;
432
/** kDataLogLocation_USB = 2. */
433
public static final int kDataLogLocation_USB = 2;
434
/** kLoggingFramework_Other = 1. */
435
public static final int kLoggingFramework_Other = 1;
436
/** kLoggingFramework_Epilogue = 2. */
437
public static final int kLoggingFramework_Epilogue = 2;
438
/** kLoggingFramework_Monologue = 3. */
439
public static final int kLoggingFramework_Monologue = 3;
440
/** kLoggingFramework_AdvantageKit = 4. */
441
public static final int kLoggingFramework_AdvantageKit = 4;
442
/** kLoggingFramework_DogLog = 5. */
443
public static final int kLoggingFramework_DogLog = 5;
444
/** kPDP_CTRE = 1. */
445
public static final int kPDP_CTRE = 1;
446
/** kPDP_REV = 2. */
447
public static final int kPDP_REV = 2;
448
/** kPDP_Unknown = 3. */
449
public static final int kPDP_Unknown = 3;
450
}
451
452
/** Utility class. */
453
private FRCNetComm() {}
454
}