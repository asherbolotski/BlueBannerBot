Package
edu.wpi.first.units
Class LinearAccelerationUnit
java.lang.Object
edu.wpi.first.units.Unit
edu.wpi.first.units.PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
edu.wpi.first.units.LinearAccelerationUnit
public final class
LinearAccelerationUnit
extends
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
A unit of linear acceleration like
Units.MetersPerSecondPerSecond
.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
static
LinearAccelerationUnit
combine
(
LinearVelocityUnit
velocity,
TimeUnit
period)
Combines a linear velocity and time unit to form a unit of linear acceleration.
double
convertFrom
(double magnitude,
LinearAccelerationUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
LinearAccelerationUnit
getBaseUnit
()
Gets the base unit of measurement that this unit is derived from.
TimeUnit
getPeriod
()
Gets the unit of the acceleration period (how long it takes for a measured velocity to change
 by one unit of velocity).
LinearVelocityUnit
getUnit
()
Gets the unit of the changing velocity.
MutLinearAcceleration
mutable
(double initialMagnitude)
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit.
LinearAcceleration
of
(double magnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit.
LinearAcceleration
ofBaseUnits
(double baseUnitMagnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
LinearAcceleration
one
()
Gets a measure with a magnitude of 1.0 in terms of this unit.
VelocityUnit
<
LinearAccelerationUnit
>
per
(
TimeUnit
time)
Combines this unit with a unit of time.
<U extends
Unit
>
PerUnit
<
LinearAccelerationUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
LinearAcceleration
zero
()
Gets a measure of zero magnitude in terms of this unit.
Methods inherited from class edu.wpi.first.units.
PerUnit
combine
,
convertFrom
,
denominator
,
equals
,
hashCode
,
mult
,
mutableNative
,
numerator
,
ofNative
,
ofNativeBaseUnits
,
reciprocal
Methods inherited from class edu.wpi.first.units.
Unit
equivalent
,
fromBaseUnits
,
getConverterFromBase
,
getConverterToBase
,
isBaseUnit
,
name
,
symbol
,
toBaseUnits
,
toString
Methods inherited from class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
combine
public static
LinearAccelerationUnit
combine
(
LinearVelocityUnit
velocity,
TimeUnit
period)
Combines a linear velocity and time unit to form a unit of linear acceleration.
Parameters:
velocity
- the unit of linear velocity
period
- the unit of time
Returns:
the combined unit of linear acceleration
getBaseUnit
public
LinearAccelerationUnit
getBaseUnit
()
Description copied from class:
Unit
Gets the base unit of measurement that this unit is derived from. If the unit is the base unit,
 the unit will be returned.
NOTE:
Subclasses
must
override this method to provide the
 correct return type. Failing to do say will make unit combinations that use it break at
 runtime!
Unit baseUnit = new Unit(null, ...);
   baseUnit.getBaseUnit(); // returns baseUnit

   Unit derivedUnit = new Unit(baseUnit, ...);
   derivedUnit.getBaseUnit(); // returns baseUnit
Overrides:
getBaseUnit
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Returns:
the base unit
of
public
LinearAcceleration
of
(double magnitude)
Description copied from class:
PerUnit
Creates a new immutable measurement of the given magnitude in terms of this unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Note: When called on an object of type
PerUnit
(and
not
a subclass!), this
 method will always return a
Per
instance. If you want to
 avoid casting, use
PerUnit.ofNative(double)
that returns a
Per
instance directly.
Overrides:
of
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Parameters:
magnitude
- the magnitude of the measure
Returns:
the ratio measure
ofBaseUnits
public
LinearAcceleration
ofBaseUnits
(double baseUnitMagnitude)
Description copied from class:
PerUnit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Note: When called on an object of type
PerUnit
(and
not
a subclass!), this
 method will always return a
Per
instance. If you want to
 avoid casting, use
PerUnit.ofNativeBaseUnits(double)
that returns a
Per
instance
 directly.
Overrides:
ofBaseUnits
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Parameters:
baseUnitMagnitude
- the magnitude of the measure in terms of its base units.
Returns:
the ratio measure
zero
public
LinearAcceleration
zero
()
Description copied from class:
Unit
Gets a measure of zero magnitude in terms of this unit. The returned object is guaranteed to be
 of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override this
 method to sharpen the return type.
Overrides:
zero
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Returns:
a zero-magnitude measure of this unit
one
public
LinearAcceleration
one
()
Description copied from class:
Unit
Gets a measure with a magnitude of 1.0 in terms of this unit. The returned object is guaranteed
 to be of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override
 this method to sharpen the return type.
Overrides:
one
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Returns:
a measure of magnitude 1.0 in terms of this unit
mutable
public
MutLinearAcceleration
mutable
(double initialMagnitude)
Description copied from class:
PerUnit
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit. Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Note: When called on an object of type
PerUnit
(and
not
a subclass!), this
 method will always return a
MutPer
instance.
Overrides:
mutable
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Parameters:
initialMagnitude
- the starting magnitude of the measure
Returns:
the ratio measure
per
public
VelocityUnit
<
LinearAccelerationUnit
>
per
(
TimeUnit
time)
Description copied from class:
Unit
Combines this unit with a unit of time. This often - but not always - results in a velocity.
 Subclasses should sharpen the return type to be unit-specific.
Overrides:
per
in class
PerUnit
<
LinearVelocityUnit
,
TimeUnit
>
Parameters:
time
- the unit of time
Returns:
the combined unit
per
public
<U extends
Unit
>
PerUnit
<
LinearAccelerationUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
Type Parameters:
U
- the type of the other unit
Parameters:
other
- the other unit
Returns:
the ratio unit
convertFrom
public
double
convertFrom
(double magnitude,
LinearAccelerationUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
Parameters:
magnitude
- the magnitude of the measurement in terms of the other unit
otherUnit
- the other unit
Returns:
the value of the measurement in terms of this unit
getUnit
public
LinearVelocityUnit
getUnit
()
Gets the unit of the changing velocity. This is equivalent to
PerUnit.numerator()
and is left
 for historical purposes.
Returns:
the unit of the changing velocity
getPeriod
public
TimeUnit
getPeriod
()
Gets the unit of the acceleration period (how long it takes for a measured velocity to change
 by one unit of velocity). This is equivalent to
PerUnit.numerator()
and is left for historical
 purposes.
Returns:
the unit of the acceleration period