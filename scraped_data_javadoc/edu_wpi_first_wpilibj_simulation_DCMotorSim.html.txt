Package
edu.wpi.first.wpilibj.simulation
Class DCMotorSim
java.lang.Object
edu.wpi.first.wpilibj.simulation.LinearSystemSim
<
N2
,
N1
,
N2
>
edu.wpi.first.wpilibj.simulation.DCMotorSim
public class
DCMotorSim
extends
LinearSystemSim
<
N2
,
N1
,
N2
>
Represents a simulated DC motor mechanism.
Field Summary
Fields inherited from class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
m_measurementStdDevs
,
m_plant
,
m_u
,
m_x
,
m_y
Constructor Summary
Constructors
Constructor
Description
DCMotorSim
(
LinearSystem
<
N2
,
N1
,
N2
> plant,
DCMotor
gearbox,
 double... measurementStdDevs)
Creates a simulated DC motor mechanism.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
AngularAcceleration
getAngularAcceleration
()
Returns the DC motor's acceleration.
double
getAngularAccelerationRadPerSecSq
()
Returns the DC motor's acceleration in Radians Per Second Squared.
Angle
getAngularPosition
()
Returns the DC motor's position.
double
getAngularPositionRad
()
Returns the DC motor's position.
double
getAngularPositionRotations
()
Returns the DC motor's position in rotations.
AngularVelocity
getAngularVelocity
()
Returns the DC motor's velocity.
double
getAngularVelocityRadPerSec
()
Returns the DC motor's velocity.
double
getAngularVelocityRPM
()
Returns the DC motor's velocity in RPM.
double
getCurrentDrawAmps
()
Returns the DC motor's current draw.
DCMotor
getGearbox
()
Returns the gearbox for the DC motor.
double
getGearing
()
Returns the gear ratio of the DC motor.
double
getInputVoltage
()
Gets the input voltage for the DC motor.
double
getJKgMetersSquared
()
Returns the moment of inertia of the DC motor.
double
getTorqueNewtonMeters
()
Returns the DC motor's torque in Newton-Meters.
void
setAngle
(double angularPositionRad)
Sets the DC motor's angular position.
void
setAngularVelocity
(double angularVelocityRadPerSec)
Sets the DC motor's angular velocity.
void
setInputVoltage
(double volts)
Sets the input voltage for the DC motor.
void
setState
(double angularPositionRad,
 double angularVelocityRadPerSec)
Sets the state of the DC motor.
Methods inherited from class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
clampInput
,
getInput
,
getInput
,
getOutput
,
getOutput
,
setInput
,
setInput
,
setInput
,
setState
,
update
,
updateX
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
DCMotorSim
public
DCMotorSim
(
LinearSystem
<
N2
,
N1
,
N2
> plant,
DCMotor
gearbox,
 double... measurementStdDevs)
Creates a simulated DC motor mechanism.
Parameters:
plant
- The linear system representing the DC motor. This system can be created with
LinearSystemId.createDCMotorSystem(DCMotor, double, double)
or
LinearSystemId.createDCMotorSystem(double, double)
. If
LinearSystemId.createDCMotorSystem(double, double)
is used, the distance unit must be radians.
gearbox
- The type of and number of motors in the DC motor gearbox.
measurementStdDevs
- The standard deviations of the measurements. Can be omitted if no
     noise is desired. If present must have 2 elements. The first element is for position. The
     second element is for velocity.
Method Details
setState
public
void
setState
(double angularPositionRad,
 double angularVelocityRadPerSec)
Sets the state of the DC motor.
Parameters:
angularPositionRad
- The new position in radians.
angularVelocityRadPerSec
- The new velocity in radians per second.
setAngle
public
void
setAngle
(double angularPositionRad)
Sets the DC motor's angular position.
Parameters:
angularPositionRad
- The new position in radians.
setAngularVelocity
public
void
setAngularVelocity
(double angularVelocityRadPerSec)
Sets the DC motor's angular velocity.
Parameters:
angularVelocityRadPerSec
- The new velocity in radians per second.
getGearing
public
double
getGearing
()
Returns the gear ratio of the DC motor.
Returns:
the DC motor's gear ratio.
getJKgMetersSquared
public
double
getJKgMetersSquared
()
Returns the moment of inertia of the DC motor.
Returns:
The DC motor's moment of inertia.
getGearbox
public
DCMotor
getGearbox
()
Returns the gearbox for the DC motor.
Returns:
The DC motor's gearbox.
getAngularPositionRad
public
double
getAngularPositionRad
()
Returns the DC motor's position.
Returns:
The DC motor's position.
getAngularPositionRotations
public
double
getAngularPositionRotations
()
Returns the DC motor's position in rotations.
Returns:
The DC motor's position in rotations.
getAngularPosition
public
Angle
getAngularPosition
()
Returns the DC motor's position.
Returns:
The DC motor's position
getAngularVelocityRadPerSec
public
double
getAngularVelocityRadPerSec
()
Returns the DC motor's velocity.
Returns:
The DC motor's velocity.
getAngularVelocityRPM
public
double
getAngularVelocityRPM
()
Returns the DC motor's velocity in RPM.
Returns:
The DC motor's velocity in RPM.
getAngularVelocity
public
AngularVelocity
getAngularVelocity
()
Returns the DC motor's velocity.
Returns:
The DC motor's velocity
getAngularAccelerationRadPerSecSq
public
double
getAngularAccelerationRadPerSecSq
()
Returns the DC motor's acceleration in Radians Per Second Squared.
Returns:
The DC motor's acceleration in Radians Per Second Squared.
getAngularAcceleration
public
AngularAcceleration
getAngularAcceleration
()
Returns the DC motor's acceleration.
Returns:
The DC motor's acceleration.
getTorqueNewtonMeters
public
double
getTorqueNewtonMeters
()
Returns the DC motor's torque in Newton-Meters.
Returns:
The DC motor's torque in Newton-Meters.
getCurrentDrawAmps
public
double
getCurrentDrawAmps
()
Returns the DC motor's current draw.
Returns:
The DC motor's current draw.
getInputVoltage
public
double
getInputVoltage
()
Gets the input voltage for the DC motor.
Returns:
The DC motor's input voltage.
setInputVoltage
public
void
setInputVoltage
(double volts)
Sets the input voltage for the DC motor.
Parameters:
volts
- The input voltage.