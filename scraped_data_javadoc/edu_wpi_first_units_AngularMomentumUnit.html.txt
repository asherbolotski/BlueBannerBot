Package
edu.wpi.first.units
Class AngularMomentumUnit
java.lang.Object
edu.wpi.first.units.Unit
edu.wpi.first.units.MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
edu.wpi.first.units.AngularMomentumUnit
public final class
AngularMomentumUnit
extends
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
A unit of angular momentum, modeled as linear momentum of an object rotating some distance away
 from the axis of rotation.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
static
AngularMomentumUnit
combine
(
LinearMomentumUnit
linear,
DistanceUnit
distance)
Combines a linear momentum and distance to create a unit of angular momentum.
double
convertFrom
(double magnitude,
AngularMomentumUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
AngularMomentumUnit
getBaseUnit
()
Gets the base unit of measurement that this unit is derived from.
MomentOfInertiaUnit
mult
(
AngularVelocityUnit
omega)
Multiplies this angular momentum by an angular velocity to yield a unit of moment of inertia.
MutAngularMomentum
mutable
(double magnitude)
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit.
AngularMomentum
of
(double magnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit.
AngularMomentum
ofBaseUnits
(double baseUnitMagnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
AngularMomentum
one
()
Gets a measure with a magnitude of 1.0 in terms of this unit.
VelocityUnit
<
AngularMomentumUnit
>
per
(
TimeUnit
time)
Combines this unit with a unit of time.
<U extends
Unit
>
PerUnit
<
AngularMomentumUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
AngularMomentum
zero
()
Gets a measure of zero magnitude in terms of this unit.
Methods inherited from class edu.wpi.first.units.
MultUnit
combine
,
convertFrom
,
equals
,
hashCode
,
ofNative
,
ofNativeBaseUnits
,
toString
,
unitA
,
unitB
Methods inherited from class edu.wpi.first.units.
Unit
equivalent
,
fromBaseUnits
,
getConverterFromBase
,
getConverterToBase
,
isBaseUnit
,
name
,
symbol
,
toBaseUnits
Methods inherited from class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
combine
public static
AngularMomentumUnit
combine
(
LinearMomentumUnit
linear,
DistanceUnit
distance)
Combines a linear momentum and distance to create a unit of angular momentum.
Parameters:
linear
- the linear momentum unit
distance
- the unit of distance from the axis of rotation
Returns:
the combined angular momentum unit
getBaseUnit
public
AngularMomentumUnit
getBaseUnit
()
Description copied from class:
Unit
Gets the base unit of measurement that this unit is derived from. If the unit is the base unit,
 the unit will be returned.
NOTE:
Subclasses
must
override this method to provide the
 correct return type. Failing to do say will make unit combinations that use it break at
 runtime!
Unit baseUnit = new Unit(null, ...);
   baseUnit.getBaseUnit(); // returns baseUnit

   Unit derivedUnit = new Unit(baseUnit, ...);
   derivedUnit.getBaseUnit(); // returns baseUnit
Overrides:
getBaseUnit
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Returns:
the base unit
of
public
AngularMomentum
of
(double magnitude)
Description copied from class:
MultUnit
Creates a new immutable measurement of the given magnitude in terms of this unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Note: When called on an object of type
MultUnit
(and
not
a subclass!), this
 method will always return a
Mult
instance. If you want to
 avoid casting, use
MultUnit.ofNativeBaseUnits(double)
that returns a
Per
instance
 directly.
Overrides:
of
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Parameters:
magnitude
- the magnitude of the measure in terms of its base units.
Returns:
the measurement object
ofBaseUnits
public
AngularMomentum
ofBaseUnits
(double baseUnitMagnitude)
Description copied from class:
MultUnit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Note: When called on an object of type
MultUnit
(and
not
a subclass!), this
 method will always return a
Mult
instance. If you want to
 avoid casting, use
MultUnit.ofNativeBaseUnits(double)
that returns a
Per
instance
 directly.
Overrides:
ofBaseUnits
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Parameters:
baseUnitMagnitude
- the magnitude of the measure in terms of its base units.
Returns:
the measurement object
zero
public
AngularMomentum
zero
()
Description copied from class:
Unit
Gets a measure of zero magnitude in terms of this unit. The returned object is guaranteed to be
 of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override this
 method to sharpen the return type.
Overrides:
zero
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Returns:
a zero-magnitude measure of this unit
one
public
AngularMomentum
one
()
Description copied from class:
Unit
Gets a measure with a magnitude of 1.0 in terms of this unit. The returned object is guaranteed
 to be of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override
 this method to sharpen the return type.
Overrides:
one
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Returns:
a measure of magnitude 1.0 in terms of this unit
mutable
public
MutAngularMomentum
mutable
(double magnitude)
Description copied from class:
Unit
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit. Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Overrides:
mutable
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Parameters:
magnitude
- the initial magnitude of the mutable measurement
Returns:
the mutable measurement object
per
public
VelocityUnit
<
AngularMomentumUnit
>
per
(
TimeUnit
time)
Description copied from class:
Unit
Combines this unit with a unit of time. This often - but not always - results in a velocity.
 Subclasses should sharpen the return type to be unit-specific.
Overrides:
per
in class
MultUnit
<
LinearMomentumUnit
,
DistanceUnit
>
Parameters:
time
- the unit of time
Returns:
the combined unit
per
public
<U extends
Unit
>
PerUnit
<
AngularMomentumUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
Type Parameters:
U
- the type of the other unit
Parameters:
other
- the other unit
Returns:
the ratio unit
convertFrom
public
double
convertFrom
(double magnitude,
AngularMomentumUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
Parameters:
magnitude
- the magnitude of the measurement in terms of the other unit
otherUnit
- the other unit
Returns:
the value of the measurement in terms of this unit
mult
public
MomentOfInertiaUnit
mult
(
AngularVelocityUnit
omega)
Multiplies this angular momentum by an angular velocity to yield a unit of moment of inertia.
Parameters:
omega
- the unit of angular velocity
Returns:
the moment of inertia unit