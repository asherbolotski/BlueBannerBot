001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.epilogue.logging;
006
007
import edu.wpi.first.util.struct.Struct;
008
009
/** Null backend implementation that logs nothing. */
010
public class NullBackend implements EpilogueBackend {
011
/** Default constructor. */
012
public NullBackend() {}
013
014
@Override
015
public EpilogueBackend getNested(String path) {
016
// Since a nested backend would still log nothing and has no state, we can just return the same
017
// null-logging implementation
018
return this;
019
}
020
021
@Override
022
public void log(String identifier, int value) {}
023
024
@Override
025
public void log(String identifier, long value) {}
026
027
@Override
028
public void log(String identifier, float value) {}
029
030
@Override
031
public void log(String identifier, double value) {}
032
033
@Override
034
public void log(String identifier, boolean value) {}
035
036
@Override
037
public void log(String identifier, byte[] value) {}
038
039
@Override
040
public void log(String identifier, int[] value) {}
041
042
@Override
043
public void log(String identifier, long[] value) {}
044
045
@Override
046
public void log(String identifier, float[] value) {}
047
048
@Override
049
public void log(String identifier, double[] value) {}
050
051
@Override
052
public void log(String identifier, boolean[] value) {}
053
054
@Override
055
public void log(String identifier, String value) {}
056
057
@Override
058
public void log(String identifier, String[] value) {}
059
060
@Override
061
public <S> void log(String identifier, S value, Struct<S> struct) {}
062
063
@Override
064
public <S> void log(String identifier, S[] value, Struct<S> struct) {}
065
}