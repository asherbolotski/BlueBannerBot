Package
edu.wpi.first.wpilibj.simulation
Class SPISim
java.lang.Object
edu.wpi.first.wpilibj.simulation.SPISim
public class
SPISim
extends
Object
A class for controlling a simulated SPI device.
Constructor Summary
Constructors
Constructor
Description
SPISim
()
Create a new simulated SPI device.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
boolean
getInitialized
()
Check whether this device has been initialized.
CallbackStore
registerInitializedCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run when this device is initialized.
CallbackStore
registerReadAutoReceiveBufferCallback
(
SpiReadAutoReceiveBufferCallback
callback)
Register a callback to be run whenever an auto receive buffer is received.
CallbackStore
registerReadCallback
(
BufferCallback
callback)
Register a callback to be run whenever a `read` operation is executed.
CallbackStore
registerWriteCallback
(
ConstBufferCallback
callback)
Register a callback to be run whenever a `write` operation is executed.
void
resetData
()
Reset all simulation data.
void
setInitialized
(boolean initialized)
Define whether this device has been initialized.
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
SPISim
public
SPISim
()
Create a new simulated SPI device.
Method Details
registerInitializedCallback
public
CallbackStore
registerInitializedCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run when this device is initialized.
Parameters:
callback
- the callback
initialNotify
- whether to run the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getInitialized
public
boolean
getInitialized
()
Check whether this device has been initialized.
Returns:
true if initialized
setInitialized
public
void
setInitialized
(boolean initialized)
Define whether this device has been initialized.
Parameters:
initialized
- whether this object is initialized
registerReadCallback
public
CallbackStore
registerReadCallback
(
BufferCallback
callback)
Register a callback to be run whenever a `read` operation is executed.
Parameters:
callback
- the callback
Returns:
the
CallbackStore
object associated with this callback.
registerWriteCallback
public
CallbackStore
registerWriteCallback
(
ConstBufferCallback
callback)
Register a callback to be run whenever a `write` operation is executed.
Parameters:
callback
- the callback
Returns:
the
CallbackStore
object associated with this callback.
registerReadAutoReceiveBufferCallback
public
CallbackStore
registerReadAutoReceiveBufferCallback
(
SpiReadAutoReceiveBufferCallback
callback)
Register a callback to be run whenever an auto receive buffer is received.
Parameters:
callback
- the callback
Returns:
the
CallbackStore
object associated with this callback.
resetData
public
void
resetData
()
Reset all simulation data.