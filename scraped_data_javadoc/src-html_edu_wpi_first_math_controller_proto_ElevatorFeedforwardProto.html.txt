001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.math.controller.proto;
006
007
import edu.wpi.first.math.controller.ElevatorFeedforward;
008
import edu.wpi.first.math.proto.Controller.ProtobufElevatorFeedforward;
009
import edu.wpi.first.util.protobuf.Protobuf;
010
import us.hebi.quickbuf.Descriptors.Descriptor;
011
012
public class ElevatorFeedforwardProto
013
implements Protobuf<ElevatorFeedforward, ProtobufElevatorFeedforward> {
014
@Override
015
public Class<ElevatorFeedforward> getTypeClass() {
016
return ElevatorFeedforward.class;
017
}
018
019
@Override
020
public Descriptor getDescriptor() {
021
return ProtobufElevatorFeedforward.getDescriptor();
022
}
023
024
@Override
025
public ProtobufElevatorFeedforward createMessage() {
026
return ProtobufElevatorFeedforward.newInstance();
027
}
028
029
@Override
030
public ElevatorFeedforward unpack(ProtobufElevatorFeedforward msg) {
031
return new ElevatorFeedforward(msg.getKs(), msg.getKg(), msg.getKv(), msg.getKa(), msg.getDt());
032
}
033
034
@Override
035
public void pack(ProtobufElevatorFeedforward msg, ElevatorFeedforward value) {
036
msg.setKs(value.getKs());
037
msg.setKg(value.getKg());
038
msg.setKv(value.getKv());
039
msg.setKa(value.getKa());
040
msg.setDt(value.getDt());
041
}
042
}