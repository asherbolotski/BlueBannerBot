Package
edu.wpi.first.wpilibj.drive
Class DifferentialDrive
java.lang.Object
edu.wpi.first.wpilibj.MotorSafety
edu.wpi.first.wpilibj.drive.RobotDriveBase
edu.wpi.first.wpilibj.drive.DifferentialDrive
All Implemented Interfaces:
Sendable
,
AutoCloseable
public class
DifferentialDrive
extends
RobotDriveBase
implements
Sendable
,
AutoCloseable
A class for driving differential drive/skid-steer drive platforms such as the Kit of Parts drive
 base, "tank drive", or West Coast Drive.
These drive bases typically have drop-center / skid-steer with two or more wheels per side
 (e.g., 6WD or 8WD). This class takes a setter per side. For four and six motor drivetrains, use
 CAN motor controller followers or
PWMMotorController.addFollower(PWMMotorController)
.
A differential drive robot has left and right wheels separated by an arbitrary width.
Drive base diagram:
|_______|
 | |   | |
   |   |
 |_|___|_|
 |       |
Each drive function provides different inverse kinematic relations for a differential drive
 robot.
This library uses the NWU axes convention (North-West-Up as external reference in the world
 frame). The positive X axis points ahead, the positive Y axis points to the left, and the
 positive Z axis points up. Rotations follow the right-hand rule, so counterclockwise rotation
 around the Z axis is positive.
Inputs smaller then
0.02
will
 be set to 0, and larger values will be scaled so that the full range is still used. This deadband
 value can be changed with
RobotDriveBase.setDeadband(double)
.
MotorSafety
is enabled by default. The tankDrive, arcadeDrive,
 or curvatureDrive methods should be called periodically to avoid Motor Safety timeouts.
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
static class
DifferentialDrive.WheelSpeeds
Wheel speeds for a differential drive.
Nested classes/interfaces inherited from class edu.wpi.first.wpilibj.drive.
RobotDriveBase
RobotDriveBase.MotorType
Field Summary
Fields inherited from class edu.wpi.first.wpilibj.drive.
RobotDriveBase
kDefaultDeadband
,
kDefaultMaxOutput
,
m_deadband
,
m_maxOutput
Constructor Summary
Constructors
Constructor
Description
DifferentialDrive
(
MotorController
leftMotor,
MotorController
rightMotor)
Construct a DifferentialDrive.
DifferentialDrive
(
DoubleConsumer
leftMotor,
DoubleConsumer
rightMotor)
Construct a DifferentialDrive.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
arcadeDrive
(double xSpeed,
 double zRotation)
Arcade drive method for differential drive platform.
void
arcadeDrive
(double xSpeed,
 double zRotation,
 boolean squareInputs)
Arcade drive method for differential drive platform.
static
DifferentialDrive.WheelSpeeds
arcadeDriveIK
(double xSpeed,
 double zRotation,
 boolean squareInputs)
Arcade drive inverse kinematics for differential drive platform.
void
close
()
void
curvatureDrive
(double xSpeed,
 double zRotation,
 boolean allowTurnInPlace)
Curvature drive method for differential drive platform.
static
DifferentialDrive.WheelSpeeds
curvatureDriveIK
(double xSpeed,
 double zRotation,
 boolean allowTurnInPlace)
Curvature drive inverse kinematics for differential drive platform.
String
getDescription
()
Returns a description to print when an error occurs.
void
initSendable
(
SendableBuilder
builder)
Initializes this
Sendable
object.
void
stopMotor
()
Called to stop the motor when the timeout expires.
void
tankDrive
(double leftSpeed,
 double rightSpeed)
Tank drive method for differential drive platform.
void
tankDrive
(double leftSpeed,
 double rightSpeed,
 boolean squareInputs)
Tank drive method for differential drive platform.
static
DifferentialDrive.WheelSpeeds
tankDriveIK
(double leftSpeed,
 double rightSpeed,
 boolean squareInputs)
Tank drive inverse kinematics for differential drive platform.
Methods inherited from class edu.wpi.first.wpilibj.drive.
RobotDriveBase
feedWatchdog
,
normalize
,
setDeadband
,
setMaxOutput
Methods inherited from class edu.wpi.first.wpilibj.
MotorSafety
check
,
checkMotors
,
feed
,
getExpiration
,
isAlive
,
isSafetyEnabled
,
setExpiration
,
setSafetyEnabled
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
DifferentialDrive
public
DifferentialDrive
(
MotorController
leftMotor,
MotorController
rightMotor)
Construct a DifferentialDrive.
To pass multiple motors per side, use CAN motor controller followers or
PWMMotorController.addFollower(PWMMotorController)
. If a
 motor needs to be inverted, do so before passing it in.
Parameters:
leftMotor
- Left motor.
rightMotor
- Right motor.
DifferentialDrive
public
DifferentialDrive
(
DoubleConsumer
leftMotor,
DoubleConsumer
rightMotor)
Construct a DifferentialDrive.
To pass multiple motors per side, use CAN motor controller followers or
PWMMotorController.addFollower(PWMMotorController)
. If a
 motor needs to be inverted, do so before passing it in.
Parameters:
leftMotor
- Left motor setter.
rightMotor
- Right motor setter.
Method Details
close
public
void
close
()
Specified by:
close
in interface
AutoCloseable
arcadeDrive
public
void
arcadeDrive
(double xSpeed,
 double zRotation)
Arcade drive method for differential drive platform. The calculated values will be squared to
 decrease sensitivity at low speeds.
Parameters:
xSpeed
- The robot's speed along the X axis [-1.0..1.0]. Forward is positive.
zRotation
- The robot's rotation rate around the Z axis [-1.0..1.0]. Counterclockwise is
     positive.
arcadeDrive
public
void
arcadeDrive
(double xSpeed,
 double zRotation,
 boolean squareInputs)
Arcade drive method for differential drive platform.
Parameters:
xSpeed
- The robot's speed along the X axis [-1.0..1.0]. Forward is positive.
zRotation
- The robot's rotation rate around the Z axis [-1.0..1.0]. Counterclockwise is
     positive.
squareInputs
- If set, decreases the input sensitivity at low speeds.
curvatureDrive
public
void
curvatureDrive
(double xSpeed,
 double zRotation,
 boolean allowTurnInPlace)
Curvature drive method for differential drive platform.
The rotation argument controls the curvature of the robot's path rather than its rate of
 heading change. This makes the robot more controllable at high speeds.
Parameters:
xSpeed
- The robot's speed along the X axis [-1.0..1.0]. Forward is positive.
zRotation
- The normalized curvature [-1.0..1.0]. Counterclockwise is positive.
allowTurnInPlace
- If set, overrides constant-curvature turning for turn-in-place
     maneuvers. zRotation will control turning rate instead of curvature.
tankDrive
public
void
tankDrive
(double leftSpeed,
 double rightSpeed)
Tank drive method for differential drive platform. The calculated values will be squared to
 decrease sensitivity at low speeds.
Parameters:
leftSpeed
- The robot's left side speed along the X axis [-1.0..1.0]. Forward is positive.
rightSpeed
- The robot's right side speed along the X axis [-1.0..1.0]. Forward is
     positive.
tankDrive
public
void
tankDrive
(double leftSpeed,
 double rightSpeed,
 boolean squareInputs)
Tank drive method for differential drive platform.
Parameters:
leftSpeed
- The robot left side's speed along the X axis [-1.0..1.0]. Forward is positive.
rightSpeed
- The robot right side's speed along the X axis [-1.0..1.0]. Forward is
     positive.
squareInputs
- If set, decreases the input sensitivity at low speeds.
arcadeDriveIK
public static
DifferentialDrive.WheelSpeeds
arcadeDriveIK
(double xSpeed,
 double zRotation,
 boolean squareInputs)
Arcade drive inverse kinematics for differential drive platform.
Parameters:
xSpeed
- The robot's speed along the X axis [-1.0..1.0]. Forward is positive.
zRotation
- The robot's rotation rate around the Z axis [-1.0..1.0]. Counterclockwise is
     positive.
squareInputs
- If set, decreases the input sensitivity at low speeds.
Returns:
Wheel speeds [-1.0..1.0].
curvatureDriveIK
public static
DifferentialDrive.WheelSpeeds
curvatureDriveIK
(double xSpeed,
 double zRotation,
 boolean allowTurnInPlace)
Curvature drive inverse kinematics for differential drive platform.
The rotation argument controls the curvature of the robot's path rather than its rate of
 heading change. This makes the robot more controllable at high speeds.
Parameters:
xSpeed
- The robot's speed along the X axis [-1.0..1.0]. Forward is positive.
zRotation
- The normalized curvature [-1.0..1.0]. Counterclockwise is positive.
allowTurnInPlace
- If set, overrides constant-curvature turning for turn-in-place
     maneuvers. zRotation will control rotation rate around the Z axis instead of curvature.
Returns:
Wheel speeds [-1.0..1.0].
tankDriveIK
public static
DifferentialDrive.WheelSpeeds
tankDriveIK
(double leftSpeed,
 double rightSpeed,
 boolean squareInputs)
Tank drive inverse kinematics for differential drive platform.
Parameters:
leftSpeed
- The robot left side's speed along the X axis [-1.0..1.0]. Forward is positive.
rightSpeed
- The robot right side's speed along the X axis [-1.0..1.0]. Forward is
     positive.
squareInputs
- If set, decreases the input sensitivity at low speeds.
Returns:
Wheel speeds [-1.0..1.0].
stopMotor
public
void
stopMotor
()
Description copied from class:
MotorSafety
Called to stop the motor when the timeout expires.
Specified by:
stopMotor
in class
RobotDriveBase
getDescription
public
String
getDescription
()
Description copied from class:
MotorSafety
Returns a description to print when an error occurs.
Specified by:
getDescription
in class
RobotDriveBase
Returns:
Description to print when an error occurs.
initSendable
public
void
initSendable
(
SendableBuilder
builder)
Description copied from interface:
Sendable
Initializes this
Sendable
object.
Specified by:
initSendable
in interface
Sendable
Parameters:
builder
- sendable builder