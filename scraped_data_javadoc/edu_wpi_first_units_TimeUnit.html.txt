Package
edu.wpi.first.units
Class TimeUnit
java.lang.Object
edu.wpi.first.units.Unit
edu.wpi.first.units.TimeUnit
public final class
TimeUnit
extends
Unit
Unit of time dimension.
This is the base type for units of time dimension. It is also used to specify the dimension
 for
Measure
:
Measure<TimeUnit>
.
Actual units (such as
Units.Seconds
and
Units.Milliseconds
) can be found in
 the
Units
class.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
double
convertFrom
(double magnitude,
TimeUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
TimeUnit
getBaseUnit
()
Gets the base unit of measurement that this unit is derived from.
MutTime
mutable
(double initialMagnitude)
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit.
Time
of
(double magnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit.
Time
ofBaseUnits
(double baseUnitMagnitude)
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
Time
one
()
Gets a measure with a magnitude of 1.0 in terms of this unit.
DimensionlessUnit
per
(
TimeUnit
other)
Creates a dimensionless unit corresponding to the scale factor between this and another unit of
 time.
<U extends
Unit
>
PerUnit
<
TimeUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
Time
zero
()
Gets a measure of zero magnitude in terms of this unit.
Methods inherited from class edu.wpi.first.units.
Unit
equals
,
equivalent
,
fromBaseUnits
,
getConverterFromBase
,
getConverterToBase
,
hashCode
,
isBaseUnit
,
name
,
symbol
,
toBaseUnits
,
toString
Methods inherited from class java.lang.
Object
clone
,
finalize
,
getClass
,
notify
,
notifyAll
,
wait
,
wait
,
wait
Method Details
getBaseUnit
public
TimeUnit
getBaseUnit
()
Description copied from class:
Unit
Gets the base unit of measurement that this unit is derived from. If the unit is the base unit,
 the unit will be returned.
NOTE:
Subclasses
must
override this method to provide the
 correct return type. Failing to do say will make unit combinations that use it break at
 runtime!
Unit baseUnit = new Unit(null, ...);
   baseUnit.getBaseUnit(); // returns baseUnit

   Unit derivedUnit = new Unit(baseUnit, ...);
   derivedUnit.getBaseUnit(); // returns baseUnit
Overrides:
getBaseUnit
in class
Unit
Returns:
the base unit
per
public
DimensionlessUnit
per
(
TimeUnit
other)
Creates a dimensionless unit corresponding to the scale factor between this and another unit of
 time.
Specified by:
per
in class
Unit
Parameters:
other
- the other unit of time
Returns:
the result
per
public
<U extends
Unit
>
PerUnit
<
TimeUnit
,
U>
per
(U other)
Creates a ratio unit between this unit and an arbitrary other unit.
Type Parameters:
U
- the type of the other unit
Parameters:
other
- the other unit
Returns:
the ratio unit
convertFrom
public
double
convertFrom
(double magnitude,
TimeUnit
otherUnit)
Converts a measurement value in terms of another unit to this unit.
Parameters:
magnitude
- the magnitude of the measurement in terms of the other unit
otherUnit
- the other unit
Returns:
the value of the measurement in terms of this unit
of
public
Time
of
(double magnitude)
Description copied from class:
Unit
Creates a new immutable measurement of the given magnitude in terms of this unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Specified by:
of
in class
Unit
Parameters:
magnitude
- the magnitude of the measurement.
Returns:
the measurement object
ofBaseUnits
public
Time
ofBaseUnits
(double baseUnitMagnitude)
Description copied from class:
Unit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
 Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Specified by:
ofBaseUnits
in class
Unit
Parameters:
baseUnitMagnitude
- the magnitude in terms of the base unit
Returns:
the measurement object
zero
public
Time
zero
()
Description copied from class:
Unit
Gets a measure of zero magnitude in terms of this unit. The returned object is guaranteed to be
 of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override this
 method to sharpen the return type.
Overrides:
zero
in class
Unit
Returns:
a zero-magnitude measure of this unit
one
public
Time
one
()
Description copied from class:
Unit
Gets a measure with a magnitude of 1.0 in terms of this unit. The returned object is guaranteed
 to be of the same type returned by
Unit.of(double)
. Subclasses are encouraged to override
 this method to sharpen the return type.
Overrides:
one
in class
Unit
Returns:
a measure of magnitude 1.0 in terms of this unit
mutable
public
MutTime
mutable
(double initialMagnitude)
Description copied from class:
Unit
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit. Implementations are
strongly
recommended to sharpen the return type to a
 unit-specific measurement implementation.
Specified by:
mutable
in class
Unit
Parameters:
initialMagnitude
- the initial magnitude of the mutable measurement
Returns:
the mutable measurement object