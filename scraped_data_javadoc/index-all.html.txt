Index
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form
A
a()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the A button's digital signal.
a()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the A button's digital signal.
a(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the A button's digital signal.
a(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the A button's digital signal.
a(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the A button's digital signal.
a(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the A button's digital signal.
A
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
The State-Space 1x1 system matrix.
abs(U)
- Method in interface edu.wpi.first.units.
Measure
Absolute value of measure.
Acceleration
<
D
extends
Unit
> - Interface in
edu.wpi.first.units.measure
accelerationMetersPerSecondSq
- Variable in class edu.wpi.first.math.trajectory.
Trajectory.State
The acceleration at that point of the trajectory.
AccelerationUnit
<
D
extends
Unit
> - Class in
edu.wpi.first.units
A generic unit of acceleration.
AccelerometerDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for accelerometer data.
AccelerometerJNI
- Class in
edu.wpi.first.hal
Accelerometer HAL JNI methods.
accept(boolean)
- Method in interface edu.wpi.first.networktables.
BooleanPublisher
accept(boolean)
- Method in interface edu.wpi.first.util.function.
BooleanConsumer
Performs this operation on the given argument.
accept(boolean[])
- Method in interface edu.wpi.first.networktables.
BooleanArrayPublisher
accept(byte[])
- Method in interface edu.wpi.first.networktables.
RawPublisher
accept(double)
- Method in interface edu.wpi.first.networktables.
DoublePublisher
accept(double[])
- Method in interface edu.wpi.first.networktables.
DoubleArrayPublisher
accept(double, double, double, double)
- Method in interface edu.wpi.first.wpilibj2.command.
MecanumControllerCommand.MecanumVoltagesConsumer
Accepts the voltages to perform some operation with them.
accept(float)
- Method in interface edu.wpi.first.networktables.
FloatPublisher
accept(float)
- Method in interface edu.wpi.first.util.function.
FloatConsumer
Performs this operation on the given argument.
accept(float[])
- Method in interface edu.wpi.first.networktables.
FloatArrayPublisher
accept(int, int, int, int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader.IndexedColorIterator
Accepts an index of an LED in the buffer and the red, green, and blue components of the
 currently stored color for that LED.
accept(long)
- Method in interface edu.wpi.first.networktables.
IntegerPublisher
accept(long[])
- Method in interface edu.wpi.first.networktables.
IntegerArrayPublisher
accept(long, V)
- Method in interface edu.wpi.first.units.collections.
LongToObjectHashMap.IteratorFunction
Accepts a key-value pair from the map.
accept(NetworkTable, String, NetworkTableEvent)
- Method in interface edu.wpi.first.networktables.
NetworkTable.TableEventListener
Called when an event occurs on a topic in a
NetworkTable
.
accept(NetworkTableValue)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
accept(String)
- Method in interface edu.wpi.first.networktables.
StringPublisher
accept(String[])
- Method in interface edu.wpi.first.networktables.
StringArrayPublisher
accept(T)
- Method in interface edu.wpi.first.networktables.
ProtobufPublisher
accept(T)
- Method in interface edu.wpi.first.networktables.
StructPublisher
accept(T[])
- Method in interface edu.wpi.first.networktables.
StructArrayPublisher
AccumulatorResult
- Class in
edu.wpi.first.hal
Structure for holding the values stored in an accumulator.
AccumulatorResult()
- Constructor for class edu.wpi.first.hal.
AccumulatorResult
Constructs an AccumulatorResult.
add(int)
- Method in class edu.wpi.first.util.
EventVector
Adds an event to the event vector.
add(int, String, int)
- Static method in class edu.wpi.first.net.
PortForwarder
Forward a local TCP port to a remote host and port.
add(VideoSource)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given video stream.
add(Sendable)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given sendable.
add(Sendable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
add(Sendable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
add(Sendable, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry.
add(Sendable, String, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry.
add(Sendable, String, int, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry.
add(Sendable, String, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry.
add(Counter)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Assigns the Counter to this glitch filter.
add(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Assigns the DigitalSource to this glitch filter.
add(Encoder)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Assigns the Encoder to this glitch filter.
add(String, VideoSource)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given video stream.
add(String, Sendable)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given sendable.
add(String, Sendable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
add(String, Sendable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
add(String, Object)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given data.
add(String, Object)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
add(String, Object)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
add(String, String)
- Method in class edu.wpi.first.util.struct.
StructDescriptorDatabase
Adds a structure schema to the database.
add(String, String, Object)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display the given data.
add(String, String, Object)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
add(String, String, Object)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addAllData(double...)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
addAllModules(Geometry2D.ProtobufTranslation2d...)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
addAllRows(double...)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
addAllStates(Trajectory.ProtobufTrajectoryState...)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
addAllXFinal(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
addAllXFinal(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
addAllXInitial(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
addAllXInitial(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
addAllYFinal(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
addAllYFinal(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
addAllYInitial(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
addAllYInitial(double...)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
addAnalogAccumulator(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds accumulator data of an analog input to be collected by DMA.
addAnalogAccumulator(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds accumulator data of an analog input to be collected by DMA.
addAnalogInput(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds an analog input to be collected by DMA.
addAnalogInput(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds an analog input to be collected by DMA.
addAveragedAnalogInput(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds averaged data of an analog input to be collected by DMA.
addAveragedAnalogInput(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds averaged data of an analog input to be collected by DMA.
addAxisCamera(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Deprecated, for removal: This API element is subject to removal in a future version.
Call startAutomaticCapture with a HttpCamera instead.
addAxisCamera(String[])
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Deprecated, for removal: This API element is subject to removal in a future version.
Call startAutomaticCapture with a HttpCamera instead.
addAxisCamera(String, String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Deprecated, for removal: This API element is subject to removal in a future version.
Call startAutomaticCapture with a HttpCamera instead.
addAxisCamera(String, String[])
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Deprecated, for removal: This API element is subject to removal in a future version.
Call startAutomaticCapture with a HttpCamera instead.
addBoolean(String, BooleanSupplier)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addBoolean(String, BooleanSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addBoolean(String, BooleanSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addBooleanArray(String, Supplier<boolean[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addBooleanArray(String, Supplier<boolean[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addBooleanArray(String, Supplier<boolean[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addBooleanArrayProperty(String, Supplier<boolean[]>, Consumer<boolean[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addBooleanArrayProperty(String, Supplier<boolean[]>, Consumer<boolean[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a boolean array property.
addBooleanArrayProperty(String, Supplier<boolean[]>, Consumer<boolean[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a boolean array property.
addBooleanProperty(String, BooleanSupplier, BooleanConsumer)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addBooleanProperty(String, BooleanSupplier, BooleanConsumer)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a boolean property.
addBooleanProperty(String, BooleanSupplier, BooleanConsumer)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a boolean property.
addCamera(VideoSource)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Adds an already created camera.
addCamera(String, String, String...)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display a video stream.
addChild(Sendable, Object)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds a child object to an object.
addChild(String, Sendable)
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
Associates a
Sendable
with this Subsystem.
addCloseable(AutoCloseable)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addCloseable(AutoCloseable)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Adds a closeable.
addCloseable(AutoCloseable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
addCommands(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
Adds the given commands to the group.
addCommands(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
Adds the given commands to the group.
addCommands(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
Adds the given commands to the group.
addCommands(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
Adds the given commands to the group.
addConnectionListener(boolean)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Add a connection listener.
addConnectionListener(boolean, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a connection listener.
addConstraint(TrajectoryConstraint)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Adds a user-defined constraint to the trajectory.
addConstraints(List<? extends TrajectoryConstraint>)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Adds all user-defined constraints from a list to the trajectory.
addCounter(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds position data for an counter to be collected by DMA.
addCounter(Counter)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds position data for an counter to be collected by DMA.
addCounterPeriod(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds timer data for an counter to be collected by DMA.
addCounterPeriod(Counter)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds timer data for an counter to be collected by DMA.
addCustomStruct(Class<T>, Struct<T>, boolean)
- Static method in class edu.wpi.first.util.struct.
StructGenerator
Add a custom struct to the structifier.
addData(double)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
addDigitalSource(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds a digital source to be collected by DMA.
addDigitalSource(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds a digital source to be collected by DMA.
addDouble(String, DoubleSupplier)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addDouble(String, DoubleSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addDouble(String, DoubleSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addDoubleArray(String, Supplier<double[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addDoubleArray(String, Supplier<double[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addDoubleArray(String, Supplier<double[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addDoubleArrayProperty(String, Supplier<double[]>, Consumer<double[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addDoubleArrayProperty(String, Supplier<double[]>, Consumer<double[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a double array property.
addDoubleArrayProperty(String, Supplier<double[]>, Consumer<double[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a double array property.
addDoubleProperty(String, DoubleSupplier, DoubleConsumer)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addDoubleProperty(String, DoubleSupplier, DoubleConsumer)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a double property.
addDoubleProperty(String, DoubleSupplier, DoubleConsumer)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a double property.
addDutyCycle(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds a duty cycle input to be collected by DMA.
addDutyCycle(DutyCycle)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds a duty cycle input to be collected by DMA.
addEncoder(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds position data for an encoder to be collected by DMA.
addEncoder(Encoder)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds position data for an encoder to be collected by DMA.
addEncoderPeriod(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Adds timer data for an encoder to be collected by DMA.
addEncoderPeriod(Encoder)
- Method in class edu.wpi.first.wpilibj.
DMA
Adds timer data for an encoder to be collected by DMA.
addEnumField(StructGenerator.SchemaBuilder.EnumFieldBuilder)
- Method in class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder
Adds an inline enum field to the schema.
addEpoch(String)
- Method in class edu.wpi.first.wpilibj.
Tracer
Adds time since last epoch to the list printed by printEpochs().
addEpoch(String)
- Method in class edu.wpi.first.wpilibj.
Watchdog
Adds time since last epoch to the list printed by printEpochs().
addEventMarker(String, EventImportance)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Notifies Shuffleboard of an event.
addEventMarker(String, String, EventImportance)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Notifies Shuffleboard of an event.
addFamily(long, String, int)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Adds a family of tags to be detected by the detector engine.
addFamily(String)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Adds a family of tags to be detected.
addFamily(String, int)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Adds a family of tags to be detected.
addField(String, String)
- Method in class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder
Adds a field to the schema.
addFirst(double)
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Push new value onto front of the buffer.
addFirst(T)
- Method in class edu.wpi.first.util.
CircularBuffer
Push new value onto front of the buffer.
addFloat(String, FloatSupplier)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addFloat(String, FloatSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addFloat(String, FloatSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addFloatArray(String, Supplier<float[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addFloatArray(String, Supplier<float[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addFloatArray(String, Supplier<float[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addFloatArrayProperty(String, Supplier<float[]>, Consumer<float[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addFloatArrayProperty(String, Supplier<float[]>, Consumer<float[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a float array property.
addFloatArrayProperty(String, Supplier<float[]>, Consumer<float[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a float array property.
addFloatProperty(String, FloatSupplier, FloatConsumer)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addFloatProperty(String, FloatSupplier, FloatConsumer)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a float property.
addFloatProperty(String, FloatSupplier, FloatConsumer)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a float property.
addFollower(PWMMotorController)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Make the given PWM motor controller follow the output of this one.
addInteger(String, LongSupplier)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addInteger(String, LongSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addInteger(String, LongSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addIntegerArray(String, Supplier<long[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addIntegerArray(String, Supplier<long[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addIntegerArray(String, Supplier<long[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addIntegerArrayProperty(String, Supplier<long[]>, Consumer<long[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addIntegerArrayProperty(String, Supplier<long[]>, Consumer<long[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add an integer array property.
addIntegerArrayProperty(String, Supplier<long[]>, Consumer<long[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add an integer array property.
addIntegerProperty(String, LongSupplier, LongConsumer)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addIntegerProperty(String, LongSupplier, LongConsumer)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add an integer property.
addIntegerProperty(String, LongSupplier, LongConsumer)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add an integer property.
addLast(double)
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Push new value onto back of the buffer.
addLast(T)
- Method in class edu.wpi.first.util.
CircularBuffer
Push new value onto back of the buffer.
addListener(int, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Adds listener.
addListener(int, int, EnumSet<NetworkTableEvent.Kind>)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Adds listener.
addListener(int, String[], int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Adds listener.
addListener(int, String[], EnumSet<NetworkTableEvent.Kind>)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Adds listener.
addListener(MultiSubscriber, EnumSet<NetworkTableEvent.Kind>)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Start listening to topic changes on a subscriber.
addListener(MultiSubscriber, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a listener for changes on a subscriber.
addListener(NetworkTableEntry, EnumSet<NetworkTableEvent.Kind>)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Start listening to topic changes on an entry.
addListener(NetworkTableEntry, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a listener for changes on an entry.
addListener(Subscriber, EnumSet<NetworkTableEvent.Kind>)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Start listening to topic changes on a subscriber.
addListener(Subscriber, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a listener for changes on a subscriber.
addListener(Topic, EnumSet<NetworkTableEvent.Kind>)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Start listening to changes to a particular topic.
addListener(Topic, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a listener for changes on a particular topic.
addListener(String[], EnumSet<NetworkTableEvent.Kind>)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Start listening to topic changes for topics with names that start with any of the given
 prefixes.
addListener(String[], EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a listener for changes to topics with names that start with any of the given
 prefixes.
addListener(String, EnumSet<NetworkTableEvent.Kind>, NetworkTable.TableEventListener)
- Method in class edu.wpi.first.networktables.
NetworkTable
Listen to a single key.
addListener(EnumSet<NetworkTableEvent.Kind>, NetworkTable.TableEventListener)
- Method in class edu.wpi.first.networktables.
NetworkTable
Listen to topics only within this table.
addListener(Consumer<VideoEvent>, int, boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Adds listener.
addLogger(int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Add logger callback function.
addLogger(int, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Add logger callback function.
addLogger(int, int, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add logger callback function.
addLW(Sendable, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry and LiveWindow.
addLW(Sendable, String, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry and LiveWindow.
addLW(Sendable, String, int, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry and LiveWindow.
addLW(Sendable, String, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Adds an object to the registry and LiveWindow.
addModules(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
addNumber(String, DoubleSupplier)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addNumber(String, DoubleSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addNumber(String, DoubleSupplier)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addObserverState(KalmanTypeFilter<S, I, O>, Matrix<I, N1>, Matrix<O, N1>, double)
- Method in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator
Add past observer states to the observer snapshots list.
addOption(String, V)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
Adds the given object to the list of options.
addPeriodic(Runnable, double)
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Add a callback to run at a specific period.
addPeriodic(Runnable, double, double)
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Add a callback to run at a specific period with a starting time offset.
addPeriodic(Runnable, Time)
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Add a callback to run at a specific period.
addPeriodic(Runnable, Time, Time)
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Add a callback to run at a specific period with a starting time offset.
addPersistent(String, Object)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display a simple piece of data.
addPersistent(String, String, Object)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container to display a simple piece of data.
addPolledListener(int, int, boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Add polled listener.
addPortForwarder(int, String, int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Forward a local TCP port to a remote host and port.
addRaw(String, String, Supplier<byte[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addRaw(String, String, Supplier<byte[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addRaw(String, String, Supplier<byte[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addRaw(String, Supplier<byte[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addRawProperty(String, String, Supplier<byte[]>, Consumer<byte[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addRawProperty(String, String, Supplier<byte[]>, Consumer<byte[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a raw property.
addRawProperty(String, String, Supplier<byte[]>, Consumer<byte[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a raw property.
addRequirements(Subsystem...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Adds the specified subsystems to the requirements of the command.
addRequirements(Collection<Subsystem>)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Adds the specified subsystems to the requirements of the command.
AddressableLED
- Class in
edu.wpi.first.wpilibj
A class for driving addressable LEDs, such as WS2812B, WS2815, and NeoPixels.
AddressableLED(int)
- Constructor for class edu.wpi.first.wpilibj.
AddressableLED
Constructs a new driver for a specific port.
AddressableLED.ColorOrder
- Enum Class in
edu.wpi.first.wpilibj
Order that color data is sent over the wire.
AddressableLEDBuffer
- Class in
edu.wpi.first.wpilibj
Buffer storage for Addressable LEDs.
AddressableLEDBuffer(int)
- Constructor for class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Constructs a new LED buffer with the specified length.
AddressableLEDBufferView
- Class in
edu.wpi.first.wpilibj
A view of another addressable LED buffer.
AddressableLEDBufferView(B, int, int)
- Constructor for class edu.wpi.first.wpilibj.
AddressableLEDBufferView
Creates a new view of a buffer.
AddressableLEDBufferView(LEDReader, LEDWriter, int, int)
- Constructor for class edu.wpi.first.wpilibj.
AddressableLEDBufferView
Creates a new view of a buffer.
AddressableLEDDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for addressable LED data.
AddressableLEDJNI
- Class in
edu.wpi.first.hal
Addressable LED HAL JNI Methods.
AddressableLEDSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated addressable LED.
AddressableLEDSim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Constructs for the first addressable LED.
AddressableLEDSim(AddressableLED)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Constructs from an AddressableLED object.
addressOnly()
- Method in class edu.wpi.first.wpilibj.
I2C
Attempt to address a device on the I2C bus.
addRows(double)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
addSample(double, T)
- Method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Add a sample to the buffer.
addSchema(Protobuf<?, ?>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Registers a protobuf schema.
addSchema(Protobuf<?, ?>)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a protobuf schema.
addSchema(Protobuf<?, ?>, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a protobuf schema.
addSchema(Struct<?>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Registers a struct schema.
addSchema(Struct<?>)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a struct schema.
addSchema(Struct<?>, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a struct schema.
addSchema(String, String, byte[])
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Registers a data schema.
addSchema(String, String, byte[])
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a data schema.
addSchema(String, String, byte[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a data schema.
addSchema(String, String, String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Registers a data schema.
addSchema(String, String, String)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a data schema.
addSchema(String, String, String, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Registers a data schema.
addSensor(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
addServer(VideoSink)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Adds an already created server.
addServer(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Adds a MJPEG server at the next available port.
addServer(String, int)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Adds a MJPEG server.
addStates(Trajectory.ProtobufTrajectoryState)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
addString(String, Supplier<String>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addString(String, Supplier<String>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addString(String, Supplier<String>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addStringArray(String, Supplier<String[]>)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Adds a widget to this container.
addStringArray(String, Supplier<String[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
addStringArray(String, Supplier<String[]>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
addStringArrayProperty(String, Supplier<String[]>, Consumer<String[]>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addStringArrayProperty(String, Supplier<String[]>, Consumer<String[]>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a string array property.
addStringArrayProperty(String, Supplier<String[]>, Consumer<String[]>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a string array property.
addStringProperty(String, Supplier<String>, Consumer<String>)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
addStringProperty(String, Supplier<String>, Consumer<String>)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a string property.
addStringProperty(String, Supplier<String>, Consumer<String>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a string property.
addSubTableListener(NetworkTable.SubTableListener)
- Method in class edu.wpi.first.networktables.
NetworkTable
Listen for sub-table creation.
addSwitchedCamera(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Adds a virtual camera for switching between two streams.
addTimeSyncListener(boolean)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Add a time synchronization listener.
addTimeSyncListener(boolean, Consumer<NetworkTableEvent>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Add a time synchronization listener.
addVariant(String, int)
- Method in class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder.EnumFieldBuilder
Adds a variant to the enum field.
addVisionMeasurement(Pose2d, double)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Adds a vision measurement to the Kalman Filter.
addVisionMeasurement(Pose2d, double, Matrix<N3, N1>)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Adds a vision measurement to the Kalman Filter.
addVisionMeasurement(Pose3d, double)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Adds a vision measurement to the Kalman Filter.
addVisionMeasurement(Pose3d, double, Matrix<N4, N1>)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Adds a vision measurement to the Kalman Filter.
addXFinal(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
addXFinal(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
addXInitial(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
addXInitial(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
addYFinal(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
addYFinal(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
addYInitial(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
addYInitial(double)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
ADIS16448_IMU
- Class in
edu.wpi.first.wpilibj
This class is for the ADIS16448 IMU that connects to the RoboRIO MXP port.
ADIS16448_IMU()
- Constructor for class edu.wpi.first.wpilibj.
ADIS16448_IMU
Creates a new ADIS16448_IMU object.
ADIS16448_IMU(ADIS16448_IMU.IMUAxis, SPI.Port, ADIS16448_IMU.CalibrationTime)
- Constructor for class edu.wpi.first.wpilibj.
ADIS16448_IMU
Creates a new ADIS16448_IMU object.
ADIS16448_IMU.CalibrationTime
- Enum Class in
edu.wpi.first.wpilibj
ADIS16448 calibration times.
ADIS16448_IMU.IMUAxis
- Enum Class in
edu.wpi.first.wpilibj
IMU axes.
ADIS16448_IMUSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated ADIS16448 gyroscope.
ADIS16448_IMUSim(ADIS16448_IMU)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Constructs from an ADIS16448_IMU object.
ADIS16470_IMU
- Class in
edu.wpi.first.wpilibj
This class is for the ADIS16470 IMU that connects to the RoboRIO SPI port.
ADIS16470_IMU()
- Constructor for class edu.wpi.first.wpilibj.
ADIS16470_IMU
Creates a new ADIS16740 IMU object.
ADIS16470_IMU(ADIS16470_IMU.IMUAxis, ADIS16470_IMU.IMUAxis, ADIS16470_IMU.IMUAxis)
- Constructor for class edu.wpi.first.wpilibj.
ADIS16470_IMU
Creates a new ADIS16740 IMU object.
ADIS16470_IMU(ADIS16470_IMU.IMUAxis, ADIS16470_IMU.IMUAxis, ADIS16470_IMU.IMUAxis, SPI.Port, ADIS16470_IMU.CalibrationTime)
- Constructor for class edu.wpi.first.wpilibj.
ADIS16470_IMU
Creates a new ADIS16740 IMU object.
ADIS16470_IMU.CalibrationTime
- Enum Class in
edu.wpi.first.wpilibj
ADIS16470 calibration times.
ADIS16470_IMU.IMUAxis
- Enum Class in
edu.wpi.first.wpilibj
IMU axes.
ADIS16470_IMUSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated ADIS16470 gyroscope.
ADIS16470_IMUSim(ADIS16470_IMU)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Constructs from an ADIS16470_IMU object.
advanceIfElapsed(double)
- Method in class edu.wpi.first.wpilibj.
Timer
Check if the period specified has passed and if it has, advance the start time by that period.
ADXL345_I2C
- Class in
edu.wpi.first.wpilibj
ADXL345 I2C Accelerometer.
ADXL345_I2C(I2C.Port, ADXL345_I2C.Range)
- Constructor for class edu.wpi.first.wpilibj.
ADXL345_I2C
Constructs the ADXL345 Accelerometer with I2C address 0x1D.
ADXL345_I2C(I2C.Port, ADXL345_I2C.Range, int)
- Constructor for class edu.wpi.first.wpilibj.
ADXL345_I2C
Constructs the ADXL345 Accelerometer over I2C.
ADXL345_I2C.AllAxes
- Class in
edu.wpi.first.wpilibj
Container type for accelerations from all axes.
ADXL345_I2C.Axes
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer axes.
ADXL345_I2C.Range
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer range.
ADXL345_SPI
- Class in
edu.wpi.first.wpilibj
ADXL345 SPI Accelerometer.
ADXL345_SPI(SPI.Port, ADXL345_SPI.Range)
- Constructor for class edu.wpi.first.wpilibj.
ADXL345_SPI
Constructor.
ADXL345_SPI.AllAxes
- Class in
edu.wpi.first.wpilibj
Container type for accelerations from all axes.
ADXL345_SPI.Axes
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer axes.
ADXL345_SPI.Range
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer range.
ADXL345Sim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated ADXL345.
ADXL345Sim(ADXL345_I2C)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADXL345Sim
Constructor.
ADXL345Sim(ADXL345_SPI)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADXL345Sim
Constructor.
ADXL362
- Class in
edu.wpi.first.wpilibj
ADXL362 SPI Accelerometer.
ADXL362(ADXL362.Range)
- Constructor for class edu.wpi.first.wpilibj.
ADXL362
Constructor.
ADXL362(SPI.Port, ADXL362.Range)
- Constructor for class edu.wpi.first.wpilibj.
ADXL362
Constructor.
ADXL362.AllAxes
- Class in
edu.wpi.first.wpilibj
Container type for accelerations from all axes.
ADXL362.Axes
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer axes.
ADXL362.Range
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer range.
ADXL362Sim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated ADXL362.
ADXL362Sim(ADXL362)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADXL362Sim
Constructor.
ADXRS450_Gyro
- Class in
edu.wpi.first.wpilibj
Use a rate gyro to return the robots heading relative to a starting position.
ADXRS450_Gyro()
- Constructor for class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Constructor.
ADXRS450_Gyro(SPI.Port)
- Constructor for class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Constructor.
ADXRS450_GyroSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated ADXRS450 gyroscope.
ADXRS450_GyroSim(ADXRS450_Gyro)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ADXRS450_GyroSim
Constructs from an ADXRS450_Gyro object.
aggregate(double)
- Method in class edu.wpi.first.units.
UnitBuilder
Helper for defining units that are a scalar multiple of the base unit, such as kilometers being
 1000x of the base unit (meters).
Alert
- Class in
edu.wpi.first.wpilibj
Persistent alert to be sent via NetworkTables.
Alert(String, Alert.AlertType)
- Constructor for class edu.wpi.first.wpilibj.
Alert
Creates a new alert in the default group - "Alerts".
Alert(String, String, Alert.AlertType)
- Constructor for class edu.wpi.first.wpilibj.
Alert
Creates a new alert.
Alert.AlertType
- Enum Class in
edu.wpi.first.wpilibj
Represents an alert's level of urgency.
AllAxes()
- Constructor for class edu.wpi.first.wpilibj.
ADXL345_I2C.AllAxes
Default constructor.
AllAxes()
- Constructor for class edu.wpi.first.wpilibj.
ADXL345_SPI.AllAxes
Default constructor.
AllAxes()
- Constructor for class edu.wpi.first.wpilibj.
ADXL362.AllAxes
Default constructor.
AllianceStationID
- Enum Class in
edu.wpi.first.hal
Alliance station ID.
allocate()
- Method in class edu.wpi.first.wpilibj.
Resource
Deprecated.
Allocate a resource.
allocate(int)
- Method in class edu.wpi.first.wpilibj.
Resource
Deprecated.
Allocate a specific resource value.
allocate(StructDescriptor)
- Static method in class edu.wpi.first.util.struct.
DynamicStruct
Constructs a new dynamic struct object with internal storage.
allocateDigitalPWM()
- Static method in class edu.wpi.first.hal.
DIOJNI
Allocates a DO PWM Generator.
allocateDirect(StructDescriptor)
- Static method in class edu.wpi.first.util.struct.
DynamicStruct
Constructs a new dynamic struct object with internal storage.
AllocationException
- Exception in
edu.wpi.first.hal.util
Exception indicating that the resource is already allocated.
AllocationException(String)
- Constructor for exception edu.wpi.first.hal.util.
AllocationException
Create a new AllocationException.
alongWith(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a set of commands to run parallel to it, ending when the last
 command ends.
Amp
- Static variable in class edu.wpi.first.units.
Units
The base unit of electrical current.
Amps
- Static variable in class edu.wpi.first.units.
Units
The base unit of electrical current.
Analog
- Enum constant in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Analog.
ANALOG_TRIGGER_PULSE_OUTPUT_ERROR
- Static variable in class edu.wpi.first.hal.
HALUtil
Attempted to read AnalogTrigger pulse output.
AnalogAccelerometer
- Class in
edu.wpi.first.wpilibj
Handle operation of an analog accelerometer.
AnalogAccelerometer(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogAccelerometer
Create a new instance of an accelerometer.
AnalogAccelerometer(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.
AnalogAccelerometer
Create a new instance of Accelerometer from an existing AnalogChannel.
AnalogEncoder
- Class in
edu.wpi.first.wpilibj
Class for supporting continuous analog encoders, such as the US Digital MA3.
AnalogEncoder(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogEncoder
Construct a new AnalogEncoder attached to a specific AnalogIn channel.
AnalogEncoder(int, double, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogEncoder
Construct a new AnalogEncoder attached to a specific AnalogIn channel.
AnalogEncoder(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.
AnalogEncoder
Construct a new AnalogEncoder attached to a specific AnalogInput.
AnalogEncoder(AnalogInput, double, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogEncoder
Construct a new AnalogEncoder attached to a specific AnalogInput.
AnalogEncoderSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated analog encoder.
AnalogEncoderSim(AnalogEncoder)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogEncoderSim
Constructs from an AnalogEncoder object.
AnalogGyro
- Class in
edu.wpi.first.wpilibj
Use a rate gyro to return the robots heading relative to a starting position.
AnalogGyro(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogGyro
Gyro constructor using the channel number.
AnalogGyro(int, int, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogGyro
Gyro constructor using the channel number along with parameters for presetting the center and
 offset values.
AnalogGyro(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.
AnalogGyro
Gyro constructor with a precreated analog channel object.
AnalogGyro(AnalogInput, int, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogGyro
Gyro constructor with a precreated analog channel object along with parameters for presetting
 the center and offset values.
AnalogGyroDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for analog gyro data.
AnalogGyroJNI
- Class in
edu.wpi.first.hal
Analog Gyro JNI Functions.
AnalogGyroSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated analog gyro.
AnalogGyroSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Constructs from an analog input channel number.
AnalogGyroSim(AnalogGyro)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Constructs from an AnalogGyro object.
AnalogInDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for analog input data.
AnalogInput
- Class in
edu.wpi.first.wpilibj
Analog channel class.
AnalogInput(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogInput
Construct an analog channel.
AnalogInputSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated analog input.
AnalogInputSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Constructs from an analog input channel number.
AnalogInputSim(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Constructs from an AnalogInput object.
AnalogJNI
- Class in
edu.wpi.first.hal
Analog Input / Output / Accumulator / Trigger JNI Functions.
AnalogJNI.AnalogTriggerType
- Interface in
edu.wpi.first.hal
native declaration : AthenaJava\target\native\include\HAL\Analog.h:58
enum values
AnalogOutDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for analog output data.
AnalogOutput
- Class in
edu.wpi.first.wpilibj
Analog output class.
AnalogOutput(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogOutput
Construct an analog output on a specified MXP channel.
AnalogOutputSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated analog output.
AnalogOutputSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Constructs from an analog output channel number.
AnalogOutputSim(AnalogOutput)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Constructs from an AnalogOutput object.
AnalogPotentiometer
- Class in
edu.wpi.first.wpilibj
Class for reading analog potentiometers.
AnalogPotentiometer(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogPotentiometer(int, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogPotentiometer(int, double, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogPotentiometer(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogPotentiometer(AnalogInput, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogPotentiometer(AnalogInput, double, double)
- Constructor for class edu.wpi.first.wpilibj.
AnalogPotentiometer
AnalogPotentiometer constructor.
AnalogTrigger
- Class in
edu.wpi.first.wpilibj
Class for creating and configuring Analog Triggers.
AnalogTrigger(int)
- Constructor for class edu.wpi.first.wpilibj.
AnalogTrigger
Constructor for an analog trigger given a channel number.
AnalogTrigger(AnalogInput)
- Constructor for class edu.wpi.first.wpilibj.
AnalogTrigger
Construct an analog trigger given an analog channel.
AnalogTrigger(DutyCycle)
- Constructor for class edu.wpi.first.wpilibj.
AnalogTrigger
Construct an analog trigger given a duty cycle input.
AnalogTriggerDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for analog trigger data.
AnalogTriggerOutput
- Class in
edu.wpi.first.wpilibj
Class to represent a specific output from an analog trigger.
AnalogTriggerOutput(AnalogTrigger, AnalogTriggerOutput.AnalogTriggerType)
- Constructor for class edu.wpi.first.wpilibj.
AnalogTriggerOutput
Create an object that represents one of the four outputs from an analog trigger.
AnalogTriggerOutput.AnalogTriggerOutputException
- Exception in
edu.wpi.first.wpilibj
Exceptions dealing with improper operation of the Analog trigger output.
AnalogTriggerOutput.AnalogTriggerType
- Enum Class in
edu.wpi.first.wpilibj
Defines the state in which the AnalogTrigger triggers.
AnalogTriggerOutputException(String)
- Constructor for exception edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerOutputException
Create a new exception with the given message.
AnalogTriggerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated analog trigger.
AnalogTriggerSim(AnalogTrigger)
- Constructor for class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Constructs from an AnalogTrigger object.
and(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Composes this event with another event, returning a new event that is active when both events
 are active.
and(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Composes two triggers with logical AND.
andThen(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a set of commands to run after it in sequence.
andThen(Runnable, Subsystem...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a runnable to run after the command finishes.
angle
- Variable in class edu.wpi.first.math.kinematics.
SwerveModulePosition
Angle of the module.
angle
- Variable in class edu.wpi.first.math.kinematics.
SwerveModuleState
Angle of the module.
Angle
- Interface in
edu.wpi.first.units.measure
angleAdd(int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Returns a function that adds two vectors while normalizing the resulting value in the selected
 row as an angle.
angleAdd(Matrix<S, N1>, Matrix<S, N1>, int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Adds a and b while normalizing the resulting value in the selected row as an angle.
angleMean(int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Returns a function that computes the mean of sigmas with the weights Wm while computing a
 special angle mean for a select row.
angleMean(Matrix<S, ?>, Matrix<?, N1>, int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Computes the mean of sigmas with the weights Wm while computing a special angle mean for a
 select row.
angleModulus(double)
- Static method in class edu.wpi.first.math.
MathUtil
Wraps an angle to the range -π to π radians.
angleResidual(int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Returns a function that subtracts two vectors while normalizing the resulting value in the
 selected row as if it were an angle.
angleResidual(Matrix<S, N1>, Matrix<S, N1>, int)
- Static method in class edu.wpi.first.math.estimator.
AngleStatistics
Subtracts a and b while normalizing the resulting value in the selected row as if it were an
 angle.
AngleStatistics
- Class in
edu.wpi.first.math.estimator
Angle statistics functions.
AngleUnit
- Class in
edu.wpi.first.units
Unit of angular dimension.
AngleUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of angles, radians.
angularAcceleration(AngularAcceleration)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the angular acceleration of the motor.
AngularAcceleration
- Interface in
edu.wpi.first.units.measure
AngularAccelerationUnit
- Class in
edu.wpi.first.units
A unit of angular acceleration, such as
Units.RadiansPerSecondPerSecond
.
AngularMomentum
- Interface in
edu.wpi.first.units.measure
AngularMomentumUnit
- Class in
edu.wpi.first.units
A unit of angular momentum, modeled as linear momentum of an object rotating some distance away
 from the axis of rotation.
angularPosition(Angle)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the angular position of the motor.
angularVelocity(AngularVelocity)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the angular velocity of the motor.
AngularVelocity
- Interface in
edu.wpi.first.units.measure
AngularVelocityUnit
- Class in
edu.wpi.first.units
A unit of angular velocity like
Units.RadiansPerSecond
.
append(boolean)
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Appends a record to the log.
append(boolean[])
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Appends a record to the log.
append(boolean[], long)
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Appends a record to the log.
append(boolean, long)
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Appends a record to the log.
append(byte[])
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(byte[], int, int)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(byte[], int, int, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(byte[], long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(double)
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Appends a record to the log.
append(double[])
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Appends a record to the log.
append(double[], long)
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Appends a record to the log.
append(double, long)
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Appends a record to the log.
append(float)
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Appends a record to the log.
append(float[])
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Appends a record to the log.
append(float[], long)
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Appends a record to the log.
append(float, long)
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Appends a record to the log.
append(long)
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Appends a record to the log.
append(long[])
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Appends a record to the log.
append(long[], long)
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Appends a record to the log.
append(long, long)
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Appends a record to the log.
append(String)
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Appends a record to the log.
append(String[])
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Appends a record to the log.
append(String[], long)
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Appends a record to the log.
append(String, long)
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Appends a record to the log.
append(ByteBuffer)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(ByteBuffer, int, int)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(ByteBuffer, int, int, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(ByteBuffer, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Appends a record to the log.
append(Collection<T>)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Appends a record to the log.
append(Collection<T>, long)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Appends a record to the log.
append(T)
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Appends a record to the log.
append(T)
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Appends a record to the log.
append(T)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismObject2d
Append a Mechanism object that is based on this one.
append(T[])
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Appends a record to the log.
append(T[], long)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Appends a record to the log.
append(T, long)
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Appends a record to the log.
append(T, long)
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Appends a record to the log.
appendBoolean(int, boolean, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a boolean record to the log.
appendBooleanArray(int, boolean[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a boolean array record to the log.
appendDouble(int, double, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a double record to the log.
appendDoubleArray(int, double[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a double array record to the log.
appendFloat(int, float, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a float record to the log.
appendFloatArray(int, float[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a float array record to the log.
appendInteger(int, long, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends an integer record to the log.
appendIntegerArray(int, long[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends an integer array record to the log.
appendRaw(int, byte[], int, int, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a record to the log.
appendRaw(int, byte[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a raw record to the log.
appendRaw(int, ByteBuffer, int, int, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a record to the log.
appendRaw(int, ByteBuffer, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a record to the log.
appendString(int, String, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a string record to the log.
appendStringArray(int, String[], long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Appends a string array record to the log.
apply(double)
- Method in interface edu.wpi.first.units.
UnaryFunction
Applies this function to the input value and returns the result.
apply(int, int)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern.IndexMapper
Maps the index.
apply(int, String, int, String)
- Method in interface edu.wpi.first.cscore.
CameraServerJNI.LoggerFunction
Log a string.
applyDeadband(double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Returns 0.0 if the given value is within the specified range around zero.
applyDeadband(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Returns 0.0 if the given value is within the specified range around zero.
applyPastGlobalMeasurement(Nat<R>, KalmanTypeFilter<S, I, O>, double, Matrix<R, N1>, BiConsumer<Matrix<I, N1>, Matrix<R, N1>>, double)
- Method in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator
Add past global measurements (such as from vision)to the estimator.
applyTo(LEDReader, LEDWriter)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Writes the pattern to an LED buffer.
applyTo(T)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Convenience for
LEDPattern.applyTo(LEDReader, LEDWriter)
when one object provides both a read and
 a write interface.
AprilTag
- Class in
edu.wpi.first.apriltag
Represents an AprilTag's metadata.
AprilTag(int, Pose3d)
- Constructor for class edu.wpi.first.apriltag.
AprilTag
Constructs an AprilTag.
AprilTagDetection
- Class in
edu.wpi.first.apriltag
A detection of an AprilTag tag.
AprilTagDetection(String, int, int, float, double[], double, double, double[])
- Constructor for class edu.wpi.first.apriltag.
AprilTagDetection
Constructs a new detection result.
AprilTagDetector
- Class in
edu.wpi.first.apriltag
An AprilTag detector engine.
AprilTagDetector()
- Constructor for class edu.wpi.first.apriltag.
AprilTagDetector
Constructs an AprilTagDetector.
AprilTagDetector.Config
- Class in
edu.wpi.first.apriltag
Detector configuration.
AprilTagDetector.QuadThresholdParameters
- Class in
edu.wpi.first.apriltag
Quad threshold parameters.
AprilTagFieldLayout
- Class in
edu.wpi.first.apriltag
Class for representing a layout of AprilTags on a field and reading them from a JSON format.
AprilTagFieldLayout(String)
- Constructor for class edu.wpi.first.apriltag.
AprilTagFieldLayout
Construct a new AprilTagFieldLayout with values imported from a JSON file.
AprilTagFieldLayout(Path)
- Constructor for class edu.wpi.first.apriltag.
AprilTagFieldLayout
Construct a new AprilTagFieldLayout with values imported from a JSON file.
AprilTagFieldLayout(List<AprilTag>, double, double)
- Constructor for class edu.wpi.first.apriltag.
AprilTagFieldLayout
Construct a new AprilTagFieldLayout from a list of
AprilTag
objects.
AprilTagFieldLayout.OriginPosition
- Enum Class in
edu.wpi.first.apriltag
Common origin positions for the AprilTag coordinate system.
AprilTagFields
- Enum Class in
edu.wpi.first.apriltag
Loadable AprilTag field layouts.
AprilTagJNI
- Class in
edu.wpi.first.apriltag.jni
AprilTag JNI.
AprilTagJNI.Helper
- Class in
edu.wpi.first.apriltag.jni
Sets whether JNI should be loaded in the static block.
AprilTagPoseEstimate
- Class in
edu.wpi.first.apriltag
A pair of AprilTag pose estimates.
AprilTagPoseEstimate(Transform3d, Transform3d, double, double)
- Constructor for class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Constructs a pose estimate.
AprilTagPoseEstimator
- Class in
edu.wpi.first.apriltag
Pose estimators for AprilTag tags.
AprilTagPoseEstimator(AprilTagPoseEstimator.Config)
- Constructor for class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Creates estimator.
AprilTagPoseEstimator.Config
- Class in
edu.wpi.first.apriltag
Configuration for the pose estimator.
arcadeDrive(double, double)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Arcade drive method for differential drive platform.
arcadeDrive(double, double, boolean)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Arcade drive method for differential drive platform.
arcadeDriveIK(double, double, boolean)
- Static method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Arcade drive inverse kinematics for differential drive platform.
ArmFeedforward
- Class in
edu.wpi.first.math.controller
A helper class that computes feedforward outputs for a simple arm (modeled as a motor acting
 against the force of gravity on a beam suspended at an angle).
ArmFeedforward(double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ArmFeedforward
Creates a new ArmFeedforward with the specified gains.
ArmFeedforward(double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ArmFeedforward
Creates a new ArmFeedforward with the specified gains.
ArmFeedforward(double, double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ArmFeedforward
Creates a new ArmFeedforward with the specified gains and period.
ArmFeedforwardJNI
- Class in
edu.wpi.first.math.jni
ArmFeedforward JNI.
ArmFeedforwardProto
- Class in
edu.wpi.first.math.controller.proto
ArmFeedforwardProto()
- Constructor for class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
ArmFeedforwardStruct
- Class in
edu.wpi.first.math.controller.struct
ArmFeedforwardStruct()
- Constructor for class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
arraySize
- Variable in class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Array size.
asFrequency()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
asFrequency()
- Method in interface edu.wpi.first.units.measure.
Time
asPeriod()
- Method in interface edu.wpi.first.units.measure.
Frequency
Converts this frequency to the time period between cycles.
asProxy()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to run "by proxy" by wrapping it in a
ProxyCommand
.
assertWithinBounds(double, double, double)
- Static method in exception edu.wpi.first.hal.util.
BoundaryException
Make sure that the given value is between the upper and lower bounds, and throw an exception if
 they are not.
assignBlock(int, int, Matrix<R2, C2>)
- Method in class edu.wpi.first.math.
Matrix
Assign a matrix of a given size and start position.
AsynchronousInterrupt
- Class in
edu.wpi.first.wpilibj
Class for handling asynchronous interrupts using a callback thread.
AsynchronousInterrupt(DigitalSource, BiConsumer<Boolean, Boolean>)
- Constructor for class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Construct a new asynchronous interrupt using a Digital Source.
atBrightness(Dimensionless)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that plays this one, but at a different brightness.
atGoal()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns true if the error is within the tolerance of the error.
atReference()
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns true if the pose error is within tolerance of the reference.
atReference()
- Method in class edu.wpi.first.math.controller.
LTVDifferentialDriveController
Returns true if the pose error is within tolerance of the reference.
atReference()
- Method in class edu.wpi.first.math.controller.
LTVUnicycleController
Returns true if the pose error is within tolerance of the reference.
atReference()
- Method in class edu.wpi.first.math.controller.
RamseteController
Returns true if the pose error is within tolerance of the reference.
atSetpoint()
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns true if the error is within the tolerance of the setpoint.
atSetpoint()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns true if the error is within the tolerance of the setpoint.
atSetpoint()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns true if the error is within the tolerance of the error.
AUTOMATIC_TYPE
- Static variable in class edu.wpi.first.hal.
PowerDistributionJNI
Automatically determines the module type.
autonomous()
- Static method in class edu.wpi.first.wpilibj2.command.button.
RobotModeTriggers
Returns a trigger that is true when the robot is enabled in autonomous mode.
autonomousExit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Exit code for autonomous mode should go here.
autonomousInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Initialization code for autonomous mode should go here.
autonomousPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic code for autonomous mode should go here.
AxisCamera
- Class in
edu.wpi.first.cscore
Deprecated, for removal: This API element is subject to removal in a future version.
Use HttpCamera instead.
AxisCamera(String, String)
- Constructor for class edu.wpi.first.cscore.
AxisCamera
Deprecated.
Create a source for an Axis IP camera.
AxisCamera(String, String[])
- Constructor for class edu.wpi.first.cscore.
AxisCamera
Deprecated.
Create a source for an Axis IP camera.
axisGreaterThan(int, double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis value is less than
threshold
,
 attached to
the default command scheduler button
 loop
.
axisGreaterThan(int, double, EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs an event instance that is true when the axis value is greater than
threshold
, attached to the given loop.
axisGreaterThan(int, double, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis value is greater than
threshold
, attached to the given loop.
axisLessThan(int, double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis value is less than
threshold
,
 attached to
the default command scheduler button
 loop
.
axisLessThan(int, double, EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs an event instance that is true when the axis value is less than
threshold
,
 attached to the given loop.
axisLessThan(int, double, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis value is less than
threshold
,
 attached to the given loop.
axisMagnitudeGreaterThan(int, double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis magnitude value is greater than
threshold
, attached to
the default command
 scheduler button loop
.
axisMagnitudeGreaterThan(int, double, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance that is true when the axis magnitude value is greater than
threshold
, attached to the given loop.
B
b()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the B button's digital signal.
b()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the B button's digital signal.
b(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the B button's digital signal.
b(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the B button's digital signal.
b(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the B button's digital signal.
b(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the B button's digital signal.
B
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
The State-Space 1x1 input matrix.
back()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the back button's digital signal.
back(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the back button's digital signal.
back(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the back button's digital signal.
backend
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The backend implementation for Epilogue to use.
backwardFiniteDifference(int, int, double)
- Static method in class edu.wpi.first.math.filter.
LinearFilter
Creates a backward finite difference filter that computes the nth derivative of the input given
 the specified number of samples.
BadSchemaException
- Exception in
edu.wpi.first.util.struct
Exception thrown when encountering a bad schema.
BadSchemaException(String)
- Constructor for exception edu.wpi.first.util.struct.
BadSchemaException
Constructs a BadSchemaException.
BadSchemaException(String, String)
- Constructor for exception edu.wpi.first.util.struct.
BadSchemaException
Constructs a BadSchemaException.
BadSchemaException(String, String, Throwable)
- Constructor for exception edu.wpi.first.util.struct.
BadSchemaException
Constructs a BadSchemaException.
BadSchemaException(String, Throwable)
- Constructor for exception edu.wpi.first.util.struct.
BadSchemaException
Constructs a BadSchemaException.
BadSchemaException(Throwable)
- Constructor for exception edu.wpi.first.util.struct.
BadSchemaException
Constructs a BadSchemaException.
BangBangController
- Class in
edu.wpi.first.math.controller
Implements a bang-bang controller, which outputs either 0 or 1 depending on whether the
 measurement is less than the setpoint.
BangBangController()
- Constructor for class edu.wpi.first.math.controller.
BangBangController
Creates a new bang-bang controller.
BangBangController(double)
- Constructor for class edu.wpi.first.math.controller.
BangBangController
Creates a new bang-bang controller.
basenameKey(String)
- Static method in class edu.wpi.first.networktables.
NetworkTable
Gets the "base name" of a key.
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Acceleration
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Angle
baseUnit()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
baseUnit()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
baseUnit()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
baseUnit()
- Method in interface edu.wpi.first.units.
Measure
A convenience method to get the base unit of the measurement.
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Current
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Distance
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Energy
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Force
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Frequency
baseUnit()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
baseUnit()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
baseUnit()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Mass
baseUnit()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Mult
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Per
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Power
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Resistance
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Temperature
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Time
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Torque
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Velocity
baseUnit()
- Method in interface edu.wpi.first.units.measure.
Voltage
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in interface edu.wpi.first.units.
Measure
Gets the magnitude of this measure in terms of the base unit.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Returns the value of the
baseUnitMagnitude
record component.
baseUnitMagnitude()
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
BaseUnits
- Class in
edu.wpi.first.units
The base units of measure.
BatterySim
- Class in
edu.wpi.first.wpilibj.simulation
A utility class to simulate the robot battery.
beforeStarting(Command)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with another command to run before this command starts.
beforeStarting(Runnable, Subsystem...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a runnable to run before this command starts.
bind(Runnable)
- Method in class edu.wpi.first.wpilibj.event.
EventLoop
Bind a new action to run when the loop is polled.
bitWidth
- Variable in class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Bit width.
blend(LEDPattern)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that displays outputs as a combination of this pattern and another.
blink(Time)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Like
blink(onTime, offTime)
, but where the "off" time is exactly
 equal to the "on" time.
blink(Time, Time)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that switches between playing this pattern and turning the entire LED strip
 off.
block(int, int, int, int)
- Method in class edu.wpi.first.math.
Matrix
Extracts a matrix of a given size and start position with new underlying storage.
block(Nat<R2>, Nat<C2>, int, int)
- Method in class edu.wpi.first.math.
Matrix
Extracts a matrix of a given size and start position with new underlying storage.
blue
- Variable in class edu.wpi.first.wpilibj.util.
Color
Blue component (0-1).
blue
- Variable in class edu.wpi.first.wpilibj.util.
Color8Bit
Blue component (0-255).
Blue
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.Alliance
Blue alliance.
Blue1
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Blue 1.
Blue2
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Blue 2.
Blue3
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Blue 3.
BooleanArrayEntry
- Interface in
edu.wpi.first.networktables
NetworkTables BooleanArray entry.
BooleanArrayLogEntry
- Class in
edu.wpi.first.util.datalog
Log array of boolean values.
BooleanArrayLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Constructs a boolean array log entry.
BooleanArrayLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Constructs a boolean array log entry.
BooleanArrayLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Constructs a boolean array log entry.
BooleanArrayLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Constructs a boolean array log entry.
BooleanArrayPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables BooleanArray publisher.
BooleanArraySubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables BooleanArray subscriber.
BooleanArrayTopic
- Class in
edu.wpi.first.networktables
NetworkTables BooleanArray topic.
BooleanArrayTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
BooleanArrayTopic
Constructor; use NetworkTableInstance.getBooleanArrayTopic() instead.
BooleanArrayTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
BooleanArrayTopic
Construct from a generic topic.
BooleanConsumer
- Interface in
edu.wpi.first.util.function
Represents an operation that accepts a single boolean-valued argument and returns no result.
BooleanEntry
- Interface in
edu.wpi.first.networktables
NetworkTables Boolean entry.
BooleanEvent
- Class in
edu.wpi.first.wpilibj.event
This class provides an easy way to link actions to active high logic signals.
BooleanEvent(EventLoop, BooleanSupplier)
- Constructor for class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new event that is active when the condition is true.
BooleanLogEntry
- Class in
edu.wpi.first.util.datalog
Log boolean values.
BooleanLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
BooleanLogEntry
Constructs a boolean log entry.
BooleanLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
BooleanLogEntry
Constructs a boolean log entry.
BooleanLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
BooleanLogEntry
Constructs a boolean log entry.
BooleanLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
BooleanLogEntry
Constructs a boolean log entry.
BooleanPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables Boolean publisher.
BooleanSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables Boolean subscriber.
BooleanTopic
- Class in
edu.wpi.first.networktables
NetworkTables Boolean topic.
BooleanTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
BooleanTopic
Constructor; use NetworkTableInstance.getBooleanTopic() instead.
BooleanTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
BooleanTopic
Construct from a generic topic.
BoundaryException
- Exception in
edu.wpi.first.hal.util
This exception represents an error in which a lower limit was set as higher than an upper limit.
BoundaryException(String)
- Constructor for exception edu.wpi.first.hal.util.
BoundaryException
Create a new exception with the given message.
breathe(Time)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that brightens and dims this one over time.
Brownout
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
The input voltage is below the minimum voltage.
Brownout
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
The input voltage was below the minimum voltage.
Brownout
- Variable in class edu.wpi.first.hal.
REVPHFaults
The input voltage is below the minimum voltage.
Brownout
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The input voltage is below the minimum voltage.
BufferCallback
- Interface in
edu.wpi.first.hal.simulation
Interface for simulation buffer callbacks.
build()
- Method in class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder
Builds the schema.
build()
- Method in class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder.EnumFieldBuilder
Builds the enum field.
builder
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Sendable builder for the sendable.
buildInto(NetworkTable, NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ComplexWidget
buildInto(NetworkTable, NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
buildInto(NetworkTable, NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
buildInto(NetworkTable, NetworkTable)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Builds the entries for this value.
buildInto(NetworkTable, NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SimpleWidget
buildInto(NetworkTable, NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SuppliedValueWidget
buildMetadata(NetworkTable)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Builds NT metadata.
BuiltInAccelerometer
- Class in
edu.wpi.first.wpilibj
Built-in accelerometer.
BuiltInAccelerometer()
- Constructor for class edu.wpi.first.wpilibj.
BuiltInAccelerometer
Constructor.
BuiltInAccelerometer(BuiltInAccelerometer.Range)
- Constructor for class edu.wpi.first.wpilibj.
BuiltInAccelerometer
Constructor.
BuiltInAccelerometer.Range
- Enum Class in
edu.wpi.first.wpilibj
Accelerometer range.
BuiltInAccelerometerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated built-in accelerometer.
BuiltInAccelerometerSim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Constructs for the first built-in accelerometer.
BuiltInAccelerometerSim(BuiltInAccelerometer)
- Constructor for class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Constructs from a BuiltInAccelerometer object.
BuiltInLayouts
- Enum Class in
edu.wpi.first.wpilibj.shuffleboard
The types of layouts bundled with Shuffleboard.
BuiltInWidgets
- Enum Class in
edu.wpi.first.wpilibj.shuffleboard
The types of the widgets bundled with Shuffleboard.
busOffCount
- Variable in class edu.wpi.first.hal.can.
CANStatus
The CAN Bus off count.
button(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs an event instance around this button's digital signal.
button(int, EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs an event instance around this button's digital signal.
button(int, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs an event instance around this button's digital signal.
C
calculate(boolean)
- Method in class edu.wpi.first.math.filter.
Debouncer
Applies the debouncer to the input stream.
calculate(double)
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the calculated control output.
calculate(double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the feedforward from the gains and velocity setpoint assuming continuous control
 (acceleration is assumed to be zero).
calculate(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the next output of the PID controller.
calculate(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the next output of the PID controller.
calculate(double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the feedforward from the gains and velocity setpoint assuming continuous control
 (acceleration is assumed to be zero).
calculate(double)
- Method in class edu.wpi.first.math.filter.
LinearFilter
Calculates the next value of the filter.
calculate(double)
- Method in class edu.wpi.first.math.filter.
MedianFilter
Calculates the moving-window median for the next value of the input stream.
calculate(double)
- Method in class edu.wpi.first.math.filter.
SlewRateLimiter
Filters the input to limit its slew rate.
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the feedforward from the gains and velocity setpoint assuming continuous control
 (acceleration is assumed to be zero).
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the calculated control output.
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Deprecated, for removal: This API element is subject to removal in a future version.
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the next output of the PID controller.
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the next output of the PIDController.
calculate(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Deprecated, for removal: This API element is subject to removal in a future version.
Use
SimpleMotorFeedforward.calculateWithVelocities(double, double)
instead.
calculate(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Deprecated, for removal: This API element is subject to removal in a future version.
calculate(double, double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Deprecated, for removal: This API element is subject to removal in a future version.
calculate(double, double, double, double)
- Method in class edu.wpi.first.math.controller.
DifferentialDriveAccelerationLimiter
Returns the next voltage pair subject to acceleration constraints.
calculate(double, double, double, double, double)
- Method in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
Calculates the differential drive feedforward inputs given velocity setpoints.
calculate(double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.jni.
ArmFeedforwardJNI
Obtain a feedforward voltage from a single jointed arm feedforward object.
calculate(double, ExponentialProfile.State, ExponentialProfile.State)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile
Calculates the position and velocity for the profile at a time t where the current state is at
 time t = 0.
calculate(double, TrapezoidProfile.State)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the next output of the PID controller.
calculate(double, TrapezoidProfile.State, TrapezoidProfile.Constraints)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the next output of the PID controller.
calculate(double, TrapezoidProfile.State, TrapezoidProfile.State)
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile
Calculates the position and velocity for the profile at a time t where the current state is at
 time t = 0.
calculate(Pose2d, double, double, Pose2d, double, double)
- Method in class edu.wpi.first.math.controller.
LTVDifferentialDriveController
Returns the left and right output voltages of the LTV controller.
calculate(Pose2d, double, double, Trajectory.State)
- Method in class edu.wpi.first.math.controller.
LTVDifferentialDriveController
Returns the left and right output voltages of the LTV controller.
calculate(Pose2d, Pose2d, double, double)
- Method in class edu.wpi.first.math.controller.
LTVUnicycleController
Returns the linear and angular velocity outputs of the LTV controller.
calculate(Pose2d, Pose2d, double, double)
- Method in class edu.wpi.first.math.controller.
RamseteController
Returns the next output of the Ramsete controller.
calculate(Pose2d, Pose2d, double, Rotation2d)
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns the next output of the holonomic drive controller.
calculate(Pose2d, Trajectory.State)
- Method in class edu.wpi.first.math.controller.
LTVUnicycleController
Returns the next output of the LTV controller.
calculate(Pose2d, Trajectory.State)
- Method in class edu.wpi.first.math.controller.
RamseteController
Returns the next output of the Ramsete controller.
calculate(Pose2d, Trajectory.State, Rotation2d)
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns the next output of the holonomic drive controller.
calculate(Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Calculate the feedforward with only the desired future reference.
calculate(Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Calculate the feedforward with only the desired future reference.
calculate(Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns the next output of the controller.
calculate(Matrix<States, N1>, Matrix<Inputs, N1>)
- Method in class edu.wpi.first.math.controller.
ImplicitModelFollower
Returns the next output of the controller.
calculate(Matrix<States, N1>, Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Calculate the feedforward with current and future reference vectors.
calculate(Matrix<States, N1>, Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Calculate the feedforward with current and future reference vectors.
calculate(Matrix<States, N1>, Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns the next output of the controller.
calculateDefaultBatteryLoadedVoltage(double...)
- Static method in class edu.wpi.first.wpilibj.simulation.
BatterySim
Calculate the loaded battery voltage.
calculateInflectionPoint(ExponentialProfile.State, ExponentialProfile.State)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile
Calculates the point after which the fastest way to reach the goal state is to apply input in
 the opposite direction.
calculateLoadedBatteryVoltage(double, double, double...)
- Static method in class edu.wpi.first.wpilibj.simulation.
BatterySim
Calculate the loaded battery voltage.
calculateProfileTiming(ExponentialProfile.State, ExponentialProfile.State)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile
Calculates the time it will take for this profile to reach the inflection point, and the time
 it will take for this profile to reach the goal state.
calculateWithVelocities(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the feedforward from the gains and setpoints assuming discrete control.
calculateWithVelocities(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the feedforward from the gains and setpoints assuming discrete control.
calculateWithVelocities(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the feedforward from the gains and setpoints assuming discrete control.
calculateX(Matrix<States, N1>, Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.math.system.
LinearSystem
Computes the new x given the old x and the control input.
calculateY(Matrix<States, N1>, Matrix<Inputs, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystem
Computes the new y given the control input.
calibrate()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Calibrate the gyro.
calibrate()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Calibrate the gyro.
calibrate()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Calibrate the gyro by running for a number of samples and computing the center value.
calibrate()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Calibrate the gyro by running for a number of samples and computing the center value.
calibrateAnalogGyro(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Calibrates the analog gyro.
callback(String, byte[], int)
- Method in interface edu.wpi.first.hal.simulation.
BufferCallback
Simulation buffer callback function.
callback(String, byte[], int)
- Method in interface edu.wpi.first.hal.simulation.
ConstBufferCallback
callback(String, int)
- Method in interface edu.wpi.first.hal.simulation.
SimDeviceCallback
callback(String, int[], int)
- Method in interface edu.wpi.first.hal.simulation.
SpiReadAutoReceiveBufferCallback
callback(String, int, int, HALValue)
- Method in interface edu.wpi.first.hal.simulation.
SimValueCallback
callback(String, HALValue)
- Method in interface edu.wpi.first.hal.simulation.
NotifyCallback
CallbackData()
- Constructor for class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Default constructor.
callbackNative(String, int, int, int, long, double)
- Method in interface edu.wpi.first.hal.simulation.
SimValueCallback
callbackNative(String, int, long, double)
- Method in interface edu.wpi.first.hal.simulation.
NotifyCallback
CallbackStore
- Class in
edu.wpi.first.wpilibj.simulation
Manages simulation callbacks; each object is associated with a callback.
CallbackStore()
- Constructor for class edu.wpi.first.wpilibj.simulation.
CallbackStore
Constructs an empty CallbackStore.
CallbackStore(int, int, int, CallbackStore.CancelCallbackChannelFunc)
- Constructor for class edu.wpi.first.wpilibj.simulation.
CallbackStore
Note: This constructor is for simulation classes only.
CallbackStore(int, int, CallbackStore.CancelCallbackFunc)
- Constructor for class edu.wpi.first.wpilibj.simulation.
CallbackStore
Note: This constructor is for simulation classes only.
CallbackStore(int, CallbackStore.CancelCallbackNoIndexFunc)
- Constructor for class edu.wpi.first.wpilibj.simulation.
CallbackStore
Note: This constructor is for simulation classes only.
CameraServer
- Class in
edu.wpi.first.cameraserver
Singleton class for creating and keeping camera servers.
CameraServerJNI
- Class in
edu.wpi.first.cscore
CameraServer JNI.
CameraServerJNI.Helper
- Class in
edu.wpi.first.cscore
Sets whether JNI should be loaded in the static block.
CameraServerJNI.LoggerFunction
- Interface in
edu.wpi.first.cscore
Logger functional interface.
CameraServerJNI.TelemetryKind
- Enum Class in
edu.wpi.first.cscore
Telemetry kind.
CameraServerShared
- Interface in
edu.wpi.first.cameraserver
CameraServer shared functions.
CameraServerSharedStore
- Class in
edu.wpi.first.cameraserver
Storage for CameraServerShared instance.
CAN
- Class in
edu.wpi.first.wpilibj
High level class for interfacing with CAN devices conforming to the standard CAN spec.
CAN(int)
- Constructor for class edu.wpi.first.wpilibj.
CAN
Create a new CAN communication interface with the specific device ID.
CAN(int, int, int)
- Constructor for class edu.wpi.first.wpilibj.
CAN
Create a new CAN communication interface with a specific device ID, manufacturer and device
 type.
CAN_IS_FRAME_11BIT
- Static variable in class edu.wpi.first.hal.can.
CANJNI
Mask for "is frame 11 bits" in message ID.
CAN_IS_FRAME_REMOTE
- Static variable in class edu.wpi.first.hal.can.
CANJNI
Mask for "is frame remote" in message ID.
CAN_SEND_PERIOD_NO_REPEAT
- Static variable in class edu.wpi.first.hal.can.
CANJNI
Flag for sending a CAN message once.
CAN_SEND_PERIOD_STOP_REPEATING
- Static variable in class edu.wpi.first.hal.can.
CANJNI
Flag for stopping periodic CAN message sends.
CANAPIJNI
- Class in
edu.wpi.first.hal
CAN API HAL JNI Functions.
CANAPITypes
- Class in
edu.wpi.first.hal
CAN API Types.
CANAPITypes.CANDeviceType
- Enum Class in
edu.wpi.first.hal
FRC CAN device type.
CANAPITypes.CANManufacturer
- Enum Class in
edu.wpi.first.hal
FRC CAN manufacturer ID.
CanBusOff
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
The device's CAN controller experienced a "Bus Off" event.
CanBusOff
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The device's CAN controller experienced a "Bus Off" event.
cancel()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Cancels this command.
cancel(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Cancels commands.
cancelAccumulatorCenterCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelAccumulatorCountCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelAccumulatorDeadbandCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelAccumulatorInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelAccumulatorValueCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelActiveCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
cancelActiveCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
cancelAll()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Cancels all commands that are currently scheduled.
cancelAllianceStationIdCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelAngleCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
cancelAutonomousCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelAverageBitsCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelBrownoutVoltageCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelClosedLoopEnabledCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelCompressorConfigTypeCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelCompressorCurrentCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelCompressorCurrentCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelCompressorOnCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelCompressorOnCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelCountCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelCPUTempCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelCurrentCallback(int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
cancelDataCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
cancelDirectionCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelDistancePerPulseCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelDsAttachedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelDutyCycleCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
cancelEnabledCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelEStopCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelFilterIndexCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
cancelFmsAttachedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelForwardCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
cancelFPGAButtonCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelFrequencyCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelInitializedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
cancelInitializedForwardCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
cancelInitializedReverseCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
cancelIsInputCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
cancelLengthCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
cancelMatchTimeCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelMaxPeriodCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelNotifierAlarm(int)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Cancels the next notifier alarm.
cancelOutputCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
cancelOutputPortCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
cancelOversampleBitsCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelPeriodCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelPeriodScaleCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
cancelPinCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
cancelPollListener(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Cancels poll listener.
cancelPositionCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
cancelPressureSwitchCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelPressureSwitchCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelPulseLengthCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
cancelPulseMicrosecondCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
cancelRadioLEDStateCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelRangeCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
cancelRangeCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
cancelRateCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
cancelReadAutoReceiveBufferCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
cancelReadCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
cancelReadCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
cancelResetCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelReverseCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
cancelReverseDirectionCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelRunningCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
cancelSamplesToAverageCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
cancelSimDeviceCreatedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
cancelSimDeviceFreedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
cancelSimValueChangedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
cancelSimValueCreatedCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
cancelSimValueResetCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
cancelSolenoidOutputCallback(int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
cancelSolenoidOutputCallback(int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
cancelSpeedCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
cancelTeamNumberCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelTemperatureCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
cancelTestCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
cancelTriggerLowerBoundCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
cancelTriggerUpperBoundCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
cancelUserActive3V3Callback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserActive5VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserActive6VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserCurrent3V3Callback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserCurrent5VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserCurrent6VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserFaults3V3Callback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserFaults5VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserFaults6VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserVoltage3V3Callback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserVoltage5VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelUserVoltage6VCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelValueCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
cancelVInCurrentCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelVInVoltageCallback(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
cancelVoltageCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
cancelVoltageCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
cancelVoltageCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
cancelWriteCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
cancelWriteCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
cancelXCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
cancelXCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
cancelYCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
cancelYCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
cancelZCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
cancelZCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
cancelZeroLatchCallback(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
CANData
- Class in
edu.wpi.first.hal
Represents a received CAN message.
CANData()
- Constructor for class edu.wpi.first.hal.
CANData
Default constructor.
CANExceptionFactory
- Class in
edu.wpi.first.hal.can
Checks the status of a CAN message and throws an exception of the appropriate type if necessary.
CANInvalidBufferException
- Exception in
edu.wpi.first.hal.can
Exception indicating that a CAN driver library entry-point was passed an invalid buffer.
CANInvalidBufferException()
- Constructor for exception edu.wpi.first.hal.can.
CANInvalidBufferException
Constructs a new CANInvalidBufferException with no message.
CANInvalidBufferException(String)
- Constructor for exception edu.wpi.first.hal.can.
CANInvalidBufferException
Constructs a new CANInvalidBufferException with
msg
as its detail message.
CANJNI
- Class in
edu.wpi.first.hal.can
CAN API HAL JNI Functions.
CANJNI()
- Constructor for class edu.wpi.first.hal.can.
CANJNI
Default constructor.
CANMessageNotAllowedException
- Exception in
edu.wpi.first.hal.can
Exception indicating that the Jaguar CAN Driver layer refused to send a restricted message ID to
 the CAN bus.
CANMessageNotAllowedException(String)
- Constructor for exception edu.wpi.first.hal.can.
CANMessageNotAllowedException
Constructs a new CANMessageNotAllowedException with
msg
as its detail message.
CANMessageNotFoundException
- Exception in
edu.wpi.first.hal.can
Exception indicating that a can message is not available from Network Communications.
CANMessageNotFoundException()
- Constructor for exception edu.wpi.first.hal.can.
CANMessageNotFoundException
Constructs a new CANMessageNotFoundException with no message.
CANMessageNotFoundException(String)
- Constructor for exception edu.wpi.first.hal.can.
CANMessageNotFoundException
Constructs a new CANMessageNotFoundException with
msg
as its detail message.
CANNotInitializedException
- Exception in
edu.wpi.first.hal.can
Exception indicating that the CAN driver layer has not been initialized.
CANNotInitializedException()
- Constructor for exception edu.wpi.first.hal.can.
CANNotInitializedException
Constructs a new CANNotInitializedException with no message.
CANNotInitializedException(String)
- Constructor for exception edu.wpi.first.hal.can.
CANNotInitializedException
Constructs a new CANNotInitializedException with
msg
as its detail message.
CANStatus
- Class in
edu.wpi.first.hal.can
Structure for holding the result of a CAN Status request.
CANStatus()
- Constructor for class edu.wpi.first.hal.can.
CANStatus
Default constructor.
CANStreamMessage
- Class in
edu.wpi.first.hal
Represents a CAN message read from a stream.
CANStreamMessage()
- Constructor for class edu.wpi.first.hal.
CANStreamMessage
Default constructor.
CANStreamOverflowException
- Exception in
edu.wpi.first.hal.can
Exception indicating that a CAN stream overflowed at some point between reads, therefore some
 messages were lost.
CANStreamOverflowException(CANStreamMessage[], int)
- Constructor for exception edu.wpi.first.hal.can.
CANStreamOverflowException
Constructs a new CANStreamOverflowException.
CanWarning
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
A warning was raised by the device's CAN controller.
CanWarning
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
A warning was raised by the device's CAN controller.
CanWarning
- Variable in class edu.wpi.first.hal.
REVPHFaults
A warning was raised by the device's CAN controller.
CanWarning
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
A warning was raised by the device's CAN controller.
castTo(BiFunction<EventLoop, BooleanSupplier, T>)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
A method to "downcast" a BooleanEvent instance to a subclass (for example, to a command-based
 version of this class).
Celsius
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of temperature, where a value of 0 roughly corresponds to the freezing
 point of water and a value of 100 corresponds to the boiling point.
center
- Variable in class edu.wpi.first.hal.
PWMConfigDataResult
The center PWM value in microseconds.
Centimeter
- Static variable in class edu.wpi.first.units.
Units
1/100 of a
Units.Meter
.
Centimeters
- Static variable in class edu.wpi.first.units.
Units
1/100 of a
Units.Meter
.
CentripetalAccelerationConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
A constraint on the maximum absolute centripetal acceleration allowed when traversing a
 trajectory.
CentripetalAccelerationConstraint(double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
CentripetalAccelerationConstraint
Constructs a centripetal acceleration constraint.
changeBoundsUnchecked(Matrix<?, ?>)
- Static method in class edu.wpi.first.math.
Matrix
Reassigns dimensions of a
Matrix
to allow for operations with other matrices that have
 wildcard dimensions.
Channel0BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 0.
Channel0BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 0.
Channel0Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 0.
Channel10BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 10.
Channel10BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 10.
Channel10Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 10.
Channel11BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 11.
Channel11BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 11.
Channel11Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 11.
Channel12BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 12.
Channel12BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 12.
Channel12Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 12.
Channel13BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 13.
Channel13BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 13.
Channel13Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 13.
Channel14BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 14.
Channel14BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 14.
Channel14Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 14.
Channel15BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 15.
Channel15BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 15.
Channel15Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 15.
Channel16BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 16.
Channel16BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 16.
Channel17BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 17.
Channel17BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 17.
Channel18BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 18.
Channel18BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 18.
Channel19BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 19.
Channel19BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 19.
Channel1BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 1.
Channel1BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 1.
Channel1Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 1.
Channel20BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 20.
Channel20BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 20.
Channel21BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 21.
Channel21BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 21.
Channel22BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 22.
Channel22BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 22.
Channel23BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 23.
Channel23BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 23.
Channel2BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 2.
Channel2BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 2.
Channel2Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 2.
Channel3BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 3.
Channel3BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 3.
Channel3Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 3.
Channel4BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 4.
Channel4BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 4.
Channel4Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 4.
Channel5BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 5.
Channel5BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 5.
Channel5Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 5.
Channel6BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 6.
Channel6BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 6.
Channel6Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 6.
Channel7BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 7.
Channel7BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 7.
Channel7Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 7.
Channel8BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 8.
Channel8BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 8.
Channel8Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 8.
Channel9BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
Breaker fault on channel 9.
Channel9BreakerFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Breaker fault on channel 9.
Channel9Fault
- Variable in class edu.wpi.first.hal.
REVPHFaults
Fault on channel 9.
ChassisSpeeds
- Class in
edu.wpi.first.math.kinematics
Represents the speed of a robot chassis.
ChassisSpeeds()
- Constructor for class edu.wpi.first.math.kinematics.
ChassisSpeeds
Constructs a ChassisSpeeds with zeros for dx, dy, and theta.
ChassisSpeeds(double, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
ChassisSpeeds
Constructs a ChassisSpeeds object.
ChassisSpeeds(LinearVelocity, LinearVelocity, AngularVelocity)
- Constructor for class edu.wpi.first.math.kinematics.
ChassisSpeeds
Constructs a ChassisSpeeds object.
ChassisSpeedsProto
- Class in
edu.wpi.first.math.kinematics.proto
ChassisSpeedsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
ChassisSpeedsStruct
- Class in
edu.wpi.first.math.kinematics.struct
ChassisSpeedsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
check()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Check if this motor has exceeded its timeout.
checkAnalogInputChannel(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Checks that the analog output channel number is valid.
checkAnalogInputChannel(int)
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Check that the analog input number is value.
checkAnalogModule(byte)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Checks that the analog module number is valid.
checkAnalogOutputChannel(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Checks that the analog output channel number is valid.
checkAnalogOutputChannel(int)
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Check that the analog input number is value.
checkAndReserveSolenoids(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
checkAndReserveSolenoids(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Check to see if the solenoids marked in the bitmask can be reserved, and if so, reserve them.
checkAndReserveSolenoids(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
checkChannel(int, int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Checks if a PowerDistribution channel is valid.
checkDigitalChannel(int)
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Check that the digital channel number is valid.
checkDIOChannel(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Checks if a DIO channel is valid.
CheckedAllocationException
- Exception in
edu.wpi.first.hal.util
Exception indicating that the resource is already allocated.
CheckedAllocationException(String)
- Constructor for exception edu.wpi.first.hal.util.
CheckedAllocationException
Create a new CheckedAllocationException.
checkModule(int, int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Checks if a PowerDistribution module is valid.
checkMotors()
- Static method in class edu.wpi.first.wpilibj.
MotorSafety
Check the motors to see if any have timed out.
checkMsvcRuntime()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Checks if the MSVC runtime is valid.
checkPWMChannel(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Checks if a pwm channel is valid.
checkPWMChannel(int)
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Check that the digital channel number is valid.
checkRelayChannel(int)
- Static method in class edu.wpi.first.hal.
RelayJNI
Checks if a relay channel is valid.
checkRelayChannel(int)
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Check that the digital channel number is valid.
checkSolenoidChannel(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Checks if a solenoid channel number is valid.
checkSolenoidChannel(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Checks if a solenoid channel number is valid.
checkSolenoidChannel(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
checkSolenoidChannel(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Check if a solenoid channel is valid.
checkSolenoidChannel(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
checkStatus(int, int)
- Static method in class edu.wpi.first.hal.can.
CANExceptionFactory
Checks the status of a CAN message with the given message ID.
circle()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the circle button's digital signal.
circle()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the circle button's digital signal.
circle(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the circle button's digital signal.
circle(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the circle button's digital signal.
circle(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the circle button's digital signal.
circle(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the circle button's digital signal.
CircularBuffer
<
T
> - Class in
edu.wpi.first.util
This is a simple circular buffer so we don't need to "bucket brigade" copy old values.
CircularBuffer(int)
- Constructor for class edu.wpi.first.util.
CircularBuffer
Create a CircularBuffer with the provided size.
clamp(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Returns value clamped between low and high boundaries.
clamp(int, int, int)
- Static method in class edu.wpi.first.math.
MathUtil
Returns value clamped between low and high boundaries.
clampInput(double)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Clamp the input vector such that no element exceeds the maximum allowed value.
clampInput(Matrix<N2, N1>)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Clamp the input vector such that no element exceeds the battery voltage.
clampInput(Matrix<Inputs, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Clamp the input u to the min and max.
clampInputMaxMagnitude(Matrix<I, N1>, Matrix<I, N1>, Matrix<I, N1>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Clamp the input u to the min and max.
ClassPreloader
- Class in
edu.wpi.first.util
Loads classes by name.
ClassSpecificLogger
<
T
> - Class in
edu.wpi.first.epilogue.logging
Base class for class-specific generated loggers.
ClassSpecificLogger(Class<T>)
- Constructor for class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Instantiates the logger.
cleanAnalogTrigger(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Frees an analog trigger.
cleanCAN(int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Frees a CAN device.
cleanInterrupts(int)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Frees an interrupt.
cleanNotifier(int)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Cleans a notifier.
CleanupPool
- Class in
edu.wpi.first.util.cleanup
An object containing a Stack of AutoCloseable objects that are closed when this object is closed.
CleanupPool()
- Constructor for class edu.wpi.first.util.cleanup.
CleanupPool
Default constructor.
clear()
- Method in class edu.wpi.first.math.interpolation.
InterpolatingTreeMap
Clears the contents.
clear()
- Method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Clear all old samples.
clear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
clear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
clear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
clear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
clear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
clear()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
clear()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
clear()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
clear()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
clear()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
clear()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
clear()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
clear()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
clear()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
clear()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
clear()
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Clears and removes all entries from the map.
clear()
- Method in class edu.wpi.first.util.
CircularBuffer
Sets internal buffer contents to zero.
clear()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Sets internal buffer contents to zero.
clear()
- Method in class edu.wpi.first.wpilibj.event.
EventLoop
Clear all bindings.
clearA()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix a = 4;
clearAcceleration()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double acceleration = 3;
clearAllStickyFaults()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Clears all sticky faults on this device.
clearAllStickyFaults(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Clears all sticky faults on this device.
clearAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional .wpi.proto.ProtobufRotation2d angle = 2;
clearAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional .wpi.proto.ProtobufRotation2d angle = 2;
clearB()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix b = 5;
clearC()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix c = 6;
clearCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional .wpi.proto.ProtobufPose2d center = 1;
clearCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional .wpi.proto.ProtobufPose2d center = 1;
clearComposedCommands()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Clears the list of composed commands, allowing all commands to be freely used again.
clearCounterDownSource(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Disables the down counting source to the counter.
clearCounterUpSource(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Disables the up counting source to the counter.
clearCurvature()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double curvature = 5;
clearD()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix d = 7;
clearData()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
clearDistance()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional double distance = 1;
clearDownSource()
- Method in class edu.wpi.first.wpilibj.
Counter
Disable the down counting source to the counter.
clearDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double dt = 5;
clearDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double dt = 5;
clearDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double dt = 4;
clearDtheta()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dtheta = 3;
clearDx()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dx = 1;
clearDx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dx = 1;
clearDy()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dy = 2;
clearDy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dy = 2;
clearDz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dz = 3;
clearEpochs()
- Method in class edu.wpi.first.wpilibj.
Tracer
Clears all epochs.
clearExternalTriggers()
- Method in class edu.wpi.first.wpilibj.
DMA
Clear all external triggers from the DMA trigger list.
clearExternalTriggers(int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Clear all external triggers from the DMA trigger list.
clearFamilies()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Unregister all families.
clearFamilies(long)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Unregister all families.
clearFreeCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_current = 4;
clearFreeSpeed()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_speed = 5;
clearFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_left = 1;
clearFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_left = 1;
clearFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_left = 1;
clearFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_right = 2;
clearFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_right = 2;
clearFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_right = 2;
clearKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ka = 4;
clearKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ka = 4;
clearKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ka = 3;
clearKaAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_angular = 4;
clearKaLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_linear = 2;
clearKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kg = 2;
clearKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kg = 2;
clearKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ks = 1;
clearKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ks = 1;
clearKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ks = 1;
clearKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kv = 3;
clearKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kv = 3;
clearKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double kv = 2;
clearKvAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_angular = 3;
clearKvLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_linear = 1;
clearLeft()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double left = 1;
clearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double left = 1;
clearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double left = 1;
clearModules()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
clearNominalVoltage()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double nominal_voltage = 1;
clearNumCols()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_cols = 2;
clearNumInputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_inputs = 2;
clearNumOutputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_outputs = 3;
clearNumRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_rows = 1;
clearNumStates()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_states = 1;
clearOmega()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double omega = 3;
clearPersistent()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Stop making value persistent through program restarts.
clearPersistent(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Stop making a key's value persistent through program restarts.
clearPose()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional .wpi.proto.ProtobufPose2d pose = 4;
clearProperties()
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
clearProperties()
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Clear properties.
clearProperties()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Clear properties.
clearQ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
optional .wpi.proto.ProtobufQuaternion q = 1;
clearQuick()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
clearQuick()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
clearQuick()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
clearQuick()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
clearQuick()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
clearQuick()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
clearQuick()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
clearQuick()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
clearQuick()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
clearQuick()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
clearQuick()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
clearQuick()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
clearQuick()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
clearQuick()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
clearRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_left = 3;
clearRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_left = 3;
clearRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_left = 3;
clearRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_right = 4;
clearRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_right = 4;
clearRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_right = 4;
clearRecordingFileNameFormat()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Clears the custom name format for recording files.
clearRight()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double right = 2;
clearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double right = 2;
clearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double right = 2;
clearRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
clearRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
clearRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
clearRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
clearRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
clearRx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rx = 4;
clearRy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double ry = 5;
clearRz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rz = 6;
clearSensors()
- Method in class edu.wpi.first.wpilibj.
DMA
Clear all sensors from the DMA collection list.
clearSensors(int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Clear all sensors from the DMA collection list.
clearSpeed()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional double speed = 1;
clearStallCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_current = 3;
clearStallTorque()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_torque = 2;
clearStates()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
clearStickyFaults()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Clears the sticky faults.
clearStickyFaults()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Clear all PDP/PDH sticky faults.
clearStickyFaults(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Clears any PowerDistribution sticky faults.
clearStickyFaults(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Clears the sticky faults.
clearTime()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double time = 1;
clearTrackWidth()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
optional double track_width = 1;
clearTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
clearTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
clearTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
clearTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
clearUpSource()
- Method in class edu.wpi.first.wpilibj.
Counter
Disable the up counting source to the counter.
clearValue()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
optional double value = 1;
clearVelocity()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double velocity = 2;
clearVx()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vx = 1;
clearVy()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vy = 2;
clearW()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double w = 1;
clearX()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double x = 1;
clearX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double x = 2;
clearX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double x = 1;
clearXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
clearXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
clearXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
clearXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
clearXSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double xSemiAxis = 2;
clearXWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double xWidth = 2;
clearY()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double y = 2;
clearY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double y = 3;
clearY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double y = 2;
clearYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
clearYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
clearYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
clearYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
clearYSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double ySemiAxis = 3;
clearYWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double yWidth = 3;
clearZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double z = 4;
clearZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double z = 3;
clone()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
clone()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
clone()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
clone()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
clone()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
clone()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
clone()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
clone()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
clone()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
clone()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
clone()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
clone()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
clone()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
clone()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
clone()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
clone(T)
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Creates a (deep) clone of the object.
clone(T)
- Method in interface edu.wpi.first.util.struct.
Struct
Creates a (deep) clone of the object.
close()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
close()
- Method in class edu.wpi.first.cscore.
CvSink
close()
- Method in class edu.wpi.first.cscore.
VideoListener
close()
- Method in class edu.wpi.first.cscore.
VideoSink
close()
- Method in class edu.wpi.first.cscore.
VideoSource
close()
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
close()
- Method in class edu.wpi.first.hal.
HAL.SimPeriodicAfterCallback
close()
- Method in class edu.wpi.first.hal.
HAL.SimPeriodicBeforeCallback
close()
- Method in class edu.wpi.first.hal.
SimDevice
close()
- Method in class edu.wpi.first.math.controller.
PIDController
close()
- Method in class edu.wpi.first.net.
MulticastServiceAnnouncer
close()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
close()
- Method in class edu.wpi.first.networktables.
EntryBase
close()
- Method in class edu.wpi.first.networktables.
MultiSubscriber
close()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
close()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Destroys the instance (if created by
NetworkTableInstance.create()
).
close()
- Method in class edu.wpi.first.networktables.
NetworkTableListener
close()
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
close()
- Method in interface edu.wpi.first.networktables.
PubSub
close()
- Method in class edu.wpi.first.util.cleanup.
CleanupPool
Closes all objects in the stack.
close()
- Method in class edu.wpi.first.util.concurrent.
Event
close()
- Method in class edu.wpi.first.util.concurrent.
Semaphore
close()
- Method in class edu.wpi.first.util.datalog.
DataLog
close()
- Method in class edu.wpi.first.util.
FileLogger
close()
- Method in class edu.wpi.first.util.
RawFrame
Close the RawFrame, releasing native resources.
close()
- Method in class edu.wpi.first.wpilibj.
AddressableLED
close()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Delete (free) the spi port used for the IMU.
close()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Delete (free) the spi port used for the IMU.
close()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
close()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
close()
- Method in class edu.wpi.first.wpilibj.
ADXL362
close()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Delete (free) the spi port used for the gyro and stop accumulating.
close()
- Method in class edu.wpi.first.wpilibj.
Alert
close()
- Method in class edu.wpi.first.wpilibj.
AnalogAccelerometer
Delete the analog components used for the accelerometer.
close()
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
close()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Delete (free) the accumulator and the analog components used for the gyro.
close()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
close()
- Method in class edu.wpi.first.wpilibj.
AnalogOutput
close()
- Method in class edu.wpi.first.wpilibj.
AnalogPotentiometer
close()
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
close()
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Closes the interrupt.
close()
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
close()
- Method in class edu.wpi.first.wpilibj.
CAN
Closes the CAN communication.
close()
- Method in class edu.wpi.first.wpilibj.
Compressor
close()
- Method in class edu.wpi.first.wpilibj.
Counter
close()
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
close()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
close()
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
close()
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
close()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
close()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
close()
- Method in class edu.wpi.first.wpilibj.
DigitalSource
close()
- Method in class edu.wpi.first.wpilibj.
DMA
close()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
close()
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
close()
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
close()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Close the DutyCycle and free all resources.
close()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
close()
- Method in class edu.wpi.first.wpilibj.
Encoder
close()
- Method in class edu.wpi.first.wpilibj.
I2C
close()
- Method in class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
close()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
close()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
close()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Free the resource associated with the PWM channel and set the value to 0.
close()
- Method in class edu.wpi.first.wpilibj.
Notifier
close()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
close()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
close()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
close()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
close()
- Method in class edu.wpi.first.wpilibj.
PWM
Free the resource associated with the PWM channel and set the value to 0.
close()
- Method in class edu.wpi.first.wpilibj.
Relay
close()
- Method in class edu.wpi.first.wpilibj.
RobotBase
close()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Close out the SimDevice.
close()
- Method in class edu.wpi.first.wpilibj.
SerialPort
close()
- Method in class edu.wpi.first.wpilibj.
SharpIR
close()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SendableCameraWrapper
close()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SimpleWidget
close()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SuppliedValueWidget
close()
- Method in class edu.wpi.first.wpilibj.simulation.
CallbackStore
Cancel the callback associated with this object.
close()
- Method in class edu.wpi.first.wpilibj.simulation.
SendableChooserSim
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismObject2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismRoot2d
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
close()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
close()
- Method in class edu.wpi.first.wpilibj.
Solenoid
close()
- Method in class edu.wpi.first.wpilibj.
SPI
close()
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Closes the interrupt.
close()
- Method in class edu.wpi.first.wpilibj.
TimedRobot
close()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Destructor for the ultrasonic sensor.
close()
- Method in class edu.wpi.first.wpilibj.
Watchdog
close()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Close out the SimDevice.
close()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
closeCANStreamSession(int)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Closes a CAN stream session.
Color
- Class in
edu.wpi.first.wpilibj.util
Represents colors.
Color()
- Constructor for class edu.wpi.first.wpilibj.util.
Color
Constructs a default color (black).
Color(double, double, double)
- Constructor for class edu.wpi.first.wpilibj.util.
Color
Constructs a Color from doubles.
Color(int, int, int)
- Constructor for class edu.wpi.first.wpilibj.util.
Color
Constructs a Color from ints.
Color(Color8Bit)
- Constructor for class edu.wpi.first.wpilibj.util.
Color
Constructs a Color from a Color8Bit.
Color(String)
- Constructor for class edu.wpi.first.wpilibj.util.
Color
Constructs a Color from a hex string.
COLOR_ORDER_BGR
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
COLOR_ORDER_BRG
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
COLOR_ORDER_GBR
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
COLOR_ORDER_GRB
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
COLOR_ORDER_RBG
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
COLOR_ORDER_RGB
- Static variable in class edu.wpi.first.hal.
AddressableLEDJNI
Color.RGBChannel
- Enum Class in
edu.wpi.first.wpilibj.util
Represents a color channel in an RGB color.
Color8Bit
- Class in
edu.wpi.first.wpilibj.util
Represents colors with 8 bits of precision.
Color8Bit()
- Constructor for class edu.wpi.first.wpilibj.util.
Color8Bit
Constructs a default color (black).
Color8Bit(int, int, int)
- Constructor for class edu.wpi.first.wpilibj.util.
Color8Bit
Constructs a Color8Bit.
Color8Bit(Color)
- Constructor for class edu.wpi.first.wpilibj.util.
Color8Bit
Constructs a Color8Bit from a Color.
Color8Bit(String)
- Constructor for class edu.wpi.first.wpilibj.util.
Color8Bit
Constructs a Color8Bit from a hex string.
CombinatoryUnitCache
<
A
extends
Unit
,
B
extends
Unit
,
Out
extends
Unit
> - Class in
edu.wpi.first.units
A helper class for creating and caching combined unit objects.
CombinatoryUnitCache(BiFunction<? super A, ? super B, ? extends Out>)
- Constructor for class edu.wpi.first.units.
CombinatoryUnitCache
Creates a new combinatory unit cache.
combine(A, B)
- Method in class edu.wpi.first.units.
CombinatoryUnitCache
Combines two units together and returns the result.
combine(A, B)
- Static method in class edu.wpi.first.units.
MultUnit
Creates a new MultUnit unit derived from two arbitrary units multiplied together.
combine(D, TimeUnit)
- Static method in class edu.wpi.first.units.
VelocityUnit
Combines a dimension unit and a unit of the period of change to create a unit of velocity.
combine(AngleUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
AngularVelocityUnit
Combines an angle unit and a period of time into a unit of angular velocity.
combine(AngularMomentumUnit, AngularVelocityUnit)
- Static method in class edu.wpi.first.units.
MomentOfInertiaUnit
Combines an angular momentum and angular velocity unit to form a moment of inertia unit.
combine(AngularVelocityUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
AngularAccelerationUnit
Combines an angular velocity and time period unit into an angular acceleration.
combine(AngularVelocityUnit, TorqueUnit)
- Static method in class edu.wpi.first.units.
PowerUnit
Combines angular velocity and torque into power.
combine(CurrentUnit, VoltageUnit)
- Static method in class edu.wpi.first.units.
PowerUnit
Combines voltage and current into power.
combine(DimensionlessUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
FrequencyUnit
Combines a dimensionless unit and a cycle period to create a frequency.
combine(DistanceUnit, ForceUnit)
- Static method in class edu.wpi.first.units.
TorqueUnit
Combines a unit of distance and force to create a unit of torque.
combine(DistanceUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
LinearVelocityUnit
Combines a distance and time unit for form a combined unit of velocity.
combine(EnergyUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
PowerUnit
Combines an energy and a time unit to form a unit of power.
combine(LinearMomentumUnit, DistanceUnit)
- Static method in class edu.wpi.first.units.
AngularMomentumUnit
Combines a linear momentum and distance to create a unit of angular momentum.
combine(LinearVelocityUnit, TimeUnit)
- Static method in class edu.wpi.first.units.
LinearAccelerationUnit
Combines a linear velocity and time unit to form a unit of linear acceleration.
combine(MassUnit, LinearAccelerationUnit)
- Static method in class edu.wpi.first.units.
ForceUnit
Combines a mass and (linear) acceleration to form a unit of force.
combine(MassUnit, LinearVelocityUnit)
- Static method in class edu.wpi.first.units.
LinearMomentumUnit
Combines a mass and linear velocity unit to form a combined linear momentum unit.
combine(TorqueUnit, AngularVelocityUnit)
- Static method in class edu.wpi.first.units.
PowerUnit
Combines angular velocity and torque into power.
combine(VelocityUnit<D>, TimeUnit)
- Static method in class edu.wpi.first.units.
AccelerationUnit
Combines a generic velocity and time period into a unit of acceleration.
combine(VoltageUnit, CurrentUnit)
- Static method in class edu.wpi.first.units.
PowerUnit
Combines voltage and current into power.
combine(VoltageUnit, CurrentUnit)
- Static method in class edu.wpi.first.units.
ResistanceUnit
Combines an voltage and a current unit to form a unit of resistance.
combine(N, D)
- Static method in class edu.wpi.first.units.
PerUnit
Creates a new PerUnit unit derived from an arbitrary numerator and time denominator units.
CombinedRuntimeLoader
- Class in
edu.wpi.first.util
Loads dynamic libraries for all platforms.
Command
- Class in
edu.wpi.first.wpilibj2.command
A state machine representing a complete action to be performed by the robot.
Command()
- Constructor for class edu.wpi.first.wpilibj2.command.
Command
Default constructor.
Command.InterruptionBehavior
- Enum Class in
edu.wpi.first.wpilibj2.command
An enum describing the command's behavior when another command with a shared requirement is
 scheduled.
CommandGenericHID
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
GenericHID
with
Trigger
factories for command-based.
CommandGenericHID(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Construct an instance of a device.
CommandJoystick
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
Joystick
with
Trigger
factories for command-based.
CommandJoystick(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Construct an instance of a controller.
CommandPS4Controller
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
PS4Controller
with
Trigger
factories for command-based.
CommandPS4Controller(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Construct an instance of a controller.
CommandPS5Controller
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
PS5Controller
with
Trigger
factories for command-based.
CommandPS5Controller(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Construct an instance of a controller.
Commands
- Class in
edu.wpi.first.wpilibj2.command
Namespace for command factory methods.
CommandScheduler
- Class in
edu.wpi.first.wpilibj2.command
The scheduler responsible for running
Command
s.
CommandStadiaController
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
StadiaController
with
Trigger
factories for command-based.
CommandStadiaController(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Construct an instance of a controller.
CommandXboxController
- Class in
edu.wpi.first.wpilibj2.command.button
A version of
XboxController
with
Trigger
factories for command-based.
CommandXboxController(int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Construct an instance of a controller.
compareTo(SwerveModulePosition)
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
Compares two swerve module positions.
compareTo(SwerveModuleState)
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
Compares two swerve module states.
compareTo(Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
compareTo(Watchdog)
- Method in class edu.wpi.first.wpilibj.
Watchdog
ComplexWidget
- Class in
edu.wpi.first.wpilibj.shuffleboard
A Shuffleboard widget that handles a
Sendable
object such as a motor controller or
 sensor.
Compressor
- Class in
edu.wpi.first.wpilibj
Class for operating a compressor connected to a pneumatics module.
Compressor(int, PneumaticsModuleType)
- Constructor for class edu.wpi.first.wpilibj.
Compressor
Constructs a compressor for a specified module and type.
Compressor(PneumaticsModuleType)
- Constructor for class edu.wpi.first.wpilibj.
Compressor
Constructs a compressor for a default module and specified type.
COMPRESSOR_CONFIG_TYPE_ANALOG
- Static variable in class edu.wpi.first.hal.
REVPHJNI
Analog.
COMPRESSOR_CONFIG_TYPE_DIGITAL
- Static variable in class edu.wpi.first.hal.
REVPHJNI
Digital.
COMPRESSOR_CONFIG_TYPE_DISABLED
- Static variable in class edu.wpi.first.hal.
REVPHJNI
Disabled.
COMPRESSOR_CONFIG_TYPE_HYBRID
- Static variable in class edu.wpi.first.hal.
REVPHJNI
Hybrid.
CompressorConfigType
- Enum Class in
edu.wpi.first.wpilibj
Compressor config type.
CompressorOpen
- Variable in class edu.wpi.first.hal.
REVPHFaults
The compressor output has an open circuit.
CompressorOpen
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The compressor output has an open circuit.
CompressorOverCurrent
- Variable in class edu.wpi.first.hal.
REVPHFaults
An overcurrent event occurred on the compressor output.
CompressorOverCurrent
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
An overcurrent event occurred on the compressor output.
ComputerVisionUtil
- Class in
edu.wpi.first.math
Computer vision utility functions.
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
computeSerializedSize()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
concatenate(Trajectory)
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Concatenates another trajectory to the current trajectory.
ConditionalCommand
- Class in
edu.wpi.first.wpilibj2.command
A command composition that runs one of two commands, depending on the value of the given
 condition when this command is initialized.
ConditionalCommand(Command, Command, BooleanSupplier)
- Constructor for class edu.wpi.first.wpilibj2.command.
ConditionalCommand
Creates a new ConditionalCommand.
Config()
- Constructor for class edu.wpi.first.apriltag.
AprilTagDetector.Config
Default constructor.
Config()
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
Create a default configuration for a SysId test routine with all default settings.
Config(double, double, double, double, double)
- Constructor for class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Creates a pose estimator configuration.
Config(Velocity<VoltageUnit>, Voltage, Time)
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
Create a new configuration for a SysId test routine.
Config(Velocity<VoltageUnit>, Voltage, Time, Consumer<SysIdRoutineLog.State>)
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
Create a new configuration for a SysId test routine.
configCalTime(ADIS16448_IMU.CalibrationTime)
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Configures calibration time.
configCalTime(ADIS16470_IMU.CalibrationTime)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Configures calibration time.
configDecRate(int)
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Configures the decimation rate of the IMU.
configDecRate(int)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Configures the decimation rate of the IMU.
configureAutoStall(int, int, int)
- Method in class edu.wpi.first.wpilibj.
SPI
Configure the Auto SPI Stall time between reads.
conjugate()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns the conjugate of the quaternion.
ConnectionInfo
- Class in
edu.wpi.first.networktables
NetworkTables Connection information.
ConnectionInfo(String, String, int, long, int)
- Constructor for class edu.wpi.first.networktables.
ConnectionInfo
Constructor.
connInfo
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Connection information (for connection events).
ConstantsJNI
- Class in
edu.wpi.first.hal
Constants HAL JNI functions.
ConstBufferCallback
- Interface in
edu.wpi.first.hal.simulation
Constraints(double, double)
- Constructor for class edu.wpi.first.math.trajectory.
TrapezoidProfile.Constraints
Constructs constraints for a TrapezoidProfile.
contains(long)
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Checks if the set contains a particular value.
contains(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Checks if a point is contained within this ellipse.
contains(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Checks if a point is contained within the rectangle.
contains(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Determines if an object is in the registry.
containsKey(long)
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Checks if a key is contained in the map.
containsKey(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Checks the table and tells if it contains the specified key.
containsKey(String)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns whether there is a key with the given name.
containsKey(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Checks the table and tells if it contains the specified key.
containsSubTable(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Checks the table and tells if it contains the specified sub table.
ControlAffinePlantInversionFeedforward
<
States
extends
Num
,
Inputs
extends
Num
> - Class in
edu.wpi.first.math.controller
Constructs a control-affine plant inversion model-based feedforward from given model dynamics.
ControlAffinePlantInversionFeedforward(Nat<States>, Nat<Inputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, double)
- Constructor for class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Constructs a feedforward with given model dynamics as a function of state and input.
ControlAffinePlantInversionFeedforward(Nat<States>, Nat<Inputs>, Function<Matrix<States, N1>, Matrix<States, N1>>, Matrix<States, Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Constructs a feedforward with given model dynamics as a function of state, and the plant's
 B(continuous input matrix) matrix.
Controller
- Class in
edu.wpi.first.math.proto
Controller()
- Constructor for class edu.wpi.first.math.proto.
Controller
Controller.ProtobufArmFeedforward
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufArmFeedforward
Controller.ProtobufDifferentialDriveFeedforward
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDifferentialDriveFeedforward
Controller.ProtobufDifferentialDriveWheelVoltages
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDifferentialDriveWheelVoltages
Controller.ProtobufElevatorFeedforward
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufElevatorFeedforward
Controller.ProtobufSimpleMotorFeedforward
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufSimpleMotorFeedforward
ControlVector(double[], double[])
- Constructor for class edu.wpi.first.math.spline.
Spline.ControlVector
Instantiates a control vector.
ControlVectorList()
- Constructor for class edu.wpi.first.math.trajectory.
TrajectoryGenerator.ControlVectorList
Default constructor.
ControlVectorList(int)
- Constructor for class edu.wpi.first.math.trajectory.
TrajectoryGenerator.ControlVectorList
Constructs a ControlVectorList.
ControlVectorList(Collection<? extends Spline.ControlVector>)
- Constructor for class edu.wpi.first.math.trajectory.
TrajectoryGenerator.ControlVectorList
Constructs a ControlVectorList.
ControlWord
- Class in
edu.wpi.first.hal
A wrapper for the HALControlWord bitfield.
ControlWord()
- Constructor for class edu.wpi.first.hal.
ControlWord
Default constructor.
convert(Pose3d, CoordinateSystem, CoordinateSystem)
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Converts the given pose from one coordinate system to another.
convert(Rotation3d, CoordinateSystem, CoordinateSystem)
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Converts the given rotation from one coordinate system to another.
convert(Transform3d, CoordinateSystem, CoordinateSystem)
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Converts the given transform from one coordinate system to another.
convert(Translation3d, CoordinateSystem, CoordinateSystem)
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Converts the given translation from one coordinate system to another.
convertFrom(double, AccelerationUnit<D>)
- Method in class edu.wpi.first.units.
AccelerationUnit
Converts a measurement value in terms of another time unit to this unit.
convertFrom(double, AngleUnit)
- Method in class edu.wpi.first.units.
AngleUnit
Converts a measurement value in terms of another angle unit to this unit.
convertFrom(double, AngularAccelerationUnit)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, AngularMomentumUnit)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, AngularVelocityUnit)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, CurrentUnit)
- Method in class edu.wpi.first.units.
CurrentUnit
Converts a measurement value in terms of another current unit to this unit.
convertFrom(double, DimensionlessUnit)
- Method in class edu.wpi.first.units.
DimensionlessUnit
Converts a measurement value in terms of another dimensionless unit to this unit.
convertFrom(double, DistanceUnit)
- Method in class edu.wpi.first.units.
DistanceUnit
Converts a measurement value in terms of another distance unit to this unit.
convertFrom(double, EnergyUnit)
- Method in class edu.wpi.first.units.
EnergyUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, ForceUnit)
- Method in class edu.wpi.first.units.
ForceUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, FrequencyUnit)
- Method in class edu.wpi.first.units.
FrequencyUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, LinearAccelerationUnit)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, LinearMomentumUnit)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, LinearVelocityUnit)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, MassUnit)
- Method in class edu.wpi.first.units.
MassUnit
Converts a measurement value in terms of another mass unit to this unit.
convertFrom(double, MomentOfInertiaUnit)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, MultUnit<A, B>)
- Method in class edu.wpi.first.units.
MultUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, PerUnit<? extends N, ? extends D>)
- Method in class edu.wpi.first.units.
PerUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, PowerUnit)
- Method in class edu.wpi.first.units.
PowerUnit
Converts a measurement value in terms of another power unit to this unit.
convertFrom(double, ResistanceUnit)
- Method in class edu.wpi.first.units.
ResistanceUnit
Converts a measurement value in terms of another power unit to this unit.
convertFrom(double, TemperatureUnit)
- Method in class edu.wpi.first.units.
TemperatureUnit
Converts a measurement value in terms of another temperature unit to this unit.
convertFrom(double, TimeUnit)
- Method in class edu.wpi.first.units.
TimeUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, TorqueUnit)
- Method in class edu.wpi.first.units.
TorqueUnit
Converts a measurement value in terms of another unit to this unit.
convertFrom(double, VelocityUnit<? extends D>)
- Method in class edu.wpi.first.units.
VelocityUnit
Converts a measurement value in terms of another velocity unit to this unit.
convertFrom(double, VoltageUnit)
- Method in class edu.wpi.first.units.
VoltageUnit
Converts a measurement value in terms of another voltage unit to this unit.
CoordinateAxis
- Class in
edu.wpi.first.math.geometry
A class representing a coordinate system axis within the NWU coordinate system.
CoordinateAxis(double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
CoordinateAxis
Constructs a coordinate system axis within the NWU coordinate system and normalizes it.
CoordinateSystem
- Class in
edu.wpi.first.math.geometry
A helper class that converts Pose3d objects between different standard coordinate frames.
CoordinateSystem(CoordinateAxis, CoordinateAxis, CoordinateAxis)
- Constructor for class edu.wpi.first.math.geometry.
CoordinateSystem
Constructs a coordinate system with the given cardinal directions for each axis.
copy()
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
Returns a copy of this swerve module position.
copy()
- Method in class edu.wpi.first.math.
Matrix
Returns a copy of this matrix.
copy()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
copy()
- Method in interface edu.wpi.first.units.measure.
Acceleration
copy()
- Method in interface edu.wpi.first.units.measure.
Angle
copy()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
copy()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
copy()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
copy()
- Method in interface edu.wpi.first.units.
Measure
Returns an immutable copy of this measure.
copy()
- Method in interface edu.wpi.first.units.measure.
Current
copy()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
copy()
- Method in interface edu.wpi.first.units.measure.
Distance
copy()
- Method in interface edu.wpi.first.units.measure.
Energy
copy()
- Method in interface edu.wpi.first.units.measure.
Force
copy()
- Method in interface edu.wpi.first.units.measure.
Frequency
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
copy()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
copy()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
copy()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
copy()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
copy()
- Method in interface edu.wpi.first.units.measure.
Mass
copy()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
copy()
- Method in interface edu.wpi.first.units.measure.
Mult
copy()
- Method in class edu.wpi.first.units.measure.
MutAcceleration
copy()
- Method in class edu.wpi.first.units.measure.
MutAngle
copy()
- Method in class edu.wpi.first.units.measure.
MutAngularAcceleration
copy()
- Method in class edu.wpi.first.units.measure.
MutAngularMomentum
copy()
- Method in class edu.wpi.first.units.measure.
MutAngularVelocity
copy()
- Method in class edu.wpi.first.units.measure.
MutCurrent
copy()
- Method in class edu.wpi.first.units.measure.
MutDimensionless
copy()
- Method in class edu.wpi.first.units.measure.
MutDistance
copy()
- Method in class edu.wpi.first.units.measure.
MutEnergy
copy()
- Method in class edu.wpi.first.units.measure.
MutForce
copy()
- Method in class edu.wpi.first.units.measure.
MutFrequency
copy()
- Method in class edu.wpi.first.units.measure.
MutLinearAcceleration
copy()
- Method in class edu.wpi.first.units.measure.
MutLinearMomentum
copy()
- Method in class edu.wpi.first.units.measure.
MutLinearVelocity
copy()
- Method in class edu.wpi.first.units.measure.
MutMass
copy()
- Method in class edu.wpi.first.units.measure.
MutMomentOfInertia
copy()
- Method in class edu.wpi.first.units.measure.
MutMult
copy()
- Method in class edu.wpi.first.units.measure.
MutPer
copy()
- Method in class edu.wpi.first.units.measure.
MutPower
copy()
- Method in class edu.wpi.first.units.measure.
MutResistance
copy()
- Method in class edu.wpi.first.units.measure.
MutTemperature
copy()
- Method in class edu.wpi.first.units.measure.
MutTime
copy()
- Method in class edu.wpi.first.units.measure.
MutTorque
copy()
- Method in class edu.wpi.first.units.measure.
MutVelocity
copy()
- Method in class edu.wpi.first.units.measure.
MutVoltage
copy()
- Method in interface edu.wpi.first.units.measure.
Per
copy()
- Method in interface edu.wpi.first.units.measure.
Power
copy()
- Method in interface edu.wpi.first.units.measure.
Resistance
copy()
- Method in interface edu.wpi.first.units.measure.
Temperature
copy()
- Method in interface edu.wpi.first.units.measure.
Time
copy()
- Method in interface edu.wpi.first.units.measure.
Torque
copy()
- Method in interface edu.wpi.first.units.measure.
Velocity
copy()
- Method in interface edu.wpi.first.units.measure.
Voltage
copy()
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
copy()
- Method in interface edu.wpi.first.units.
MutableMeasure
copy(DifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
copy(MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
copy(SwerveModulePosition[])
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
copy(P)
- Method in interface edu.wpi.first.math.kinematics.
Kinematics
Returns a copy of the wheel positions object.
copyFrom(Controller.ProtobufArmFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
copyFrom(Controller.ProtobufDifferentialDriveFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
copyFrom(Controller.ProtobufDifferentialDriveWheelVoltages)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
copyFrom(Controller.ProtobufElevatorFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
copyFrom(Controller.ProtobufSimpleMotorFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
copyFrom(Geometry2D.ProtobufEllipse2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
copyFrom(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
copyFrom(Geometry2D.ProtobufRectangle2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
copyFrom(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
copyFrom(Geometry2D.ProtobufTransform2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
copyFrom(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
copyFrom(Geometry2D.ProtobufTwist2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
copyFrom(Geometry3D.ProtobufPose3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
copyFrom(Geometry3D.ProtobufQuaternion)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
copyFrom(Geometry3D.ProtobufRotation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
copyFrom(Geometry3D.ProtobufTransform3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
copyFrom(Geometry3D.ProtobufTranslation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
copyFrom(Geometry3D.ProtobufTwist3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
copyFrom(Kinematics.ProtobufChassisSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
copyFrom(Kinematics.ProtobufDifferentialDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
copyFrom(Kinematics.ProtobufDifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
copyFrom(Kinematics.ProtobufDifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
copyFrom(Kinematics.ProtobufMecanumDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
copyFrom(Kinematics.ProtobufMecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
copyFrom(Kinematics.ProtobufMecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
copyFrom(Kinematics.ProtobufSwerveDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
copyFrom(Kinematics.ProtobufSwerveModulePosition)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
copyFrom(Kinematics.ProtobufSwerveModuleState)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
copyFrom(Plant.ProtobufDCMotor)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
copyFrom(Spline.ProtobufCubicHermiteSpline)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
copyFrom(Spline.ProtobufQuinticHermiteSpline)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
copyFrom(System.ProtobufLinearSystem)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
copyFrom(Trajectory.ProtobufTrajectory)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
copyFrom(Trajectory.ProtobufTrajectoryState)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
copyFrom(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
copyFrom(Wpimath.ProtobufVector)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
copyInto(DifferentialDriveWheelPositions, DifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
copyInto(MecanumDriveWheelPositions, MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
copyInto(SwerveModulePosition[], SwerveModulePosition[])
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
copyInto(P, P)
- Method in interface edu.wpi.first.math.kinematics.
Kinematics
Copies the value of the wheel positions object into the output.
copyPipelineOutputs(P)
- Method in interface edu.wpi.first.vision.
VisionRunner.Listener
Called when the pipeline has run.
copySign(Measure<U>, U)
- Method in interface edu.wpi.first.units.
Measure
Take the sign of another measure.
copySink(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Copies sink.
copySource(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Copies source.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>, Matrix<Outputs, Outputs>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>, Matrix<Outputs, Outputs>)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Inputs, N1>, Matrix<Outputs, N1>, Matrix<Outputs, Outputs>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Matrix<Outputs, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Correct the state estimate x-hat using the measurements in y.
correct(Nat<R>, Matrix<Inputs, N1>, Matrix<R, N1>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<R, N1>>, Matrix<R, R>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Nat<R>, Matrix<Inputs, N1>, Matrix<R, N1>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<R, N1>>, Matrix<R, R>, BiFunction<Matrix<R, ?>, Matrix<?, N1>, Matrix<R, N1>>, BiFunction<Matrix<R, N1>, Matrix<R, N1>, Matrix<R, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Nat<Rows>, Matrix<Inputs, N1>, Matrix<Rows, N1>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Rows, N1>>, Matrix<Rows, Rows>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
correct(Nat<Rows>, Matrix<Inputs, N1>, Matrix<Rows, N1>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Rows, N1>>, Matrix<Rows, Rows>, BiFunction<Matrix<Rows, N1>, Matrix<Rows, N1>, Matrix<Rows, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Correct the state estimate x-hat using the measurements in y.
cosineScale(Rotation2d)
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
Scales speed by cosine of angle error.
count
- Variable in class edu.wpi.first.hal.
AccumulatorResult
The number of sample value was accumulated over.
Counter
- Class in
edu.wpi.first.wpilibj
Class for counting the number of ticks on a digital input channel.
Counter()
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a counter where no sources are selected.
Counter(int)
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a Counter object.
Counter(AnalogTrigger)
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a Counter object.
Counter(Counter.Mode)
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a counter with the given mode.
Counter(CounterBase.EncodingType, DigitalSource, DigitalSource, boolean)
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a Counter object.
Counter(DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
Counter
Create an instance of a counter from a Digital Input.
Counter.Mode
- Enum Class in
edu.wpi.first.wpilibj
Mode determines how and what the counter counts.
CounterBase
- Interface in
edu.wpi.first.wpilibj
Interface for counting the number of ticks on a digital input channel.
CounterBase.EncodingType
- Enum Class in
edu.wpi.first.wpilibj
The number of edges for the CounterBase to increment or decrement on.
CounterJNI
- Class in
edu.wpi.first.hal
Counter HAL JNI functions.
crashOnError()
- Static method in interface edu.wpi.first.epilogue.logging.errors.
ErrorHandler
Creates an error handler that will immediately re-throw an exception and cause robot code to
 exit.
CrashOnError
- Class in
edu.wpi.first.epilogue.logging.errors
An error handler implementation that will throw an exception if logging raised an exception.
CrashOnError()
- Constructor for class edu.wpi.first.epilogue.logging.errors.
CrashOnError
Default constructor.
create()
- Static method in class edu.wpi.first.networktables.
NetworkTableInstance
Create an instance.
create()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the create button's digital signal.
create(DataLog, String, Protobuf<T, MessageType>)
- Static method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Creates a protobuf-encoded log entry.
create(DataLog, String, Protobuf<T, MessageType>, long)
- Static method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Creates a protobuf-encoded log entry.
create(DataLog, String, Protobuf<T, MessageType>, String)
- Static method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Creates a protobuf-encoded log entry.
create(DataLog, String, Protobuf<T, MessageType>, String, long)
- Static method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Creates a protobuf-encoded log entry.
create(DataLog, String, Struct<T>)
- Static method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Creates a struct-encoded array log entry.
create(DataLog, String, Struct<T>)
- Static method in class edu.wpi.first.util.datalog.
StructLogEntry
Creates a struct-encoded log entry.
create(DataLog, String, Struct<T>, long)
- Static method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Creates a struct-encoded array log entry.
create(DataLog, String, Struct<T>, long)
- Static method in class edu.wpi.first.util.datalog.
StructLogEntry
Creates a struct-encoded log entry.
create(DataLog, String, Struct<T>, String)
- Static method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Creates a struct-encoded array log entry.
create(DataLog, String, Struct<T>, String)
- Static method in class edu.wpi.first.util.datalog.
StructLogEntry
Creates a struct-encoded log entry.
create(DataLog, String, Struct<T>, String, long)
- Static method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Creates a struct-encoded array log entry.
create(DataLog, String, Struct<T>, String, long)
- Static method in class edu.wpi.first.util.datalog.
StructLogEntry
Creates a struct-encoded log entry.
create(Protobuf<T, MessageType>)
- Static method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Creates a ProtobufBuffer for the given Protobuf object.
create(Struct<T>)
- Static method in class edu.wpi.first.util.struct.
StructBuffer
Returns a StructBuffer for the given struct.
create(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the create button's digital signal.
create(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the create button's digital signal.
create(String)
- Static method in class edu.wpi.first.hal.
SimDevice
Creates a simulated device.
create(String, int)
- Static method in class edu.wpi.first.hal.
SimDevice
Creates a simulated device.
create(String, int, int)
- Static method in class edu.wpi.first.hal.
SimDevice
Creates a simulated device.
create(U, UnaryFunction, UnaryFunction, String, String)
- Method in interface edu.wpi.first.units.
UnitBuilder.UnitConstructorFunction
Creates a new unit instance based on its relation to the base unit of measure.
createBoolean(String, SimDevice.Direction, boolean)
- Method in class edu.wpi.first.hal.
SimDevice
Creates a boolean value on the simulated device.
createBooleanProperty(String, boolean, boolean)
- Method in class edu.wpi.first.cscore.
ImageSource
Create a boolean property.
createBuffer(double)
- Static method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Create a new TimeInterpolatableBuffer that stores a given subclass of
Interpolatable
.
createBuffer(Interpolator<T>, double)
- Static method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Create a new TimeInterpolatableBuffer.
createConnectionListener(NetworkTableInstance, boolean, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a connection listener.
createDCMotorSystem(double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of a DC motor system from its kV (volts/(unit/sec)) and kA
 (volts/(unit/sec²)).
createDCMotorSystem(DCMotor, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of a DC motor system.
createDetector()
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Constructs an AprilTag detector engine.
createDouble(String, SimDevice.Direction, double)
- Method in class edu.wpi.first.hal.
SimDevice
Creates a double value on the simulated device.
createDoubleBuffer(double)
- Static method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Create a new TimeInterpolatableBuffer to store Double values.
createDrivetrainVelocitySystem(DCMotor, double, double, double, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of a differential drive drivetrain.
createElevatorSystem(DCMotor, double, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of an elevator system.
createEnum(String, SimDevice.Direction, String[], int)
- Method in class edu.wpi.first.hal.
SimDevice
Creates an enumerated value on the simulated device.
createEnumDouble(String, SimDevice.Direction, String[], double[], int)
- Method in class edu.wpi.first.hal.
SimDevice
Creates an enumerated value on the simulated device with double values.
createEvent(boolean, boolean)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Creates an event.
createFileLogger(String, long, String)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Create a native FileLogger.
createFlywheelSystem(DCMotor, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of a flywheel system.
createForChannel(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Creates an AddressableLEDSim for a PWM channel.
createForChannel(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Creates an AnalogTriggerSim for an analog input channel.
createForChannel(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Creates an DigitalPWMSim for a digital I/O channel.
createForChannel(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Creates a DutyCycleSim for a digital input channel.
createForChannel(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Creates an EncoderSim for a digital input channel.
createForIndex(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Creates an AddressableLEDSim for a simulated index.
createForIndex(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Creates an AnalogTriggerSim for a simulated index.
createForIndex(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Creates an DigitalPWMSim for a simulated index.
createForIndex(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Creates a DutyCycleSim for a simulated index.
createForIndex(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Creates an EncoderSim for a simulated index.
createHttpCamera(String, String, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates an HTTP camera.
createHttpCameraMulti(String, String[], int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates an HTTP camera from multiple URLs.
createInstance()
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Creates an NT instance.
createInt(String, SimDevice.Direction, int)
- Method in class edu.wpi.first.hal.
SimDevice
Creates an int value on the simulated device.
createIntegerProperty(String, int, int, int, int, int)
- Method in class edu.wpi.first.cscore.
ImageSource
Create an integer property.
createKitbotSim(DifferentialDrivetrainSim.KitbotMotor, DifferentialDrivetrainSim.KitbotGearing, DifferentialDrivetrainSim.KitbotWheelSize, double, Matrix<N7, N1>)
- Static method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Create a sim for the standard FRC kitbot.
createKitbotSim(DifferentialDrivetrainSim.KitbotMotor, DifferentialDrivetrainSim.KitbotGearing, DifferentialDrivetrainSim.KitbotWheelSize, Matrix<N7, N1>)
- Static method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Create a sim for the standard FRC kitbot.
createListener(MultiSubscriber, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for topic changes on a subscriber.
createListener(NetworkTableEntry, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for topic changes on an entry.
createListener(NetworkTableInstance, String[], EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for changes to topics with names that start with any of the given prefixes.
createListener(Subscriber, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for topic changes on a subscriber.
createListener(Topic, EnumSet<NetworkTableEvent.Kind>, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for changes on a particular topic.
createListenerPoller()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates listener poller.
createListenerPoller(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Creates a listener poller.
createLogger(NetworkTableInstance, int, int, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a listener for log messages.
createLong(String, SimDevice.Direction, long)
- Method in class edu.wpi.first.hal.
SimDevice
Creates a long value on the simulated device.
createMessage()
- Method in class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
createMessage()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
createMessage()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
createMessage()
- Method in class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
createMessage()
- Method in class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Twist2dProto
createMessage()
- Method in class edu.wpi.first.math.geometry.proto.
Twist3dProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
createMessage()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
createMessage()
- Method in class edu.wpi.first.math.proto.
MatrixProto
createMessage()
- Method in class edu.wpi.first.math.proto.
VectorProto
createMessage()
- Method in class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
createMessage()
- Method in class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
createMessage()
- Method in class edu.wpi.first.math.system.plant.proto.
DCMotorProto
createMessage()
- Method in class edu.wpi.first.math.system.proto.
LinearSystemProto
createMessage()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
createMessage()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
createMessage()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Creates protobuf message.
createMjpegServer(String, String, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates an MJPEG server.
createMulticastServiceAnnouncer(String, String, int, String[], String[])
- Static method in class edu.wpi.first.net.
WPINetJNI
Creates a MulticastServiceAnnouncer.
createMulticastServiceResolver(String)
- Static method in class edu.wpi.first.net.
WPINetJNI
Creates a MulticastServiceResolver.
createOutput(AnalogTriggerOutput.AnalogTriggerType)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Creates an AnalogTriggerOutput object.
createProperty(String, VideoProperty.Kind, int, int, int, int, int)
- Method in class edu.wpi.first.cscore.
ImageSource
Create a property.
createRawSink(String, boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates a raw sink.
createRawSource(String, boolean, int, int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates a raw source.
createSemaphore(int, int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Creates a semaphore.
createSimDevice(String)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates a simulated device.
createSimValue(int, String, int, HALValue)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates a value on a simulated device.
createSimValueBoolean(int, String, int, boolean)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates a boolean value on a simulated device.
createSimValueDouble(int, String, int, double)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates a double value on a simulated device.
createSimValueEnum(int, String, int, String[], int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates an enumerated value on a simulated device.
createSimValueEnumDouble(int, String, int, String[], double[], int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates an enumerated value on a simulated device with double values.
createSimValueInt(int, String, int, int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates an int value on a simulated device.
createSimValueLong(int, String, int, long)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Creates a long value on a simulated device.
createSingleJointedArmSystem(DCMotor, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model of a single jointed arm system.
createSourceProperty(int, String, int, int, int, int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates a source property.
createStringProperty(String, String)
- Method in class edu.wpi.first.cscore.
ImageSource
Create a string property.
createTimeSyncListener(NetworkTableInstance, boolean, Consumer<NetworkTableEvent>)
- Static method in class edu.wpi.first.networktables.
NetworkTableListener
Create a time synchronization listener.
createUsbCameraDev(String, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates a new USB camera by device.
createUsbCameraPath(String, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Creates a new USB camera by path.
createValue(String, SimDevice.Direction, HALValue)
- Method in class edu.wpi.first.hal.
SimDevice
Creates a value on the simulated device.
createView(int, int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Creates a view of a subsection of this data buffer, starting from (and including)
startingIndex
and ending on (and including)
endingIndex
.
CRITICAL
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Importance
Critical data that should always be present in logs.
criticalAngle
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
Critical angle, in radians.
cross()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the cross button's digital signal.
cross()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the cross button's digital signal.
cross(Vector<N3>, Vector<N3>)
- Static method in class edu.wpi.first.math.
Vector
Returns the cross product of 3 dimensional vectors a and b.
cross(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the cross button's digital signal.
cross(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the cross button's digital signal.
cross(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the cross button's digital signal.
cross(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the cross button's digital signal.
CTRE_TYPE
- Static variable in class edu.wpi.first.hal.
PowerDistributionJNI
CTRE (Cross The Road Electronics) Power Distribution Panel (PDP).
CTREPCM
- Enum constant in enum class edu.wpi.first.wpilibj.
PneumaticsModuleType
CTRE PCM.
CTREPCMDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for CTRE PCM data.
CTREPCMJNI
- Class in
edu.wpi.first.hal
CTRE Pneumatic Control Module (PCM) Functions.
CTREPCMSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated Pneumatic Control Module (PCM).
CTREPCMSim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Constructs for the default PCM.
CTREPCMSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Constructs from a PCM module number (CAN ID).
CTREPCMSim(PneumaticsControlModule)
- Constructor for class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Constructs from a PneumaticsControlModule object.
CubicHermiteSpline
- Class in
edu.wpi.first.math.spline
Represents a hermite spline of degree 3.
CubicHermiteSpline(double[], double[], double[], double[])
- Constructor for class edu.wpi.first.math.spline.
CubicHermiteSpline
Constructs a cubic hermite spline with the specified control vectors.
CubicHermiteSplineProto
- Class in
edu.wpi.first.math.spline.proto
CubicHermiteSplineProto()
- Constructor for class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
CubicHermiteSplineStruct
- Class in
edu.wpi.first.math.spline.struct
CubicHermiteSplineStruct()
- Constructor for class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
current(Current)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the current applied to the motor.
Current
- Interface in
edu.wpi.first.units.measure
CurrentUnit
- Class in
edu.wpi.first.units
Unit of electric current dimension.
CurrentUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of electric current, amperes.
curvatureDrive(double, double, boolean)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Curvature drive method for differential drive platform.
curvatureDriveIK(double, double, boolean)
- Static method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Curvature drive inverse kinematics for differential drive platform.
curvatureRadPerMeter
- Variable in class edu.wpi.first.math.spline.
PoseWithCurvature
Represents the curvature.
curvatureRadPerMeter
- Variable in class edu.wpi.first.math.trajectory.
Trajectory.State
The curvature at that point of the trajectory.
CustomLoggerFor
- Annotation Interface in
edu.wpi.first.epilogue
Placed on a subclass of
ClassSpecificLogger
.
CvSink
- Class in
edu.wpi.first.cscore
A sink for user code to accept video frames as OpenCV images.
CvSink(String)
- Constructor for class edu.wpi.first.cscore.
CvSink
Create a sink for accepting OpenCV images.
CvSink(String, PixelFormat)
- Constructor for class edu.wpi.first.cscore.
CvSink
Create a sink for accepting OpenCV images.
CvSource
- Class in
edu.wpi.first.cscore
A source that represents a video camera.
CvSource(String, VideoMode)
- Constructor for class edu.wpi.first.cscore.
CvSource
Create an OpenCV source.
CvSource(String, PixelFormat, int, int, int)
- Constructor for class edu.wpi.first.cscore.
CvSource
Create an OpenCV source.
cx
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Camera horizontal focal center, in pixels.
cy
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Camera vertical focal center, in pixels.
D
D()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to -Z in the NWU coordinate system.
dare(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>)
- Static method in class edu.wpi.first.math.
DARE
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
dare(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>, Matrix<States, Inputs>)
- Static method in class edu.wpi.first.math.
DARE
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
DARE
- Class in
edu.wpi.first.math
DARE solver utility functions.
dareABQR(double[], double[], double[], double[], int, int, double[])
- Static method in class edu.wpi.first.math.jni.
DAREJNI
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
dareABQRN(double[], double[], double[], double[], double[], int, int, double[])
- Static method in class edu.wpi.first.math.jni.
DAREJNI
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
DAREJNI
- Class in
edu.wpi.first.math.jni
DARE JNI.
dareNoPrecond(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>)
- Static method in class edu.wpi.first.math.
DARE
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
dareNoPrecond(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>, Matrix<States, Inputs>)
- Static method in class edu.wpi.first.math.
DARE
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
dareNoPrecondABQR(double[], double[], double[], double[], int, int, double[])
- Static method in class edu.wpi.first.math.jni.
DAREJNI
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
dareNoPrecondABQRN(double[], double[], double[], double[], double[], int, int, double[])
- Static method in class edu.wpi.first.math.jni.
DAREJNI
Computes the unique stabilizing solution X to the discrete-time algebraic Riccati equation.
data
- Variable in class edu.wpi.first.hal.
CANData
Contents of the CAN frame.
data
- Variable in class edu.wpi.first.hal.
CANStreamMessage
The message data.
data
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Data stored in object with setData().
DataLog
- Class in
edu.wpi.first.util.datalog
A data log for high-speed writing of data values.
DataLog(long)
- Constructor for class edu.wpi.first.util.datalog.
DataLog
Constructs.
DataLogBackgroundWriter
- Class in
edu.wpi.first.util.datalog
A data log background writer that periodically flushes the data log on a background thread.
DataLogBackgroundWriter()
- Constructor for class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Construct a new Data Log.
DataLogBackgroundWriter(String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Construct a new Data Log.
DataLogBackgroundWriter(String, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Construct a new Data Log.
DataLogBackgroundWriter(String, String, double)
- Constructor for class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Construct a new Data Log.
DataLogBackgroundWriter(String, String, double, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Construct a new Data Log.
DataLogEntry
- Class in
edu.wpi.first.util.datalog
Log entry base class.
DataLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogEntry
Constructs a data log entry.
DataLogEntry(DataLog, String, String, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogEntry
Constructs a data log entry.
DataLogEntry(DataLog, String, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
DataLogEntry
Constructs a data log entry.
DataLogIterator
- Class in
edu.wpi.first.util.datalog
DataLogReader iterator.
DataLogJNI
- Class in
edu.wpi.first.util.datalog
DataLog wpiutil JNI Functions.
DataLogManager
- Class in
edu.wpi.first.wpilibj
Centralized data log that provides automatic data log file management.
DataLogReader
- Class in
edu.wpi.first.util.datalog
Data log reader (reads logs written by the DataLog class).
DataLogReader(String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogReader
Constructs from a file.
DataLogReader(ByteBuffer)
- Constructor for class edu.wpi.first.util.datalog.
DataLogReader
Constructs from a byte buffer.
DataLogRecord
- Class in
edu.wpi.first.util.datalog
A record in the data log.
DataLogRecord.MetadataRecordData
- Class in
edu.wpi.first.util.datalog
Data contained in a set metadata control record as created by DataLog.setMetadata().
DataLogRecord.StartRecordData
- Class in
edu.wpi.first.util.datalog
Data contained in a start control record as created by DataLog.start() when writing the log.
DataLogWriter
- Class in
edu.wpi.first.util.datalog
A data log writer that flushes the data log to a file when flush() is called.
DataLogWriter(OutputStream)
- Constructor for class edu.wpi.first.util.datalog.
DataLogWriter
Construct a new Data Log with an output stream.
DataLogWriter(OutputStream, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogWriter
Construct a new Data Log with an output stream.
DataLogWriter(String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogWriter
Construct a new Data Log.
DataLogWriter(String, String)
- Constructor for class edu.wpi.first.util.datalog.
DataLogWriter
Construct a new Data Log.
DCMotor
- Class in
edu.wpi.first.math.system.plant
Holds the constants for a DC motor.
DCMotor(double, double, double, double, double, int)
- Constructor for class edu.wpi.first.math.system.plant.
DCMotor
Constructs a DC motor.
DCMotorProto
- Class in
edu.wpi.first.math.system.plant.proto
DCMotorProto()
- Constructor for class edu.wpi.first.math.system.plant.proto.
DCMotorProto
DCMotorSim
- Class in
edu.wpi.first.wpilibj.simulation
Represents a simulated DC motor mechanism.
DCMotorSim(LinearSystem<N2, N1, N2>, DCMotor, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Creates a simulated DC motor mechanism.
DCMotorStruct
- Class in
edu.wpi.first.math.system.plant.struct
DCMotorStruct()
- Constructor for class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
deadbandMax
- Variable in class edu.wpi.first.hal.
PWMConfigDataResult
The deadband maximum PWM value in microseconds.
deadbandMin
- Variable in class edu.wpi.first.hal.
PWMConfigDataResult
The deadband minimum PWM value in microseconds.
deadline(Command, Command...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs a group of commands at the same time.
deadlineFor(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a set of commands to run parallel to it, ending when the calling
 command ends and interrupting all the others.
deadlineWith(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Deprecated, for removal: This API element is subject to removal in a future version.
Use
Command.deadlineFor(edu.wpi.first.wpilibj2.command.Command...)
instead.
debounce(double)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
debounce(double)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Creates a new debounced trigger from this trigger - it will become active when this trigger has
 been active for longer than the specified period.
debounce(double, Debouncer.DebounceType)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
debounce(double, Debouncer.DebounceType)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Creates a new debounced trigger from this trigger - it will become active when this trigger has
 been active for longer than the specified period.
Debouncer
- Class in
edu.wpi.first.math.filter
A simple debounce filter for boolean streams.
Debouncer(double)
- Constructor for class edu.wpi.first.math.filter.
Debouncer
Creates a new Debouncer.
Debouncer(double, Debouncer.DebounceType)
- Constructor for class edu.wpi.first.math.filter.
Debouncer
Creates a new Debouncer.
Debouncer.DebounceType
- Enum Class in
edu.wpi.first.math.filter
Type of debouncing to perform.
debug
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
Debug mode.
DEBUG
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Importance
Debug information.
declarations
- Variable in class edu.wpi.first.util.struct.parser.
ParsedSchema
Declarations.
decodeSharpening
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
How much sharpening should be done to decoded images.
DEFAULT_MODULE
- Static variable in class edu.wpi.first.hal.
PowerDistributionJNI
Use the default module number for the selected module type.
defaultNaming()
- Element in annotation interface edu.wpi.first.epilogue.
Logged
The default naming behavior to use.
defer(Supplier<Command>)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a
DeferredCommand
with the provided supplier.
defer(Supplier<Command>, Set<Subsystem>)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs the command supplied by the supplier.
DeferredCommand
- Class in
edu.wpi.first.wpilibj2.command
Defers Command construction to runtime.
DeferredCommand(Supplier<Command>, Set<Subsystem>)
- Constructor for class edu.wpi.first.wpilibj2.command.
DeferredCommand
Creates a new DeferredCommand that directly runs the supplied command when initialized, and
 ends when it ends.
deferredProxy(Supplier<Command>)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that schedules the command returned from the supplier when initialized,
 and ends when it is no longer scheduled.
deglitch
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
Whether the thresholded image be should be deglitched.
Degree
- Static variable in class edu.wpi.first.units.
Units
1/360 of a turn around a circle, or 1/57.3
Units.Radians
.
Degrees
- Static variable in class edu.wpi.first.units.
Units
1/360 of a turn around a circle, or 1/57.3
Units.Radians
.
DegreesPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of angular velocity equivalent to spinning at a rate of one
Degree
per
Units.Second
.
DegreesPerSecondPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of angular acceleration equivalent to accelerating at a rate of one
Degree
per
Units.Second
every second.
degreesToRadians(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given degrees to radians.
degreesToRotations(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given degrees to rotations.
delay(double)
- Static method in class edu.wpi.first.wpilibj.
Timer
Pause the thread for a specified time.
deleteProperty(String)
- Method in class edu.wpi.first.networktables.
Topic
Deletes a property.
deleteTopicProperty(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Deletes topic property.
denominator()
- Method in class edu.wpi.first.units.
PerUnit
Gets the denominator unit.
derive(U)
- Static method in class edu.wpi.first.units.
Units
Creates a new unit builder object based on a given input unit.
desaturate(double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Renormalizes the wheel speeds if any either side is above the specified maximum.
desaturate(double)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Renormalizes the wheel speeds if any individual speed is above the specified maximum.
desaturate(LinearVelocity)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Renormalizes the wheel speeds if any either side is above the specified maximum.
desaturate(LinearVelocity)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Renormalizes the wheel speeds if any individual speed is above the specified maximum.
desaturateInputVector(Matrix<I, N1>, double)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Renormalize all inputs if any exceeds the maximum magnitude.
desaturateWheelSpeeds(SwerveModuleState[], double)
- Static method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Renormalizes the wheel speeds if any individual speed is above the specified maximum.
desaturateWheelSpeeds(SwerveModuleState[], ChassisSpeeds, double, double, double)
- Static method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Renormalizes the wheel speeds if any individual speed is above the specified maximum, as well
 as getting rid of joystick saturation at edges of joystick.
desaturateWheelSpeeds(SwerveModuleState[], ChassisSpeeds, LinearVelocity, LinearVelocity, AngularVelocity)
- Static method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Renormalizes the wheel speeds if any individual speed is above the specified maximum, as well
 as getting rid of joystick saturation at edges of joystick.
desaturateWheelSpeeds(SwerveModuleState[], LinearVelocity)
- Static method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Renormalizes the wheel speeds if any individual speed is above the specified maximum.
deserializeTrajectory(String)
- Static method in class edu.wpi.first.math.jni.
TrajectoryUtilJNI
Deserializes a trajectory JSON into a double[] of trajectory elements.
deserializeTrajectory(String)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryUtil
Deserializes a Trajectory from JSON exported from PathWeaver.
destroyDetector(long)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Destroys an AprilTag detector engine.
destroyEvent(int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Destroys an event.
destroyInstance(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Destroys an NT instance.
destroyListenerPoller(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Destroys listener poller.
destroyListenerPoller(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Destroys listener poller.
destroySemaphore(int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Destroys a semaphore.
det()
- Method in class edu.wpi.first.math.
Matrix
Returns the determinant of this matrix.
detect(long, int, int, int, long)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Detect tags from an 8-bit image.
detect(Mat)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Detect tags from an 8-bit image.
dev
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
Device number (e.g.
diag()
- Method in class edu.wpi.first.math.
Matrix
Returns the diagonal elements inside a vector or square matrix.
DifferentialDrive
- Class in
edu.wpi.first.wpilibj.drive
A class for driving differential drive/skid-steer drive platforms such as the Kit of Parts drive
 base, "tank drive", or West Coast Drive.
DifferentialDrive(MotorController, MotorController)
- Constructor for class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Construct a DifferentialDrive.
DifferentialDrive(DoubleConsumer, DoubleConsumer)
- Constructor for class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Construct a DifferentialDrive.
DifferentialDrive.WheelSpeeds
- Class in
edu.wpi.first.wpilibj.drive
Wheel speeds for a differential drive.
DifferentialDriveAccelerationLimiter
- Class in
edu.wpi.first.math.controller
Filters the provided voltages to limit a differential drive's linear and angular acceleration.
DifferentialDriveAccelerationLimiter(LinearSystem<N2, N2, N2>, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveAccelerationLimiter
Constructs a DifferentialDriveAccelerationLimiter.
DifferentialDriveAccelerationLimiter(LinearSystem<N2, N2, N2>, double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveAccelerationLimiter
Constructs a DifferentialDriveAccelerationLimiter.
DifferentialDriveFeedforward
- Class in
edu.wpi.first.math.controller
A helper class which computes the feedforward outputs for a differential drive drivetrain.
DifferentialDriveFeedforward(double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
Creates a new DifferentialDriveFeedforward with the specified parameters.
DifferentialDriveFeedforward(double, double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
Creates a new DifferentialDriveFeedforward with the specified parameters.
DifferentialDriveFeedforwardProto
- Class in
edu.wpi.first.math.controller.proto
DifferentialDriveFeedforwardProto()
- Constructor for class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
DifferentialDriveFeedforwardStruct
- Class in
edu.wpi.first.math.controller.struct
DifferentialDriveFeedforwardStruct()
- Constructor for class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
DifferentialDriveKinematics
- Class in
edu.wpi.first.math.kinematics
Helper class that converts a chassis velocity (dx and dtheta components) to left and right wheel
 velocities for a differential drive.
DifferentialDriveKinematics(double)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Constructs a differential drive kinematics object.
DifferentialDriveKinematics(Distance)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Constructs a differential drive kinematics object.
DifferentialDriveKinematicsConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
A class that enforces constraints on the differential drive kinematics.
DifferentialDriveKinematicsConstraint(DifferentialDriveKinematics, double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveKinematicsConstraint
Constructs a differential drive dynamics constraint.
DifferentialDriveKinematicsProto
- Class in
edu.wpi.first.math.kinematics.proto
DifferentialDriveKinematicsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
DifferentialDriveKinematicsStruct
- Class in
edu.wpi.first.math.kinematics.struct
DifferentialDriveKinematicsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
DifferentialDriveOdometry
- Class in
edu.wpi.first.math.kinematics
Class for differential drive odometry.
DifferentialDriveOdometry(Rotation2d, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Constructs a DifferentialDriveOdometry object.
DifferentialDriveOdometry(Rotation2d, double, double, Pose2d)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Constructs a DifferentialDriveOdometry object.
DifferentialDriveOdometry(Rotation2d, Distance, Distance)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Constructs a DifferentialDriveOdometry object.
DifferentialDriveOdometry(Rotation2d, Distance, Distance, Pose2d)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Constructs a DifferentialDriveOdometry object.
DifferentialDriveOdometry3d
- Class in
edu.wpi.first.math.kinematics
Class for differential drive odometry.
DifferentialDriveOdometry3d(Rotation3d, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Constructs a DifferentialDriveOdometry3d object.
DifferentialDriveOdometry3d(Rotation3d, double, double, Pose3d)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Constructs a DifferentialDriveOdometry3d object.
DifferentialDriveOdometry3d(Rotation3d, Distance, Distance)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Constructs a DifferentialDriveOdometry3d object.
DifferentialDriveOdometry3d(Rotation3d, Distance, Distance, Pose3d)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Constructs a DifferentialDriveOdometry3d object.
DifferentialDrivePoseEstimator
- Class in
edu.wpi.first.math.estimator
This class wraps
Differential Drive Odometry
to fuse
 latency-compensated vision measurements with differential drive encoder measurements.
DifferentialDrivePoseEstimator(DifferentialDriveKinematics, Rotation2d, double, double, Pose2d)
- Constructor for class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator
Constructs a DifferentialDrivePoseEstimator with default standard deviations for the model and
 vision measurements.
DifferentialDrivePoseEstimator(DifferentialDriveKinematics, Rotation2d, double, double, Pose2d, Matrix<N3, N1>, Matrix<N3, N1>)
- Constructor for class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator
Constructs a DifferentialDrivePoseEstimator.
DifferentialDrivePoseEstimator3d
- Class in
edu.wpi.first.math.estimator
This class wraps
Differential Drive Odometry
to fuse
 latency-compensated vision measurements with differential drive encoder measurements.
DifferentialDrivePoseEstimator3d(DifferentialDriveKinematics, Rotation3d, double, double, Pose3d)
- Constructor for class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator3d
Constructs a DifferentialDrivePoseEstimator3d with default standard deviations for the model
 and vision measurements.
DifferentialDrivePoseEstimator3d(DifferentialDriveKinematics, Rotation3d, double, double, Pose3d, Matrix<N4, N1>, Matrix<N4, N1>)
- Constructor for class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator3d
Constructs a DifferentialDrivePoseEstimator3d.
DifferentialDrivetrainSim
- Class in
edu.wpi.first.wpilibj.simulation
This class simulates the state of the drivetrain.
DifferentialDrivetrainSim(LinearSystem<N2, N2, N2>, DCMotor, double, double, double, Matrix<N7, N1>)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Creates a simulated differential drivetrain.
DifferentialDrivetrainSim(DCMotor, double, double, double, double, double, Matrix<N7, N1>)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Creates a simulated differential drivetrain.
DifferentialDrivetrainSim.KitbotGearing
- Enum Class in
edu.wpi.first.wpilibj.simulation
Represents a gearing option of the Toughbox mini.
DifferentialDrivetrainSim.KitbotMotor
- Enum Class in
edu.wpi.first.wpilibj.simulation
Represents common motor layouts of the kit drivetrain.
DifferentialDrivetrainSim.KitbotWheelSize
- Enum Class in
edu.wpi.first.wpilibj.simulation
Represents common wheel sizes of the kit drivetrain.
DifferentialDriveVoltageConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
A class that enforces constraints on differential drive voltage expenditure based on the motor
 dynamics and the drive kinematics.
DifferentialDriveVoltageConstraint(SimpleMotorFeedforward, DifferentialDriveKinematics, double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveVoltageConstraint
Creates a new DifferentialDriveVoltageConstraint.
DifferentialDriveWheelPositions
- Class in
edu.wpi.first.math.kinematics
Represents the wheel positions for a differential drive drivetrain.
DifferentialDriveWheelPositions(double, double)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
Constructs a DifferentialDriveWheelPositions.
DifferentialDriveWheelPositions(Distance, Distance)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
Constructs a DifferentialDriveWheelPositions.
DifferentialDriveWheelPositionsProto
- Class in
edu.wpi.first.math.kinematics.proto
DifferentialDriveWheelPositionsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
DifferentialDriveWheelPositionsStruct
- Class in
edu.wpi.first.math.kinematics.struct
DifferentialDriveWheelPositionsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
DifferentialDriveWheelSpeeds
- Class in
edu.wpi.first.math.kinematics
Represents the wheel speeds for a differential drive drivetrain.
DifferentialDriveWheelSpeeds()
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Constructs a DifferentialDriveWheelSpeeds with zeros for left and right speeds.
DifferentialDriveWheelSpeeds(double, double)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Constructs a DifferentialDriveWheelSpeeds.
DifferentialDriveWheelSpeeds(LinearVelocity, LinearVelocity)
- Constructor for class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Constructs a DifferentialDriveWheelSpeeds.
DifferentialDriveWheelSpeedsProto
- Class in
edu.wpi.first.math.kinematics.proto
DifferentialDriveWheelSpeedsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
DifferentialDriveWheelSpeedsStruct
- Class in
edu.wpi.first.math.kinematics.struct
DifferentialDriveWheelSpeedsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
DifferentialDriveWheelVoltages
- Class in
edu.wpi.first.math.controller
Motor voltages for a differential drive.
DifferentialDriveWheelVoltages()
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
Default constructor.
DifferentialDriveWheelVoltages(double, double)
- Constructor for class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
Constructs a DifferentialDriveWheelVoltages.
DifferentialDriveWheelVoltagesProto
- Class in
edu.wpi.first.math.controller.proto
DifferentialDriveWheelVoltagesProto()
- Constructor for class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
DifferentialDriveWheelVoltagesStruct
- Class in
edu.wpi.first.math.controller.struct
DifferentialDriveWheelVoltagesStruct()
- Constructor for class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
Digital
- Enum constant in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Digital.
DigitalGlitchFilter
- Class in
edu.wpi.first.wpilibj
Class to enable glitch filtering on a set of digital inputs.
DigitalGlitchFilter()
- Constructor for class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Configures the Digital Glitch Filter to its default settings.
DigitalGlitchFilterJNI
- Class in
edu.wpi.first.hal
Digital Glitch Filter JNI functions.
DigitalInput
- Class in
edu.wpi.first.wpilibj
Class to read a digital input.
DigitalInput(int)
- Constructor for class edu.wpi.first.wpilibj.
DigitalInput
Create an instance of a Digital Input class.
DigitalOutput
- Class in
edu.wpi.first.wpilibj
Class to write digital outputs.
DigitalOutput(int)
- Constructor for class edu.wpi.first.wpilibj.
DigitalOutput
Create an instance of a digital output.
DigitalPWMDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for digital PWM data.
DigitalPWMSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated digital PWM output.
DigitalPWMSim(DigitalOutput)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Constructs from a DigitalOutput object.
DigitalSource
- Class in
edu.wpi.first.wpilibj
DigitalSource Interface.
DigitalSource()
- Constructor for class edu.wpi.first.wpilibj.
DigitalSource
Default constructor.
Dimensionless
- Interface in
edu.wpi.first.units.measure
DimensionlessUnit
- Class in
edu.wpi.first.units
A type of unit that corresponds to raw values and not any physical dimension, such as percentage.
DIODataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for DIO data.
DIOJNI
- Class in
edu.wpi.first.hal
Digital Input/Output (IO) JNI Functions.
DIOSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated digital input or output.
DIOSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DIOSim
Constructs from a digital I/O channel number.
DIOSim(DigitalInput)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DIOSim
Constructs from a DigitalInput object.
DIOSim(DigitalOutput)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DIOSim
Constructs from a DigitalOutput object.
direction
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimValueInfo
disable()
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Disables this logger.
disable()
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Disables interrupt callbacks.
disable()
- Method in class edu.wpi.first.wpilibj.
Compressor
Disable the compressor.
disable()
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Disable the motor controller.
disable()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
disable()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Disable the motor.
disable()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
disable()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Disables the watchdog timer.
disable()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
disable()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Disables the command scheduler.
disable()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Disables the PID control.
disable()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Disables the PID control.
disable()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Disable the TrapezoidProfileSubsystem's output.
disableActuatorWidgets()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Disables user control of widgets containing actuators.
disableAllTelemetry()
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Disable ALL telemetry.
disableCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Disables the compressor.
disableCompressor()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Disables the compressor.
disableCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Disables the compressor.
disableContinuousInput()
- Method in class edu.wpi.first.math.controller.
PIDController
Disables continuous input.
disableContinuousInput()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Disables continuous input.
disabled()
- Static method in class edu.wpi.first.wpilibj2.command.button.
RobotModeTriggers
Returns a trigger that is true when the robot is disabled.
Disabled
- Enum constant in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Disabled.
disabledExit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Exit code for disabled mode should go here.
disabledInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Initialization code for disabled mode should go here.
disabledPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic code for disabled mode should go here.
disableLiveWindow(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Disables LiveWindow for an object.
disableLocal
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For subscriptions, if local value updates should not be queued for readQueue().
disableLocal(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
For subscriptions, specify whether local value updates should not be queued for readQueue().
disableMockTime()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Disable mock time.
disablePWM()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Change this line from a PWM output back to a static Digital Output line.
disableRemote
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For subscriptions, if remote value updates should not be queued for readQueue().
disableRemote(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
For subscriptions, specify whether remote value updates should not be queued for readQueue().
disableTelemetry(Sendable)
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Disable telemetry for a single component.
disableTermination()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Disable termination behavior.
disabling(int)
- Static method in interface edu.wpi.first.epilogue.logging.errors.
ErrorHandler
Creates an error handler that will automatically disable a logger if it encounters too many
 errors.
disconnect()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Disconnects the client if it's running and connected.
disconnect(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Disconnects the client if it's running and connected.
Discretization
- Class in
edu.wpi.first.math.system
Discretization helper functions.
discretize(double, double, double, double)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Discretizes a continuous-time chassis speed.
discretize(ChassisSpeeds, double)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Discretizes a continuous-time chassis speed.
discretize(LinearVelocity, LinearVelocity, AngularVelocity, Time)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Discretizes a continuous-time chassis speed.
discretizeA(Matrix<States, States>, double)
- Static method in class edu.wpi.first.math.system.
Discretization
Discretizes the given continuous A matrix.
discretizeAB(Matrix<States, States>, Matrix<States, Inputs>, double)
- Static method in class edu.wpi.first.math.system.
Discretization
Discretizes the given continuous A and B matrices.
discretizeAQ(Matrix<States, States>, Matrix<States, States>, double)
- Static method in class edu.wpi.first.math.system.
Discretization
Discretizes the given continuous A and Q matrices.
discretizeR(Matrix<O, O>, double)
- Static method in class edu.wpi.first.math.system.
Discretization
Returns a discretized version of the provided continuous measurement noise covariance matrix.
Distance
- Interface in
edu.wpi.first.units.measure
distanceMeters
- Variable in class edu.wpi.first.math.kinematics.
SwerveModulePosition
Distance measured by the wheel of the module.
DistanceUnit
- Class in
edu.wpi.first.units
Unit of linear dimension.
DistanceUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of distance, meters.
div(double)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Divides the current pose by a scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Divides the current pose by a scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Divides the current rotation by a scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Divides the current rotation by a scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Transform2d
Divides the transform by the scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Transform3d
Divides the transform by the scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the translation divided by a scalar.
div(double)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the translation divided by a scalar.
div(double)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Divides the ChassisSpeeds by a scalar and returns the new ChassisSpeeds.
div(double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Divides the DifferentialDriveWheelSpeeds by a scalar and returns the new
 DifferentialDriveWheelSpeeds.
div(double)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Divides the MecanumDriveWheelSpeeds by a scalar and returns the new MecanumDriveWheelSpeeds.
div(double)
- Method in class edu.wpi.first.math.
Matrix
Divides all elements of this matrix by the given value.
div(double)
- Method in class edu.wpi.first.math.
Vector
div(double)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
div(double)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(double)
- Method in interface edu.wpi.first.units.measure.
Angle
div(double)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(double)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(double)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(double)
- Method in interface edu.wpi.first.units.measure.
Current
div(double)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(double)
- Method in interface edu.wpi.first.units.measure.
Distance
div(double)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a unitless scalar and returns the result.
div(double)
- Method in interface edu.wpi.first.units.measure.
Energy
div(double)
- Method in interface edu.wpi.first.units.measure.
Force
div(double)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(double)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(double)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(double)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(double)
- Method in interface edu.wpi.first.units.measure.
Mass
div(double)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(double)
- Method in interface edu.wpi.first.units.measure.
Mult
div(double)
- Method in interface edu.wpi.first.units.measure.
Per
div(double)
- Method in interface edu.wpi.first.units.measure.
Power
div(double)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(double)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(double)
- Method in interface edu.wpi.first.units.measure.
Time
div(double)
- Method in interface edu.wpi.first.units.measure.
Torque
div(double)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(double)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(double)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
div(double)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = 1/k * f(x).
div(int)
- Method in class edu.wpi.first.math.
Matrix
Divides all elements of this matrix by the given value.
div(int)
- Method in class edu.wpi.first.math.
Vector
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Current
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic acceleration and returns the result in the most appropriate
 unit.
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Force
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Per
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Power
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Time
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Current
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Angle)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angle and returns the result in the most appropriate unit.
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Force
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Angle)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Per
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Power
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Time
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Angle)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular acceleration and returns the result in the most appropriate
 unit.
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
div(AngularMomentum)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular momentum and returns the result in the most appropriate
 unit.
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
div(AngularVelocity)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular velocity and returns the result in the most appropriate
 unit.
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Current)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Current)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Current)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Current)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Current)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Current)
- Method in interface edu.wpi.first.units.measure.
Current
div(Current)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Current)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Current)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an electric current and returns the result in the most appropriate
 unit.
div(Current)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Current)
- Method in interface edu.wpi.first.units.measure.
Force
div(Current)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Current)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Current)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Current)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Current)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Current)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Current)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Current)
- Method in interface edu.wpi.first.units.measure.
Per
div(Current)
- Method in interface edu.wpi.first.units.measure.
Power
div(Current)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Current)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Current)
- Method in interface edu.wpi.first.units.measure.
Time
div(Current)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Current)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Current)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Dimensionless)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Current
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Dimensionless)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a dimensionless scalar and returns the result.
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Force
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Per
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Power
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Time
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Dimensionless)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Current
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Distance)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a distance and returns the result in the most appropriate unit.
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Force
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Distance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Per
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Power
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Time
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Distance)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Current
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Energy)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an energy and returns the result in the most appropriate unit.
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Force
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Energy)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Per
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Power
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Time
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Energy)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Force)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Force)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Force)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Force)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Force)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Force)
- Method in interface edu.wpi.first.units.measure.
Current
div(Force)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Force)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Force)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a force and returns the result in the most appropriate unit.
div(Force)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Force)
- Method in interface edu.wpi.first.units.measure.
Force
div(Force)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Force)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Force)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Force)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Force)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Force)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Force)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Force)
- Method in interface edu.wpi.first.units.measure.
Per
div(Force)
- Method in interface edu.wpi.first.units.measure.
Power
div(Force)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Force)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Force)
- Method in interface edu.wpi.first.units.measure.
Time
div(Force)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Force)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Force)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Current
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Frequency)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a frequency and returns the result in the most appropriate unit.
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Force
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Per
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Power
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Time
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Frequency)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear acceleration and returns the result in the most appropriate
 unit.
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
div(LinearMomentum)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear momentum and returns the result in the most appropriate unit.
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
div(LinearVelocity)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear velocity and returns the result in the most appropriate unit.
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Current
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Mass)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a mass and returns the result in the most appropriate unit.
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Force
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Mass)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Per
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Power
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Time
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Mass)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Angle
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Current
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Distance
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a moment of inertia and returns the result in the most appropriate
 unit.
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Energy
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Force
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mass
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mult
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Per
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Power
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Time
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Torque
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic multiplication and returns the result in the most appropriate
 unit.
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic ratio and returns the result in the most appropriate unit.
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Power)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Power)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Power)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Power)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Power)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Power)
- Method in interface edu.wpi.first.units.measure.
Current
div(Power)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Power)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Power)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a power and returns the result in the most appropriate unit.
div(Power)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Power)
- Method in interface edu.wpi.first.units.measure.
Force
div(Power)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Power)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Power)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Power)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Power)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Power)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Power)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Power)
- Method in interface edu.wpi.first.units.measure.
Per
div(Power)
- Method in interface edu.wpi.first.units.measure.
Power
div(Power)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Power)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Power)
- Method in interface edu.wpi.first.units.measure.
Time
div(Power)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Power)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Power)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Current
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Resistance)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a resistance and returns the result in the most appropriate unit.
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Force
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Per
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Power
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Time
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Resistance)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Current
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Temperature)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a temperature and returns the result in the most appropriate unit.
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Force
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Per
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Power
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Time
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Temperature)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Time)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Time)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Time)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Time)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Time)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Time)
- Method in interface edu.wpi.first.units.measure.
Current
div(Time)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Time)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Time)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a time and returns the result in the most appropriate unit.
div(Time)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Time)
- Method in interface edu.wpi.first.units.measure.
Force
div(Time)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Time)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Time)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Time)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Time)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Time)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Time)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Time)
- Method in interface edu.wpi.first.units.measure.
Per
div(Time)
- Method in interface edu.wpi.first.units.measure.
Power
div(Time)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Time)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Time)
- Method in interface edu.wpi.first.units.measure.
Time
div(Time)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Time)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Time)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Current
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Torque)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a torque and returns the result in the most appropriate unit.
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Force
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Torque)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Per
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Power
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Time
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Torque)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Current
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Velocity<?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic velocity and returns the result in the most appropriate unit.
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Force
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Per
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Power
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Time
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Acceleration
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Angle
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Current
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Distance
div(Voltage)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a voltage and returns the result in the most appropriate unit.
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Energy
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Force
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Frequency
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mass
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mult
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Per
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Power
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Resistance
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Temperature
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Time
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Torque
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Velocity
div(Voltage)
- Method in interface edu.wpi.first.units.measure.
Voltage
div(Measure<?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measurement by another measure and performs some dimensional analysis to reduce
 the units.
div(UnaryFunction)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = f(x) / g(x).
divide(double)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Divides by a scalar.
divide(double)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(double)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Angle)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Current)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Distance)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Energy)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Force)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Frequency)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mass)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Power)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Resistance)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Temperature)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Time)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Torque)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Voltage)
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divide(Measure<?>)
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use div instead. This was renamed for consistency with other languages like Kotlin
divideRatio(Measure<? extends PerUnit<? extends U, Other>>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a ratio in terms of this measurement's unit to another unit, returning
 a measurement in terms of the other unit.
DMA
- Class in
edu.wpi.first.wpilibj
Class for configuring Direct Memory Access (DMA) of FPGA inputs.
DMA()
- Constructor for class edu.wpi.first.wpilibj.
DMA
Default constructor.
DMAJNI
- Class in
edu.wpi.first.hal
DMA HAL JNI functions.
DMAJNISample
- Class in
edu.wpi.first.hal
DMAJNISample()
- Constructor for class edu.wpi.first.hal.
DMAJNISample
Default constructor.
DMASample
- Class in
edu.wpi.first.wpilibj
DMA sample.
DMASample()
- Constructor for class edu.wpi.first.wpilibj.
DMASample
Default constructor.
DMASample.DMAReadStatus
- Enum Class in
edu.wpi.first.wpilibj
DMA read status.
DMC60
- Class in
edu.wpi.first.wpilibj.motorcontrol
Digilent DMC 60 Motor Controller.
DMC60(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
DMC60
Constructor.
dot(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns the elementwise product of two quaternions.
dot(Vector<R>)
- Method in class edu.wpi.first.math.
Vector
Returns the dot product of this vector with another.
DoubleArrayEntry
- Interface in
edu.wpi.first.networktables
NetworkTables DoubleArray entry.
DoubleArrayLogEntry
- Class in
edu.wpi.first.util.datalog
Log array of double values.
DoubleArrayLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Constructs a double array log entry.
DoubleArrayLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Constructs a double array log entry.
DoubleArrayLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Constructs a double array log entry.
DoubleArrayLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Constructs a double array log entry.
DoubleArrayPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables DoubleArray publisher.
DoubleArraySubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables DoubleArray subscriber.
DoubleArrayTopic
- Class in
edu.wpi.first.networktables
NetworkTables DoubleArray topic.
DoubleArrayTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
DoubleArrayTopic
Constructor; use NetworkTableInstance.getDoubleArrayTopic() instead.
DoubleArrayTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
DoubleArrayTopic
Construct from a generic topic.
DoubleCircularBuffer
- Class in
edu.wpi.first.util
This is a simple circular buffer so we don't need to "bucket brigade" copy old values.
DoubleCircularBuffer(int)
- Constructor for class edu.wpi.first.util.
DoubleCircularBuffer
Create a CircularBuffer with the provided size.
DoubleEntry
- Interface in
edu.wpi.first.networktables
NetworkTables Double entry.
DoubleLogEntry
- Class in
edu.wpi.first.util.datalog
Log double values.
DoubleLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
DoubleLogEntry
Constructs a double log entry.
DoubleLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
DoubleLogEntry
Constructs a double log entry.
DoubleLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
DoubleLogEntry
Constructs a double log entry.
DoubleLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
DoubleLogEntry
Constructs a double log entry.
DoublePublisher
- Interface in
edu.wpi.first.networktables
NetworkTables Double publisher.
DoubleSolenoid
- Class in
edu.wpi.first.wpilibj
DoubleSolenoid class for running 2 channels of high voltage Digital Output on the pneumatics
 module.
DoubleSolenoid(int, PneumaticsModuleType, int, int)
- Constructor for class edu.wpi.first.wpilibj.
DoubleSolenoid
Constructs a double solenoid for a specified module of a specific module type.
DoubleSolenoid(PneumaticsModuleType, int, int)
- Constructor for class edu.wpi.first.wpilibj.
DoubleSolenoid
Constructs a double solenoid for a default module of a specific module type.
DoubleSolenoid.Value
- Enum Class in
edu.wpi.first.wpilibj
Possible values for a DoubleSolenoid.
DoubleSolenoidSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated
DoubleSolenoid
.
DoubleSolenoidSim(int, PneumaticsModuleType, int, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Constructs for a solenoid on a pneumatics module of the given type and ID.
DoubleSolenoidSim(PneumaticsModuleType, int, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Constructs for a solenoid on a pneumatics module of the given type and default ID.
DoubleSolenoidSim(PneumaticsBaseSim, int, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Constructs for a solenoid on the given pneumatics module.
DoubleSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables Double subscriber.
DoubleTopic
- Class in
edu.wpi.first.networktables
NetworkTables Double topic.
DoubleTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
DoubleTopic
Constructor; use NetworkTableInstance.getDoubleTopic() instead.
DoubleTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
DoubleTopic
Construct from a generic topic.
driveCartesian(double, double, double)
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
Drive method for Mecanum platform.
driveCartesian(double, double, double, Rotation2d)
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
Drive method for Mecanum platform.
driveCartesianIK(double, double, double)
- Static method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
Cartesian inverse kinematics for Mecanum platform.
driveCartesianIK(double, double, double, Rotation2d)
- Static method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
Cartesian inverse kinematics for Mecanum platform.
drivePolar(double, Rotation2d, double)
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
Drive method for Mecanum platform.
DriverStation
- Class in
edu.wpi.first.wpilibj
Provide access to the network communication data to / from the Driver Station.
DriverStation.Alliance
- Enum Class in
edu.wpi.first.wpilibj
The robot alliance that the robot is a part of.
DriverStation.MatchType
- Enum Class in
edu.wpi.first.wpilibj
The type of robot match that the robot is part of.
driverStationConnected()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Code that needs to know the DS state should go here.
DriverStationDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for Driver Station data.
DriverStationJNI
- Class in
edu.wpi.first.hal
Driver Station JNI Functions.
DriverStationModeThread
- Class in
edu.wpi.first.wpilibj.internal
For internal use only.
DriverStationModeThread()
- Constructor for class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
Internal use only.
DriverStationSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated driver station.
DSControlWord
- Class in
edu.wpi.first.wpilibj
A wrapper around Driver Station control word.
DSControlWord()
- Constructor for class edu.wpi.first.wpilibj.
DSControlWord
DSControlWord constructor.
dtheta
- Variable in class edu.wpi.first.math.geometry.
Twist2d
Angular "dtheta" component (radians).
DutyCycle
- Class in
edu.wpi.first.wpilibj
Class to read a duty cycle PWM input.
DutyCycle(DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycle
Constructs a DutyCycle input from a DigitalSource input.
DutyCycleDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for duty cycle data.
DutyCycleEncoder
- Class in
edu.wpi.first.wpilibj
Class for supporting duty cycle/PWM encoders, such as the US Digital MA3 with PWM Output, the
 CTRE Mag Encoder, the Rev Hex Encoder, and the AM Mag Encoder.
DutyCycleEncoder(int)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder on a specific channel.
DutyCycleEncoder(int, double, double)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder on a specific channel.
DutyCycleEncoder(DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder attached to a DigitalSource object.
DutyCycleEncoder(DigitalSource, double, double)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder attached to a DigitalSource object.
DutyCycleEncoder(DutyCycle)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder attached to an existing DutyCycle object.
DutyCycleEncoder(DutyCycle, double, double)
- Constructor for class edu.wpi.first.wpilibj.
DutyCycleEncoder
Construct a new DutyCycleEncoder attached to an existing DutyCycle object.
DutyCycleEncoderSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated duty cycle encoder.
DutyCycleEncoderSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Constructs from a digital input channel.
DutyCycleEncoderSim(DutyCycleEncoder)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Constructs from an DutyCycleEncoder object.
DutyCycleJNI
- Class in
edu.wpi.first.hal
DutyCycle HAL JNI functions.
DutyCycleSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated duty cycle digital input.
DutyCycleSim(DutyCycle)
- Constructor for class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Constructs from a DutyCycle object.
dx
- Variable in class edu.wpi.first.math.geometry.
Twist2d
Linear "dx" component.
dx
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Linear "dx" component.
dy
- Variable in class edu.wpi.first.math.geometry.
Twist2d
Linear "dy" component.
dy
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Linear "dy" component.
dynamic(SysIdRoutine.Direction)
- Method in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine
Returns a command to run a dynamic test in the specified direction.
DynamicStruct
- Class in
edu.wpi.first.util.struct
Dynamic (run-time) access to a serialized raw struct.
dz
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Linear "dz" component.
E
E()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to -Y in the NWU coordinate system.
EdgeConfiguration
- Enum Class in
edu.wpi.first.wpilibj.counter
Edge configuration.
EDN()
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Returns an instance of the East-Down-North (EDN) coordinate system.
edu.wpi.first.apriltag
- package edu.wpi.first.apriltag
edu.wpi.first.apriltag.jni
- package edu.wpi.first.apriltag.jni
edu.wpi.first.cameraserver
- package edu.wpi.first.cameraserver
edu.wpi.first.cscore
- package edu.wpi.first.cscore
edu.wpi.first.cscore.raw
- package edu.wpi.first.cscore.raw
edu.wpi.first.epilogue
- package edu.wpi.first.epilogue
edu.wpi.first.epilogue.logging
- package edu.wpi.first.epilogue.logging
edu.wpi.first.epilogue.logging.errors
- package edu.wpi.first.epilogue.logging.errors
edu.wpi.first.hal
- package edu.wpi.first.hal
edu.wpi.first.hal.can
- package edu.wpi.first.hal.can
edu.wpi.first.hal.communication
- package edu.wpi.first.hal.communication
edu.wpi.first.hal.simulation
- package edu.wpi.first.hal.simulation
edu.wpi.first.hal.util
- package edu.wpi.first.hal.util
edu.wpi.first.math
- package edu.wpi.first.math
edu.wpi.first.math.controller
- package edu.wpi.first.math.controller
edu.wpi.first.math.controller.proto
- package edu.wpi.first.math.controller.proto
edu.wpi.first.math.controller.struct
- package edu.wpi.first.math.controller.struct
edu.wpi.first.math.estimator
- package edu.wpi.first.math.estimator
edu.wpi.first.math.filter
- package edu.wpi.first.math.filter
edu.wpi.first.math.geometry
- package edu.wpi.first.math.geometry
edu.wpi.first.math.geometry.proto
- package edu.wpi.first.math.geometry.proto
edu.wpi.first.math.geometry.struct
- package edu.wpi.first.math.geometry.struct
edu.wpi.first.math.interpolation
- package edu.wpi.first.math.interpolation
edu.wpi.first.math.jni
- package edu.wpi.first.math.jni
edu.wpi.first.math.kinematics
- package edu.wpi.first.math.kinematics
edu.wpi.first.math.kinematics.proto
- package edu.wpi.first.math.kinematics.proto
edu.wpi.first.math.kinematics.struct
- package edu.wpi.first.math.kinematics.struct
edu.wpi.first.math.numbers
- package edu.wpi.first.math.numbers
edu.wpi.first.math.optimization
- package edu.wpi.first.math.optimization
edu.wpi.first.math.path
- package edu.wpi.first.math.path
edu.wpi.first.math.proto
- package edu.wpi.first.math.proto
edu.wpi.first.math.spline
- package edu.wpi.first.math.spline
edu.wpi.first.math.spline.proto
- package edu.wpi.first.math.spline.proto
edu.wpi.first.math.spline.struct
- package edu.wpi.first.math.spline.struct
edu.wpi.first.math.struct
- package edu.wpi.first.math.struct
edu.wpi.first.math.system
- package edu.wpi.first.math.system
edu.wpi.first.math.system.plant
- package edu.wpi.first.math.system.plant
edu.wpi.first.math.system.plant.proto
- package edu.wpi.first.math.system.plant.proto
edu.wpi.first.math.system.plant.struct
- package edu.wpi.first.math.system.plant.struct
edu.wpi.first.math.system.proto
- package edu.wpi.first.math.system.proto
edu.wpi.first.math.system.struct
- package edu.wpi.first.math.system.struct
edu.wpi.first.math.trajectory
- package edu.wpi.first.math.trajectory
edu.wpi.first.math.trajectory.constraint
- package edu.wpi.first.math.trajectory.constraint
edu.wpi.first.math.trajectory.proto
- package edu.wpi.first.math.trajectory.proto
edu.wpi.first.math.util
- package edu.wpi.first.math.util
edu.wpi.first.net
- package edu.wpi.first.net
edu.wpi.first.networktables
- package edu.wpi.first.networktables
edu.wpi.first.units
- package edu.wpi.first.units
edu.wpi.first.units.collections
- package edu.wpi.first.units.collections
edu.wpi.first.units.measure
- package edu.wpi.first.units.measure
edu.wpi.first.units.mutable
- package edu.wpi.first.units.mutable
edu.wpi.first.util
- package edu.wpi.first.util
edu.wpi.first.util.cleanup
- package edu.wpi.first.util.cleanup
edu.wpi.first.util.concurrent
- package edu.wpi.first.util.concurrent
edu.wpi.first.util.datalog
- package edu.wpi.first.util.datalog
edu.wpi.first.util.function
- package edu.wpi.first.util.function
edu.wpi.first.util.protobuf
- package edu.wpi.first.util.protobuf
edu.wpi.first.util.sendable
- package edu.wpi.first.util.sendable
edu.wpi.first.util.struct
- package edu.wpi.first.util.struct
edu.wpi.first.util.struct.parser
- package edu.wpi.first.util.struct.parser
edu.wpi.first.vision
- package edu.wpi.first.vision
Classes in the
edu.wpi.first.vision
package are designed to simplify using OpenCV vision
 processing code from a robot program.
edu.wpi.first.wpilibj
- package edu.wpi.first.wpilibj
edu.wpi.first.wpilibj.counter
- package edu.wpi.first.wpilibj.counter
edu.wpi.first.wpilibj.drive
- package edu.wpi.first.wpilibj.drive
edu.wpi.first.wpilibj.event
- package edu.wpi.first.wpilibj.event
edu.wpi.first.wpilibj.internal
- package edu.wpi.first.wpilibj.internal
edu.wpi.first.wpilibj.livewindow
- package edu.wpi.first.wpilibj.livewindow
edu.wpi.first.wpilibj.motorcontrol
- package edu.wpi.first.wpilibj.motorcontrol
edu.wpi.first.wpilibj.romi
- package edu.wpi.first.wpilibj.romi
edu.wpi.first.wpilibj.shuffleboard
- package edu.wpi.first.wpilibj.shuffleboard
edu.wpi.first.wpilibj.simulation
- package edu.wpi.first.wpilibj.simulation
edu.wpi.first.wpilibj.smartdashboard
- package edu.wpi.first.wpilibj.smartdashboard
edu.wpi.first.wpilibj.sysid
- package edu.wpi.first.wpilibj.sysid
edu.wpi.first.wpilibj.util
- package edu.wpi.first.wpilibj.util
edu.wpi.first.wpilibj.xrp
- package edu.wpi.first.wpilibj.xrp
edu.wpi.first.wpilibj2.command
- package edu.wpi.first.wpilibj2.command
edu.wpi.first.wpilibj2.command.button
- package edu.wpi.first.wpilibj2.command.button
edu.wpi.first.wpilibj2.command.sysid
- package edu.wpi.first.wpilibj2.command.sysid
EigenJNI
- Class in
edu.wpi.first.math.jni
Eigen JNI.
either(Command, Command, BooleanSupplier)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs one of two commands, based on the boolean selector function.
elementPower(double)
- Method in class edu.wpi.first.math.
Matrix
Returns a matrix which is the result of an element by element power of "this" and b.
elementPower(int)
- Method in class edu.wpi.first.math.
Matrix
Returns a matrix which is the result of an element by element power of "this" and b.
elementSum()
- Method in class edu.wpi.first.math.
Matrix
Computes the sum of all the elements in the matrix.
elementTimes(Matrix<R, C>)
- Method in class edu.wpi.first.math.
Matrix
Returns a matrix which is the result of an element by element multiplication of "this" and
 other.
ElevatorFeedforward
- Class in
edu.wpi.first.math.controller
A helper class that computes feedforward outputs for a simple elevator (modeled as a motor acting
 against the force of gravity).
ElevatorFeedforward(double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ElevatorFeedforward
Creates a new ElevatorFeedforward with the specified gains.
ElevatorFeedforward(double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ElevatorFeedforward
Creates a new ElevatorFeedforward with the specified gains.
ElevatorFeedforward(double, double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
ElevatorFeedforward
Creates a new ElevatorFeedforward with the specified gains and period.
ElevatorFeedforwardProto
- Class in
edu.wpi.first.math.controller.proto
ElevatorFeedforwardProto()
- Constructor for class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
ElevatorFeedforwardStruct
- Class in
edu.wpi.first.math.controller.struct
ElevatorFeedforwardStruct()
- Constructor for class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
ElevatorSim
- Class in
edu.wpi.first.wpilibj.simulation
Represents a simulated elevator mechanism.
ElevatorSim(double, double, DCMotor, double, double, boolean, double, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Creates a simulated elevator mechanism.
ElevatorSim(LinearSystem<N2, N1, N2>, DCMotor, double, double, boolean, double, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Creates a simulated elevator mechanism.
ElevatorSim(DCMotor, double, double, double, double, double, boolean, double, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Creates a simulated elevator mechanism.
Elimination
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
Elimination.
Ellipse2d
- Class in
edu.wpi.first.math.geometry
Represents a 2d ellipse space containing translational, rotational, and scaling components.
Ellipse2d(Pose2d, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Ellipse2d
Constructs an ellipse around a center point and two semi-axes, a horizontal and vertical one.
Ellipse2d(Pose2d, Distance, Distance)
- Constructor for class edu.wpi.first.math.geometry.
Ellipse2d
Constructs an ellipse around a center point and two semi-axes, a horizontal and vertical one.
Ellipse2d(Translation2d, double)
- Constructor for class edu.wpi.first.math.geometry.
Ellipse2d
Constructs a perfectly circular ellipse with the specified radius.
Ellipse2d(Translation2d, Distance)
- Constructor for class edu.wpi.first.math.geometry.
Ellipse2d
Constructs a perfectly circular ellipse with the specified radius.
Ellipse2dJNI
- Class in
edu.wpi.first.math.jni
Ellipse2d JNI.
Ellipse2dProto
- Class in
edu.wpi.first.math.geometry.proto
Ellipse2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
Ellipse2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Ellipse2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
ellipses()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the ellipses button's digital signal.
ellipses(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the ellipses button's digital signal.
ellipses(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the ellipses button's digital signal.
EllipticalRegionConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
Enforces a particular constraint only within an elliptical region.
EllipticalRegionConstraint(Ellipse2d, TrajectoryConstraint)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
EllipticalRegionConstraint
Constructs a new EllipticalRegionConstraint.
EllipticalRegionConstraint(Translation2d, double, double, Rotation2d, TrajectoryConstraint)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
EllipticalRegionConstraint
Deprecated, for removal: This API element is subject to removal in a future version.
Use constructor taking Ellipse2d instead.
enable()
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Enables interrupt callbacks.
enable()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Re-enable the motor after disable() has been called.
enable()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Enables the watchdog timer.
enable()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Enables the command scheduler.
enable()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Enables the PID control.
enable()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Enables the PID control.
enable()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Enable the TrapezoidProfileSubsystem's output.
enableActuatorWidgets()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Enables user control of widgets containing actuators: motor controllers, relays, etc.
enableAllTelemetry()
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Enable ALL telemetry.
enableAnalog(double, double)
- Method in class edu.wpi.first.wpilibj.
Compressor
If supported by the device, enables the compressor in analog mode.
enableCompressorAnalog(double, double)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Enables the compressor in analog mode.
enableCompressorAnalog(double, double)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
If supported by the device, enables the compressor in analog mode.
enableCompressorAnalog(double, double)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Enables the compressor in digital mode.
enableCompressorDigital()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
enableCompressorDigital()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Enables the compressor in digital mode using the digital pressure switch.
enableCompressorDigital()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
enableCompressorHybrid(double, double)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Enables the compressor in hybrid mode.
enableCompressorHybrid(double, double)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
If supported by the device, enables the compressor in hybrid mode.
enableCompressorHybrid(double, double)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Enables the compressor in digital mode.
enableContinuousInput(double, double)
- Method in class edu.wpi.first.math.controller.
PIDController
Enables continuous input.
enableContinuousInput(double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Enables continuous input.
enableDeadbandElimination(boolean)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Optionally eliminate the deadband from a motor controller.
enableDeadbandElimination(boolean)
- Method in class edu.wpi.first.wpilibj.
PWM
Optionally eliminate the deadband from a motor controller.
enableDigital()
- Method in class edu.wpi.first.wpilibj.
Compressor
Enables the compressor in digital mode using the digital pressure switch.
enableHybrid(double, double)
- Method in class edu.wpi.first.wpilibj.
Compressor
If supported by the device, enables the compressor in hybrid mode.
enableLiveWindow(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Enables LiveWindow for an object.
enableLiveWindowInTest(boolean)
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Sets whether LiveWindow operation is enabled during test mode.
enableMockTime()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Enable mock time.
enablePPS(double)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Enable a PWM PPS (Pulse Per Second) Output on this line.
enablePWM(double)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Enable a PWM Output on this line.
enableTelemetry(Sendable)
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Enable telemetry for a single component.
enableTermination()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Enable termination with the default terminator '\n'
enableTermination(char)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Enable termination and specify the termination character.
Encoder
- Class in
edu.wpi.first.wpilibj
Class to read quadrature encoders.
Encoder(int, int)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(int, int, boolean)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(int, int, boolean, CounterBase.EncodingType)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(int, int, int)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(int, int, int, boolean)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(DigitalSource, DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(DigitalSource, DigitalSource, boolean)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(DigitalSource, DigitalSource, boolean, CounterBase.EncodingType)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(DigitalSource, DigitalSource, DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder(DigitalSource, DigitalSource, DigitalSource, boolean)
- Constructor for class edu.wpi.first.wpilibj.
Encoder
Encoder constructor.
Encoder.IndexingType
- Enum Class in
edu.wpi.first.wpilibj
Encoder indexing types.
EncoderDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for encoder data.
EncoderJNI
- Class in
edu.wpi.first.hal
Encoder JNI Functions.
EncoderSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated encoder.
EncoderSim(Encoder)
- Constructor for class edu.wpi.first.wpilibj.simulation.
EncoderSim
Constructs from an Encoder object.
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
Command
The action to take when the command ends.
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
DeferredCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
FunctionalCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
NotifierCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
RamseteCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileCommand
Deprecated.
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
WaitCommand
end(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
The action to take when the command ends.
endCompetition()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Ends the main loop in
RobotBase.startCompetition()
.
endCompetition()
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Ends the main loop in startCompetition().
Energy
- Interface in
edu.wpi.first.units.measure
EnergyUnit
- Class in
edu.wpi.first.units
Unit of energy dimension.
EnergyUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of energy, joules.
entry
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.MetadataRecordData
Entry ID.
entry
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.StartRecordData
Entry ID; this will be used for this entry in future records.
EntryBase
- Class in
edu.wpi.first.networktables
NetworkTables entry base implementation.
EntryBase(int)
- Constructor for class edu.wpi.first.networktables.
EntryBase
Constructor.
enumerateDevices(String)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get all sim devices with the given prefix.
enumerateProperties()
- Method in class edu.wpi.first.cscore.
VideoSink
Enumerate all properties of this sink.
enumerateProperties()
- Method in class edu.wpi.first.cscore.
VideoSource
Enumerate all properties of this source.
enumerateSimDevices(String)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
enumerateSimValues(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
enumerateSinkProperties(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of sink property handles.
enumerateSinks()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of sinks.
enumerateSinks()
- Static method in class edu.wpi.first.cscore.
VideoSink
Enumerate all existing sinks.
enumerateSinks()
- Method in class edu.wpi.first.cscore.
VideoSource
Enumerate all sinks connected to this source.
enumerateSourceProperties(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of source property handles.
enumerateSources()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of sources.
enumerateSources()
- Static method in class edu.wpi.first.cscore.
VideoSource
Enumerate all existing sources.
enumerateSourceSinks(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of source sinks.
enumerateSourceVideoModes(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of source's supported video modes.
enumerateUsbCameras()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of USB cameras.
enumerateUsbCameras()
- Static method in class edu.wpi.first.cscore.
UsbCamera
Enumerate USB cameras on the local system.
enumerateValues()
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get all data of this object.
enumerateVideoModes()
- Method in class edu.wpi.first.cscore.
VideoSource
Enumerate all known video modes for this source.
EnumFieldBuilder(String)
- Constructor for class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder.EnumFieldBuilder
Creates a new enum field builder.
enumValues
- Variable in class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Enum values.
EpilogueBackend
- Interface in
edu.wpi.first.epilogue.logging
A backend is a generic interface for Epilogue to log discrete data points.
EpilogueConfiguration
- Class in
edu.wpi.first.epilogue
A configuration object to be used by the generated
Epilogue
class to customize its
 behavior.
EpilogueConfiguration()
- Constructor for class edu.wpi.first.epilogue.
EpilogueConfiguration
Default constructor.
equals(Object)
- Method in class edu.wpi.first.apriltag.
AprilTag
equals(Object)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector.Config
equals(Object)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
equals(Object)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
equals(Object)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
equals(Object)
- Method in class edu.wpi.first.cscore.
VideoMode
equals(Object)
- Method in class edu.wpi.first.cscore.
VideoSink
equals(Object)
- Method in class edu.wpi.first.cscore.
VideoSource
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Checks equality between this Ellipse2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Checks equality between this Pose2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Checks equality between this Pose3d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Checks equality between this Quaternion and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Checks equality between this Rectangle2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Checks equality between this Rotation2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Checks equality between this Rotation3d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Transform2d
Checks equality between this Transform2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Transform3d
Checks equality between this Transform3d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Checks equality between this Translation2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Checks equality between this Translation3d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Twist2d
Checks equality between this Twist2d and another object.
equals(Object)
- Method in class edu.wpi.first.math.geometry.
Twist3d
Checks equality between this Twist3d and another object.
equals(Object)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
equals(Object)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
equals(Object)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
equals(Object)
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
equals(Object)
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
equals(Object)
- Method in class edu.wpi.first.math.
Matrix
Checks if an object is equal to this
Matrix
.
equals(Object)
- Method in class edu.wpi.first.math.
Pair
Checks equality between this Pair and another object.
equals(Object)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
equals(Object)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
equals(Object)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
equals(Object)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
equals(Object)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
equals(Object)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
equals(Object)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
equals(Object)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
equals(Object)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
equals(Object)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
equals(Object)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
equals(Object)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
equals(Object)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
equals(Object)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
equals(Object)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile.State
equals(Object)
- Method in class edu.wpi.first.math.trajectory.
Trajectory
equals(Object)
- Method in class edu.wpi.first.math.trajectory.
Trajectory.State
equals(Object)
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
equals(Object)
- Method in class edu.wpi.first.networktables.
NetworkTable
equals(Object)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
equals(Object)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
equals(Object)
- Method in class edu.wpi.first.networktables.
NetworkTableValue
equals(Object)
- Method in class edu.wpi.first.networktables.
ProtobufTopic
equals(Object)
- Method in class edu.wpi.first.networktables.
StructArrayTopic
equals(Object)
- Method in class edu.wpi.first.networktables.
StructTopic
equals(Object)
- Method in class edu.wpi.first.networktables.
Topic
equals(Object)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Indicates whether some other object is "equal to" this one.
equals(Object)
- Method in class edu.wpi.first.units.
MultUnit
equals(Object)
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
equals(Object)
- Method in class edu.wpi.first.units.
PerUnit
equals(Object)
- Method in class edu.wpi.first.units.
Unit
equals(Object)
- Method in class edu.wpi.first.wpilibj.util.
Color
equals(Object)
- Method in class edu.wpi.first.wpilibj.util.
Color8Bit
equals(Object)
- Method in class edu.wpi.first.wpilibj.
Watchdog
EQUIVALENCE_THRESHOLD
- Static variable in interface edu.wpi.first.units.
Measure
The threshold for two measures to be considered equivalent if converted to the same unit.
equivalent(Unit)
- Method in class edu.wpi.first.units.
Unit
Checks if this unit is equivalent to another one.
error1
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Object-space error of pose 1.
error2
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Object-space error of pose 2.
errorCovariances
- Variable in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator.ObserverSnapshot
The error covariance.
errorHandler
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The error handler for loggers to use if they encounter an error while logging.
ErrorHandler
- Interface in
edu.wpi.first.epilogue.logging.errors
An error handler is used by the Logged framework to catch and process any errors that occur
 during the logging process.
ErrorMessages
- Class in
edu.wpi.first.util
Utility class for common WPILib error messages.
ErrorPrinter
- Class in
edu.wpi.first.epilogue.logging.errors
An error handler implementation that prints error information to the console.
ErrorPrinter()
- Constructor for class edu.wpi.first.epilogue.logging.errors.
ErrorPrinter
Default constructor.
estimate(double[], double[])
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates tag pose.
estimate(AprilTagDetection)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates tag pose.
estimateHomography(double[])
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates the pose of the tag using the homography method described in [1].
estimateHomography(AprilTagDetection)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates the pose of the tag using the homography method described in [1].
estimateMOI(double, double)
- Static method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Calculates a rough estimate of the moment of inertia of an arm given its length and mass.
estimateOrthogonalIteration(double[], double[], int)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates the pose of the tag.
estimateOrthogonalIteration(AprilTagDetection, int)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Estimates the pose of the tag.
estimatePose(double[], double[], double, double, double, double, double)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Estimates tag pose.
estimatePoseHomography(double[], double, double, double, double, double)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Estimates the pose of the tag using the homography method described in [1].
estimatePoseOrthogonalIteration(double[], double[], double, double, double, double, double, int)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Estimates the pose of the tag.
Event
- Class in
edu.wpi.first.util.concurrent
An atomic signaling event for synchronization.
Event()
- Constructor for class edu.wpi.first.util.concurrent.
Event
Constructor.
Event(boolean)
- Constructor for class edu.wpi.first.util.concurrent.
Event
Constructor.
Event(boolean, boolean)
- Constructor for class edu.wpi.first.util.concurrent.
Event
Constructor.
EventImportance
- Enum Class in
edu.wpi.first.wpilibj.shuffleboard
The importance of an event marker in Shuffleboard.
EventLoop
- Class in
edu.wpi.first.wpilibj.event
A declarative way to bind a set of actions to a loop and execute them when the loop is polled.
EventLoop()
- Constructor for class edu.wpi.first.wpilibj.event.
EventLoop
Default constructor.
eventName
- Variable in class edu.wpi.first.hal.
MatchInfoData
Stores the event name.
EventVector
- Class in
edu.wpi.first.util
A thread-safe container for handling events.
EventVector()
- Constructor for class edu.wpi.first.util.
EventVector
Default constructor.
excludePublisher
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For subscriptions, if non-zero, value updates for readQueue() are not queued for this
 publisher.
excludePublisher(int)
- Static method in class edu.wpi.first.networktables.
PubSubOption
Don't queue value updates for the given publisher.
excludePublisher(Publisher)
- Static method in class edu.wpi.first.networktables.
PubSubOption
Don't queue value updates for the given publisher.
excludeSelf
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For entries, don't queue (for readQueue) value updates for the entry's internal publisher.
excludeSelf(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
Don't queue value updates for the internal publisher for an entry.
execute()
- Method in class edu.wpi.first.wpilibj2.command.
Command
The main body of a command.
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
DeferredCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
FunctionalCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
execute()
- Method in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
execute()
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
RamseteCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
execute()
- Method in class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
execute()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileCommand
Deprecated.
execute()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
The main body of a command.
exists()
- Method in class edu.wpi.first.networktables.
EntryBase
exists()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Determines if the entry currently exists.
exists()
- Method in interface edu.wpi.first.networktables.
Subscriber
Determines if the entry currently exists.
exists()
- Method in class edu.wpi.first.networktables.
Topic
Determines if the topic is currently being published.
exitMain()
- Static method in class edu.wpi.first.hal.
HAL
Causes HAL_RunMain() to exit.
exp()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Matrix exponential of a quaternion.
exp()
- Method in class edu.wpi.first.math.
Matrix
Computes the matrix exponential using Eigen's solver.
exp(double)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = f(x) ^ k.
exp(double[], int, double[])
- Static method in class edu.wpi.first.math.jni.
EigenJNI
Computes the matrix exp.
exp(double, double, double, double, double, double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.jni.
Pose3dJNI
Obtain a Pose3d from a (constant curvature) velocity.
exp(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Matrix exponential of a quaternion.
exp(Twist2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Obtain a new Pose2d from a (constant curvature) velocity.
exp(Twist3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Obtain a new Pose3d from a (constant curvature) velocity.
exp(UnaryFunction)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = f(x) ^ g(x).
ExponentialProfile
- Class in
edu.wpi.first.math.trajectory
A exponential curve-shaped velocity profile.
ExponentialProfile(ExponentialProfile.Constraints)
- Constructor for class edu.wpi.first.math.trajectory.
ExponentialProfile
Constructs an ExponentialProfile.
ExponentialProfile.Constraints
- Class in
edu.wpi.first.math.trajectory
Profile constraints.
ExponentialProfile.ProfileTiming
- Class in
edu.wpi.first.math.trajectory
Profile timing.
ExponentialProfile.State
- Class in
edu.wpi.first.math.trajectory
Profile state.
ExtendedKalmanFilter
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.estimator
A Kalman filter combines predictions from a model and measurements to give an estimate of the
 true system state.
ExtendedKalmanFilter(Nat<States>, Nat<Inputs>, Nat<Outputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Outputs, N1>>, Matrix<States, N1>, Matrix<Outputs, N1>, double)
- Constructor for class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Constructs an extended Kalman filter.
ExtendedKalmanFilter(Nat<States>, Nat<Inputs>, Nat<Outputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Outputs, N1>>, Matrix<States, N1>, Matrix<Outputs, N1>, BiFunction<Matrix<Outputs, N1>, Matrix<Outputs, N1>, Matrix<Outputs, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>, double)
- Constructor for class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Constructs an extended Kalman filter.
EXTERNAL_DIRECTION
- Static variable in class edu.wpi.first.hal.
CounterJNI
External direction mode.
ExternalDirectionCounter
- Class in
edu.wpi.first.wpilibj.counter
Counter using external direction.
ExternalDirectionCounter(DigitalSource, DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
Constructs a new ExternalDirectionCounter.
extractColumnVector(int)
- Method in class edu.wpi.first.math.
Matrix
Extracts a given column into a column vector with new underlying storage.
extractFrom(int, int, Matrix<R2, C2>)
- Method in class edu.wpi.first.math.
Matrix
Extracts a submatrix from the supplied matrix and inserts it in a submatrix in "this".
extractLibraries(Class<T>, String)
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Extract a list of native libraries.
extractRowVector(int)
- Method in class edu.wpi.first.math.
Matrix
Extracts a given row into a row vector with new underlying storage.
eye(D)
- Static method in class edu.wpi.first.math.
Matrix
Creates the identity matrix of the given dimension.
eye(Nat<D>)
- Static method in class edu.wpi.first.math.
Matrix
Creates the identity matrix of the given dimension.
F
Fahrenheit
- Static variable in class edu.wpi.first.units.
Units
The base imperial (American) unit of temperature, where a value of 32 roughly corresponds to
 the freezing point of water and a value of 212 corresponds to the boiling point.
falling
- Variable in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
True if triggering on falling edge.
falling()
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new event that triggers when this one changes from true to false.
feed()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Feed the motor safety object.
feedWatchdog()
- Method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Feed the motor safety object.
Feet
- Static variable in class edu.wpi.first.units.
Units
304.8/1000 of a
Units.Meter
, or 12
Units.Inches
.
FeetPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of linear velocity equivalent to travelling at a rate one
Foot
per
Units.Second
.
FeetPerSecondPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of linear acceleration equivalent to accelerating at a rate of one
Foot
per
Units.Second
every second.
feetToMeters(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given feet to meters.
fetchStruct(Class<? extends T>)
- Static method in class edu.wpi.first.util.struct.
StructFetcher
Returns a
Struct
for the given
StructSerializable
marked class.
fetchStructDynamic(Class<?>)
- Static method in class edu.wpi.first.util.struct.
StructFetcher
Returns a
Struct
for the given class.
Field2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
2D representation of game field for dashboards.
Field2d()
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Constructor.
FieldObject2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
Game field object on a Field2d.
FileBackend
- Class in
edu.wpi.first.epilogue.logging
A backend implementation that saves information to a WPILib
DataLog
file on disk.
FileBackend(DataLog)
- Constructor for class edu.wpi.first.epilogue.logging.
FileBackend
Creates a new file-based backend.
FileLogger
- Class in
edu.wpi.first.util
A class version of `tail -f`, otherwise known as `tail -f` at home.
FileLogger(String, DataLog, String)
- Constructor for class edu.wpi.first.util.
FileLogger
Construct a FileLogger.
filename
- Variable in class edu.wpi.first.networktables.
LogMessage
The filename of the source file that generated the message.
Filesystem
- Class in
edu.wpi.first.wpilibj
Class for interacting with the Filesystem, particularly, interacting with FRC-related paths on
 the system, such as the launch and deploy directories.
fill(double)
- Method in class edu.wpi.first.math.
Matrix
Sets all the elements in "this" matrix equal to the specified value.
fill(double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 1x1 vector containing the given elements.
fill(double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 2x1 vector containing the given elements.
fill(double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 3x1 vector containing the given elements.
fill(double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 4x1 vector containing the given elements.
fill(double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 5x1 vector containing the given elements.
fill(double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 6x1 vector containing the given elements.
fill(double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 7x1 vector containing the given elements.
fill(double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 8x1 vector containing the given elements.
fill(double, double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 9x1 vector containing the given elements.
fill(double, double, double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.
VecBuilder
Returns a 10x1 vector containing the given elements.
fill(Nat<R>, Nat<C>, double...)
- Static method in class edu.wpi.first.math.
MatBuilder
Fills the matrix with the given data, encoded in row major form.
finallyDo(BooleanConsumer)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a lambda to call on interrupt or end, following the command's
 inherent
Command.end(boolean)
method.
finallyDo(Runnable)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a lambda to call on interrupt or end, following the command's
 inherent
Command.end(boolean)
method.
find(String)
- Method in class edu.wpi.first.util.struct.
StructDescriptorDatabase
Finds a structure in the database by name.
findField(String)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets a struct field descriptor by name.
findFieldByName(String)
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Gets a field descriptor by name.
findForChannel(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
findForChannel(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
findForChannel(int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
findForChannel(int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
findForChannel(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
finish()
- Method in class edu.wpi.first.util.datalog.
DataLogEntry
Finishes the entry.
finish(int)
- Method in class edu.wpi.first.util.datalog.
DataLog
Finish an entry.
finish(int, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Finish an entry.
finish(long)
- Method in class edu.wpi.first.util.datalog.
DataLogEntry
Finishes the entry.
finiteDifference(int, int[], double)
- Static method in class edu.wpi.first.math.filter.
LinearFilter
Creates a finite difference filter that computes the nth derivative of the input given the
 specified stencil points.
fireOneShot(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
fireOneShot(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Fire a single solenoid shot.
fireOneShot(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
fireOneShot(int, int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Fire a single solenoid shot.
fireOneShot(int, int, int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Fire a single solenoid shot for the specified duration.
FirmwareFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
The firmware on the device has malfunctioned.
FirmwareFault
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The firmware on the device has malfunctioned.
firmwareFix
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Firmware fix version number.
firmwareFix
- Variable in class edu.wpi.first.hal.
REVPHVersion
The firmware fix version.
firmwareMajor
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Firmware major version number.
firmwareMajor
- Variable in class edu.wpi.first.hal.
REVPHVersion
The firmware major version.
firmwareMinor
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Firmware minor version number.
firmwareMinor
- Variable in class edu.wpi.first.hal.
REVPHVersion
The firmware minor version.
FloatArrayEntry
- Interface in
edu.wpi.first.networktables
NetworkTables FloatArray entry.
FloatArrayLogEntry
- Class in
edu.wpi.first.util.datalog
Log array of float values.
FloatArrayLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Constructs a float array log entry.
FloatArrayLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Constructs a float array log entry.
FloatArrayLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Constructs a float array log entry.
FloatArrayLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Constructs a float array log entry.
FloatArrayPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables FloatArray publisher.
FloatArraySubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables FloatArray subscriber.
FloatArrayTopic
- Class in
edu.wpi.first.networktables
NetworkTables FloatArray topic.
FloatArrayTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
FloatArrayTopic
Constructor; use NetworkTableInstance.getFloatArrayTopic() instead.
FloatArrayTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
FloatArrayTopic
Construct from a generic topic.
FloatConsumer
- Interface in
edu.wpi.first.util.function
Represents an operation that accepts a single float-valued argument and returns no result.
FloatEntry
- Interface in
edu.wpi.first.networktables
NetworkTables Float entry.
FloatLogEntry
- Class in
edu.wpi.first.util.datalog
Log float values.
FloatLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
FloatLogEntry
Constructs a float log entry.
FloatLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
FloatLogEntry
Constructs a float log entry.
FloatLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
FloatLogEntry
Constructs a float log entry.
FloatLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
FloatLogEntry
Constructs a float log entry.
FloatPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables Float publisher.
FloatSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables Float subscriber.
FloatSupplier
- Interface in
edu.wpi.first.util.function
Represents a supplier of float-valued results.
FloatTopic
- Class in
edu.wpi.first.networktables
NetworkTables Float topic.
FloatTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
FloatTopic
Constructor; use NetworkTableInstance.getFloatTopic() instead.
FloatTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
FloatTopic
Construct from a generic topic.
flush()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Flushes all updated values immediately to the network.
flush()
- Method in class edu.wpi.first.util.datalog.
DataLog
Explicitly flushes the log data to disk.
flush()
- Method in class edu.wpi.first.util.datalog.
DataLogWriter
Explicitly flushes the log data to disk.
flush()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Force the output buffer to be written to the port.
flush(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Flushes all updated values immediately to the network.
flushLocal()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Flushes all updated values immediately to the local client/server.
flushLocal(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Flushes all updated values immediately to the local client/server.
FlywheelSim
- Class in
edu.wpi.first.wpilibj.simulation
Represents a simulated flywheel mechanism.
FlywheelSim(LinearSystem<N1, N1, N1>, DCMotor, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Creates a simulated flywheel mechanism.
Foot
- Static variable in class edu.wpi.first.units.
Units
304.8/1000 of a
Units.Meter
, or 12
Units.Inches
.
Force
- Interface in
edu.wpi.first.units.measure
forceAutoRead()
- Method in class edu.wpi.first.wpilibj.
SPI
Force the engine to make a single transfer.
forceLoad()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.cscore.
OpenCvLoader
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.hal.
JNIWrapper
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.math.jni.
WPIMathJNI
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.net.
WPINetJNI
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Force load the library.
forceLoad()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Force load the library.
forceStaticLoad()
- Static method in class edu.wpi.first.cscore.
OpenCvLoader
Forces a static load.
ForceUnit
- Class in
edu.wpi.first.units
A unit of force like
Units.Newtons
.
forDouble()
- Static method in interface edu.wpi.first.math.interpolation.
Interpolator
Returns interpolator for Double.
forDouble()
- Static method in interface edu.wpi.first.math.interpolation.
InverseInterpolator
Returns inverse interpolator for Double.
forEach(LongToObjectHashMap.IteratorFunction<? super V>)
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Iterates over every key-value pair in the map and passes them to the given function.
forEach(LEDReader.IndexedColorIterator)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Iterates over the LEDs in the buffer, starting from index 0.
forEach(Consumer<? super DataLogRecord>)
- Method in class edu.wpi.first.util.datalog.
DataLogReader
forEachDescriptor(Predicate<String>, BiConsumer<String, byte[]>)
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Loops over all protobuf descriptors including nested/referenced descriptors.
foreachLiveWindow(int, Consumer<SendableRegistry.CallbackData>)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Iterates over LiveWindow-enabled objects in the registry.
forEachRemaining(Consumer<? super DataLogRecord>)
- Method in class edu.wpi.first.util.datalog.
DataLogIterator
forLimit(int)
- Static method in class edu.wpi.first.epilogue.logging.errors.
LoggerDisabler
Creates a disabler that kicks in after a logger raises more than
threshold
exceptions.
fps
- Variable in class edu.wpi.first.cscore.
VideoMode
Frames per second.
frame()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the frame button's digital signal.
frame(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the frame button's digital signal.
frame(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the frame button's digital signal.
FRCNetComm
- Class in
edu.wpi.first.hal
JNI wrapper for library
FRC_NetworkCommunication
.
FRCNetComm.tInstances
- Class in
edu.wpi.first.hal
Instances from UsageReporting.
FRCNetComm.tResourceType
- Class in
edu.wpi.first.hal
Resource type from UsageReporting.
FRCNetCommCANSessionMuxReceiveMessage(IntBuffer, int, ByteBuffer)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Receives a CAN message.
FRCNetCommCANSessionMuxSendMessage(int, byte[], int)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Sends a CAN message.
free(int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Free the Addressable LED Handle.
free(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Frees a PCM handle.
free(int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Frees a DMA object.
free(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Free a DutyCycle.
free(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Cleans a PowerDistribution module.
free(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Frees a PH handle.
free(int)
- Method in class edu.wpi.first.wpilibj.
Resource
Deprecated.
Free an allocated resource.
freeAccumulator()
- Method in class edu.wpi.first.wpilibj.
SPI
Frees the accumulator.
freeAnalogGyro(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Frees an analog gyro.
freeAnalogInputPort(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Frees an analog input port.
freeAnalogOutputPort(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Frees an analog output port.
freeAuto()
- Method in class edu.wpi.first.wpilibj.
SPI
Frees the automatic SPI transfer engine.
freeCounter(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Frees a counter.
freeCurrentAmps
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Current draw under no load.
freeDigitalPWM(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Frees the resource associated with a DO PWM generator.
freeDIOPort(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Frees a DIO port.
freeEncoder(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Frees an encoder.
freeFileLogger(long)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Free a native FileLogger.
freeMulticastServiceAnnouncer(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Frees a MulticastServiceAnnouncer.
freeMulticastServiceResolver(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Frees MulticastServiceResolver.
freePWMPort(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Frees a PWM port.
freeRelayPort(int)
- Static method in class edu.wpi.first.hal.
RelayJNI
Frees a relay port.
freeSimDevice(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Frees a simulated device.
freeSpeedRadPerSec
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Angular velocity under no load.
Frequency
- Interface in
edu.wpi.first.units.measure
FrequencyUnit
- Class in
edu.wpi.first.units
A unit of frequency like
Units.Hertz
.
fromBase(UnaryFunction)
- Method in class edu.wpi.first.units.
UnitBuilder
Sets the conversion function to transform values in the base unit to values in the derived
 unit.
fromBaseUnits(double)
- Method in class edu.wpi.first.units.
Unit
Converts a value in terms of base units to a value in terms of this unit.
fromCharacteristics(double, double, double)
- Static method in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
Constructs constraints for an ExponentialProfile from characteristics.
fromDegrees(double)
- Static method in class edu.wpi.first.math.geometry.
Rotation2d
Constructs and returns a Rotation2d with the given degree value.
fromFieldRelativeSpeeds(double, double, double, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided field-relative set of speeds into a robot-relative ChassisSpeeds
 object.
fromFieldRelativeSpeeds(ChassisSpeeds, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided field-relative ChassisSpeeds object into a robot-relative
 ChassisSpeeds object.
fromFieldRelativeSpeeds(LinearVelocity, LinearVelocity, AngularVelocity, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided field-relative set of speeds into a robot-relative ChassisSpeeds
 object.
fromHSV(int, int, int)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Creates a Color from HSV values.
fromNative(int, long, double)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL value from its native components.
fromPathweaverJson(String)
- Static method in class edu.wpi.first.math.jni.
TrajectoryUtilJNI
Loads a Pathweaver JSON.
fromPathweaverJson(Path)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryUtil
Imports a Trajectory from a JSON file exported from PathWeaver.
fromRadians(double)
- Static method in class edu.wpi.first.math.geometry.
Rotation2d
Constructs and returns a Rotation2d with the given radian value.
fromRobotRelativeSpeeds(double, double, double, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided robot-relative set of speeds into a field-relative ChassisSpeeds
 object.
fromRobotRelativeSpeeds(ChassisSpeeds, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided robot-relative ChassisSpeeds object into a field-relative
 ChassisSpeeds object.
fromRobotRelativeSpeeds(LinearVelocity, LinearVelocity, AngularVelocity, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Converts a user provided robot-relative set of speeds into a field-relative ChassisSpeeds
 object.
fromRotations(double)
- Static method in class edu.wpi.first.math.geometry.
Rotation2d
Constructs and returns a Rotation2d with the given number of rotations.
fromRotationVector(Vector<N3>)
- Static method in class edu.wpi.first.math.geometry.
Quaternion
Returns the quaternion representation of this rotation vector.
fromStateSpace(double, double, double)
- Static method in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
Constructs constraints for an ExponentialProfile from State-Space parameters.
fromString(String)
- Static method in enum class edu.wpi.first.util.struct.
StructFieldType
Get field type from string.
fromValue(int)
- Method in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
Gets a color order from an int value.
fromValue(int)
- Static method in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Gets a type from an int value.
fromValue(int)
- Static method in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Gets a state from an int value.
frontLeft
- Variable in class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Front-left wheel speed.
frontLeftMeters
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Distance measured by the front left wheel.
frontLeftMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Speed of the front left wheel.
frontLeftVoltage
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Voltage of the front left motor.
frontRight
- Variable in class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Front-right wheel speed.
frontRightMeters
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Distance measured by the front right wheel.
frontRightMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Speed of the front right wheel.
frontRightVoltage
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Voltage of the front right motor.
FunctionalCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that allows the user to pass in functions for each of the basic command methods through
 the constructor.
FunctionalCommand(Runnable, Runnable, Consumer<Boolean>, BooleanSupplier, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
FunctionalCommand
Creates a new FunctionalCommand.
fx
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Camera horizontal focal length, in pixels.
fy
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Camera vertical focal length, in pixels.
G
gameSpecificMessage
- Variable in class edu.wpi.first.hal.
MatchInfoData
Stores the game specific message.
genEnum(Class<E>)
- Static method in class edu.wpi.first.util.struct.
StructGenerator
Generates a
Struct
for the given
Enum
class.
generate16h5AprilTagImage(int)
- Static method in class edu.wpi.first.apriltag.
AprilTag
Generates a RawFrame containing the apriltag with the id with family 16h5 passed in.
generate16h5AprilTagImage(RawFrame, long, int)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Generates a RawFrame containing the apriltag with the id with family 16h5 passed in.
generate36h11AprilTagImage(int)
- Static method in class edu.wpi.first.apriltag.
AprilTag
Generates a RawFrame containing the apriltag with the id with family 36h11 passed in.
generate36h11AprilTagImage(RawFrame, long, int)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Generates a RawFrame containing the apriltag with the id with family 36h11 passed in.
generateTrajectory(Pose2d, List<Translation2d>, Pose2d, TrajectoryConfig)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Generates a trajectory from the given waypoints and config.
generateTrajectory(Spline.ControlVector, List<Translation2d>, Spline.ControlVector, TrajectoryConfig)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Generates a trajectory from the given control vectors and config.
generateTrajectory(TrajectoryGenerator.ControlVectorList, TrajectoryConfig)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Generates a trajectory from the given quintic control vectors and config.
generateTrajectory(List<Pose2d>, TrajectoryConfig)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Generates a trajectory from the given waypoints and config.
GenericEntry
- Interface in
edu.wpi.first.networktables
NetworkTables generic entry.
GenericHID
- Class in
edu.wpi.first.wpilibj
Handle input from standard HID devices connected to the Driver Station.
GenericHID(int)
- Constructor for class edu.wpi.first.wpilibj.
GenericHID
Construct an instance of a device.
GenericHID.HIDType
- Enum Class in
edu.wpi.first.wpilibj
USB HID interface type.
GenericHID.RumbleType
- Enum Class in
edu.wpi.first.wpilibj
Represents a rumble output on the Joystick.
GenericHIDSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated generic joystick.
GenericHIDSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Constructs from a joystick port number.
GenericHIDSim(GenericHID)
- Constructor for class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Constructs from a GenericHID object.
GenericMutableMeasureImpl
<
U
extends
Unit
> - Class in
edu.wpi.first.units.mutable
A generic implementation of a mutable measure.
GenericMutableMeasureImpl(double, double, U)
- Constructor for class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
Initializes the mutable measure with initial conditions.
genericPublish(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new publisher to the topic.
GenericPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables generic publisher.
genericPublishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new publisher to the topic, with type string and initial properties.
genericSubscribe(PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new subscriber to the topic.
genericSubscribe(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new subscriber to the topic.
GenericSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables generic subscriber.
genRecord(Class<R>)
- Static method in class edu.wpi.first.util.struct.
StructGenerator
Generates a
Struct
for the given
Record
class.
Geometry2D
- Class in
edu.wpi.first.math.proto
Geometry2D()
- Constructor for class edu.wpi.first.math.proto.
Geometry2D
Geometry2D.ProtobufEllipse2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufEllipse2d
Geometry2D.ProtobufPose2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufPose2d
Geometry2D.ProtobufRectangle2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufRectangle2d
Geometry2D.ProtobufRotation2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufRotation2d
Geometry2D.ProtobufTransform2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTransform2d
Geometry2D.ProtobufTranslation2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTranslation2d
Geometry2D.ProtobufTwist2d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTwist2d
Geometry3D
- Class in
edu.wpi.first.math.proto
Geometry3D()
- Constructor for class edu.wpi.first.math.proto.
Geometry3D
Geometry3D.ProtobufPose3d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufPose3d
Geometry3D.ProtobufQuaternion
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufQuaternion
Geometry3D.ProtobufRotation3d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufRotation3d
Geometry3D.ProtobufTransform3d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTransform3d
Geometry3D.ProtobufTranslation3d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTranslation3d
Geometry3D.ProtobufTwist3d
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTwist3d
get()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property value.
get()
- Method in class edu.wpi.first.hal.
SimBoolean
Gets the simulated value.
get()
- Method in class edu.wpi.first.hal.
SimDouble
Gets the simulated value.
get()
- Method in class edu.wpi.first.hal.
SimEnum
Gets the simulated value.
get()
- Method in class edu.wpi.first.hal.
SimInt
Gets the simulated value.
get()
- Method in class edu.wpi.first.hal.
SimLong
Gets the simulated value.
get()
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get the last published value.
get()
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the last published value.
get()
- Method in class edu.wpi.first.wpilibj.
Alert
Gets whether the alert is active.
get()
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
Get the encoder value.
get()
- Method in class edu.wpi.first.wpilibj.
AnalogPotentiometer
Get the current reading of the potentiometer.
get()
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
Get the state of the analog trigger output.
get()
- Method in class edu.wpi.first.wpilibj.
Counter
Read the current counter value.
get()
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Get the count.
get()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Get the value from a digital input channel.
get()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Gets the value being output from the Digital Output.
get()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Read the current value of the solenoid.
get()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Get the encoder value since the last reset.
get()
- Method in class edu.wpi.first.wpilibj.
Encoder
Gets the current count.
get()
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Common interface for getting the current set speed of a motor controller.
get()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
get()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Get the recently set value of the PWM.
get()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Get the recently set value of the PWM.
get()
- Method in class edu.wpi.first.wpilibj.
Relay
Get the Relay State.
get()
- Method in class edu.wpi.first.wpilibj.
Servo
Get the servo position.
get()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogEncoderSim
Get the simulated position.
get()
- Method in class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Check the value of the double solenoid output.
get()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Get the position in turns.
get()
- Method in class edu.wpi.first.wpilibj.
Solenoid
Read the current value of the solenoid.
get()
- Method in class edu.wpi.first.wpilibj.
Timer
Get the current time from the timer.
get()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
get(boolean)
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get the last published value.
get(boolean[])
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get the last published value.
get(byte[])
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get the last published value.
get(double)
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get the last published value.
get(double[])
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get the last published value.
get(float)
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get the last published value.
get(float[])
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get the last published value.
get(int)
- Method in class edu.wpi.first.math.
Vector
Returns an element of the vector at a specified row.
get(int)
- Method in class edu.wpi.first.util.
CircularBuffer
Get the element at the provided index relative to the start of the buffer.
get(int)
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Get the element at the provided index relative to the start of the buffer.
get(int, int)
- Method in class edu.wpi.first.math.
Matrix
Get an element of this matrix.
get(long)
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get the last published value.
get(long)
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Gets the value associated with the given key.
get(long[])
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get the last published value.
get(String)
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get the last published value.
get(String[])
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get the last published value.
get(K)
- Method in class edu.wpi.first.math.
InterpolatingMatrixTreeMap
Returns the value associated with a given key.
get(K)
- Method in class edu.wpi.first.math.interpolation.
InterpolatingTreeMap
Returns the value associated with a given key.
get(T)
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the last published value.
get(T)
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the last published value.
get(T[])
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get the last published value.
get5VRegulatedVoltage()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the current voltage of the regulated 5v supply.
get5VVoltage(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the current voltage of the regulated 5v supply.
getA()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix a = 4;
This method returns the internal storage object without modifying any has state.
getA()
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns the system matrix A.
getA(int, int)
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns an element of the system matrix A.
getAButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the A button on the controller.
getAButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the A button on the controller.
getAButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the A button was pressed since the last check.
getAButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the A button was pressed since the last check.
getAButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the A button was released since the last check.
getAButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the A button was released since the last check.
getAcceleration()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double acceleration = 3;
getAcceleration()
- Method in class edu.wpi.first.wpilibj.
AnalogAccelerometer
Return the acceleration in Gs.
getAcceleration(ADXL345_I2C.Axes)
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Get the acceleration of one axis in Gs.
getAcceleration(ADXL345_SPI.Axes)
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Get the acceleration of one axis in Gs.
getAcceleration(ADXL362.Axes)
- Method in class edu.wpi.first.wpilibj.
ADXL362
Get the acceleration of one axis in Gs.
getAccelerations()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Get the acceleration of all axes in Gs.
getAccelerations()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Get the acceleration of all axes in Gs.
getAccelerations()
- Method in class edu.wpi.first.wpilibj.
ADXL362
Get the acceleration of all axes in Gs.
getAccelerometerX()
- Static method in class edu.wpi.first.hal.
AccelerometerJNI
Gets the x-axis acceleration.
getAccelerometerY()
- Static method in class edu.wpi.first.hal.
AccelerometerJNI
Gets the y-axis acceleration.
getAccelerometerZ()
- Static method in class edu.wpi.first.hal.
AccelerometerJNI
Gets the z-axis acceleration.
getAccelX()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the acceleration in the X axis in meters per second squared.
getAccelX()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the acceleration in the X axis in meters per second squared.
getAccelY()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the acceleration in the Y axis in meters per second squared.
getAccelY()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the acceleration in the Y axis in meters per second squared.
getAccelZ()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the acceleration in the Z axis in meters per second squared.
getAccelZ()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the acceleration in the Z axis in meters per second squared.
getAccumulatedError()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the accumulated error used in the integral calculation of this controller.
getAccumulatedError()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the accumulated error used in the integral calculation of this controller.
getAccumulatorAverage()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the average of the accumulated value.
getAccumulatorCenter()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the accumulator center.
getAccumulatorCenter(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getAccumulatorCount()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Read the number of accumulated values.
getAccumulatorCount()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the accumulator count.
getAccumulatorCount()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the number of accumulated values.
getAccumulatorCount(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Read the number of accumulated values.
getAccumulatorCount(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getAccumulatorDeadband()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the accumulator deadband.
getAccumulatorDeadband(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getAccumulatorInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Check if the accumulator has been initialized.
getAccumulatorInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getAccumulatorIntegratedAverage()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the average of the integrated value.
getAccumulatorIntegratedValue()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the integrated value.
getAccumulatorLastValue()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the last value read by the accumulator engine.
getAccumulatorOutput(int, AccumulatorResult)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Read the accumulated value and the number of accumulated values atomically.
getAccumulatorOutput(AccumulatorResult)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Read the accumulated value and the number of accumulated values atomically.
getAccumulatorOutput(AccumulatorResult)
- Method in class edu.wpi.first.wpilibj.
SPI
Read the accumulated value and the number of accumulated values atomically.
getAccumulatorValue()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Read the accumulated value.
getAccumulatorValue()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the accumulator value.
getAccumulatorValue()
- Method in class edu.wpi.first.wpilibj.
SPI
Read the accumulated value.
getAccumulatorValue(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Read the accumulated value.
getAccumulatorValue(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getActive()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Check whether the accelerometer is active.
getActive()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Check whether the accelerometer is active.
getActive(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
getActive(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
getActiveButtonLoop()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Get the active button poll.
getActualDataRate()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the data rate (in bytes per second).
getActualFPS()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the actual FPS.
getAllCurrents()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query all currents of the PDP.
getAllCurrents(int, double[])
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the current of all channels on the PowerDistribution.
getAlliance()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the current alliance from the FMS.
getAllianceStation()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the current alliance station ID.
getAllianceStationId()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getAllianceStationId()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Get the alliance station ID (color + number).
getAllJoystickData(float[], byte[], short[], long[])
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Get all joystick data.
getAmbiguity()
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Get the ratio of pose reprojection errors, called ambiguity.
getAnalogAccumulator(int, AccumulatorResult)
- Method in class edu.wpi.first.hal.
DMAJNISample
getAnalogAverageBits(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the number of averaging bits.
getAnalogAverageValue(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets a sample from the output of the oversample and average engine for the channel.
getAnalogAverageVoltage(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets a scaled sample from the output of the oversample and average engine for the channel.
getAnalogGyroAngle(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Gets the gyro angle in degrees.
getAnalogGyroCenter(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Gets the calibrated gyro center.
getAnalogGyroOffset(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Gets the calibrated gyro offset.
getAnalogGyroRate(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Gets the gyro rate in degrees/second.
getAnalogInput()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Gets the analog input for the gyro.
getAnalogInput(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getAnalogInputAveraged(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getAnalogInputRaw(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns raw analog input value from DMA.
getAnalogInputVoltage(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns analog input voltage from DMA.
getAnalogLSBWeight(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the factory scaling least significant bit weight constant.
getAnalogOffset(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the factory scaling offset constant.
getAnalogOutput(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the current analog output value.
getAnalogOversampleBits(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the number of oversample bits.
getAnalogSampleRate()
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the current sample rate.
getAnalogTriggerFPGAIndex(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Get the FPGA index for the AnalogTrigger.
getAnalogTriggerInWindow(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Returns the InWindow output of the analog trigger.
getAnalogTriggerOutput(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets the state of the analog trigger output.
getAnalogTriggerTriggerState(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Returns the TriggerState output of the analog trigger.
getAnalogTriggerTypeForRouting()
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
getAnalogTriggerTypeForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Get the analog trigger type.
getAnalogTriggerTypeForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Get the analog trigger type.
getAnalogTriggerTypeForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalSource
If this is an analog trigger.
getAnalogValue(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets a sample straight from the channel on this module.
getAnalogValueToVolts(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Get the analog voltage from a raw value.
getAnalogVoltage()
- Method in class edu.wpi.first.wpilibj.
Compressor
If supported by the device, returns the analog input voltage (on channel 0).
getAnalogVoltage(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Gets a scaled sample straight from the channel on this module.
getAnalogVoltage(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the raw voltage of the specified analog input channel.
getAnalogVoltage(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
If supported by the device, returns the raw voltage of the specified analog input channel.
getAnalogVoltage(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Unsupported by the CTRE PCM.
getAnalogVoltage(int, int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the raw voltage of the specified analog input channel.
getAnalogVoltsToValue(int, double)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Converts a voltage to a raw value for a specified channel.
getAndymark9015(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Andymark 9015 motors.
getAndymarkRs775_125(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Andymark RS775-125 motors.
getAngle()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the angle in radians in the axis-angle representation of this rotation.
getAngle()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the angle this translation forms with the positive X axis.
getAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional .wpi.proto.ProtobufRotation2d angle = 2;
This method returns the internal storage object without modifying any has state.
getAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional .wpi.proto.ProtobufRotation2d angle = 2;
This method returns the internal storage object without modifying any has state.
getAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the yaw axis angle in degrees (CCW positive).
getAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the Yaw axis angle in degrees (CCW positive).
getAngle()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Return the heading of the robot in degrees.
getAngle()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Return the heading of the robot in degrees.
getAngle()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Return the actual angle in degrees that the robot is currently facing.
getAngle()
- Method in class edu.wpi.first.wpilibj.
Servo
Get the servo angle.
getAngle()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Get the current angle of the gyro.
getAngle()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Get the ligament's angle relative to its parent.
getAngle()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Return the actual angle in degrees that the robot is currently facing.
getAngle()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPServo
Get the servo angle.
getAngle(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
getAngle(ADIS16470_IMU.IMUAxis)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the axis angle in degrees (CCW positive).
getAngleRads()
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns the current arm angle.
getAngleX()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the currently reported angle around the X-axis.
getAngleX()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the currently reported angle around the X-axis.
getAngleY()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the currently reported angle around the X-axis.
getAngleY()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the currently reported angle around the X-axis.
getAngleZ()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the currently reported angle around the Z-axis.
getAngleZ()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the currently reported angle around the Z-axis.
getAngularAcceleration()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's acceleration.
getAngularAcceleration()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's acceleration.
getAngularAccelerationRadPerSecSq()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's acceleration in Radians Per Second Squared.
getAngularAccelerationRadPerSecSq()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's acceleration in Radians Per Second Squared.
getAngularPosition()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's position.
getAngularPositionRad()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's position.
getAngularPositionRotations()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's position in rotations.
getAngularVelocity()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's velocity.
getAngularVelocity()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's velocity.
getAngularVelocityRadPerSec()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's velocity.
getAngularVelocityRadPerSec()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's velocity in Radians Per Second.
getAngularVelocityRPM()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's velocity in RPM.
getAngularVelocityRPM()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's velocity in RPM.
getArraySize()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the array size.
getAsBoolean()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
getAsBoolean()
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Returns the state of this signal (high or low) as of the last loop poll.
getAsBoolean()
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
getAsDouble()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
getAsFloat()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
getAsFloat()
- Method in interface edu.wpi.first.util.function.
FloatSupplier
Gets a result.
getAsLong()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
getAtomic()
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the last published value along with its timestamp.
getAtomic()
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the stored default value and a
 timestamp of 0.
getAtomic()
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get the last published value along with its timestamp.
getAtomic()
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the last published value along with its timestamp.
getAtomic(boolean)
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(boolean[])
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(byte[])
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(double)
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(double[])
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(float)
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(float[])
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(long)
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(long[])
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(String)
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(String[])
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get the last published value along with its timestamp
 If no value has been published, returns the passed defaultValue and a
 timestamp of 0.
getAtomic(T)
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the last published value along with its timestamp.
getAtomic(T)
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the last published value along with its timestamp If no value has been published or the
 value cannot be unpacked, returns the passed defaultValue and a timestamp of 0.
getAtomic(T[])
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get the last published value along with its timestamp.
getAtomicBoolean(int, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic Boolean.
getAtomicBooleanArray(int, boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic BooleanArray.
getAtomicDouble(int, double)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic Double.
getAtomicDoubleArray(int, double[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic DoubleArray.
getAtomicFloat(int, float)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic Float.
getAtomicFloatArray(int, float[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic FloatArray.
getAtomicInteger(int, long)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic Integer.
getAtomicIntegerArray(int, long[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic IntegerArray.
getAtomicRaw(int, byte[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic Raw.
getAtomicString(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic String.
getAtomicStringArray(int, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns timestamped topic value as an atomic StringArray.
getAutoDroppedCount()
- Method in class edu.wpi.first.wpilibj.
SPI
Get the number of bytes dropped by the automatic SPI transfer engine due to the receive buffer
 being full.
getAutonomous()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the Autonomous mode flag.
getAutonomous()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getAutonomous()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if the DS is in autonomous.
getAverageBits()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get the number of averaging bits.
getAverageBits()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the number of average bits.
getAverageBits(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getAveragedAnalogInputRaw(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns averaged raw analog input value from DMA.
getAveragedAnalogInputVoltage(AnalogInput)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns averaged analog input voltage from DMA.
getAverageValue()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get a sample from the output of the oversample and average engine for this channel.
getAverageVoltage()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get a scaled sample from the output of the oversample and average engine for this channel.
getAxis()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the axis in the axis-angle representation of this rotation.
getAxisCount()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the number of axes for the HID.
getAxisType(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the axis type of the provided joystick axis.
getB()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix b = 5;
This method returns the internal storage object without modifying any has state.
getB()
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns the input matrix B.
getB(int, int)
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns an element of the input matrix B.
getBackButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the back button on the controller.
getBackButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the back button was pressed since the last check.
getBackButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the back button was released since the last check.
getBackendKind()
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
getBackendKind()
- Method in interface edu.wpi.first.networktables.
NTSendableBuilder
getBackendKind()
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Gets the kind of backend being used.
getBag(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Bag motors.
getBanebotsRs550(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Banebots RS 550 motors.
getBanebotsRs775(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Banebots RS775 motors.
getBarometricPressure()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the barometric pressure in PSI.
getBaseUnit()
- Method in class edu.wpi.first.units.
AngleUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
AngularMomentumUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
AngularVelocityUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
CurrentUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
DimensionlessUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
DistanceUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
EnergyUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
ForceUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
FrequencyUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
LinearMomentumUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
LinearVelocityUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
MassUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
MultUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
PerUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
PowerUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
ResistanceUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
TemperatureUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
TimeUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
TorqueUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
Unit
Gets the base unit of measurement that this unit is derived from.
getBaseUnit()
- Method in class edu.wpi.first.units.
VelocityUnit
getBaseUnit()
- Method in class edu.wpi.first.units.
VoltageUnit
getBatteryVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the battery voltage.
getBButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the B button on the controller.
getBButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the B button on the controller.
getBButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the B button was pressed since the last check.
getBButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the B button was pressed since the last check.
getBButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the B button was released since the last check.
getBButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the B button was released since the last check.
getBitMask()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the bit mask for the field.
getBitShift()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the bit shift for the field (LSB=0).
getBitWidth()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the bit width of the field, in bits.
getBlue(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Gets the blue channel of the color at the specified index.
getBlue(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getBlue(int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the blue channel of the color at the specified index.
getBoolean()
- Method in class edu.wpi.first.hal.
HALValue
Get the value as a boolean.
getBoolean()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the boolean value.
getBoolean()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a boolean.
getBoolean(boolean)
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean.
getBoolean(boolean)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean.
getBoolean(int, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getBoolean(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the boolean at the given key.
getBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the boolean the key maps to.
getBooleanArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the boolean[] value.
getBooleanArray()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a boolean array.
getBooleanArray(boolean[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean[].
getBooleanArray(boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean[].
getBooleanArray(int, boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getBooleanArray(Boolean[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean array.
getBooleanArray(Boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean array.
getBooleanArray(String, boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the boolean array the key maps to.
getBooleanArray(String, Boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the boolean array the key maps to.
getBooleanArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get boolean[] topic.
getBooleanArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get boolean[] topic.
getBooleanTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get boolean topic.
getBooleanTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get boolean topic.
getBoolField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a boolean field.
getBoolField(StructFieldDescriptor, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a boolean field.
getBoundsMicroseconds()
- Method in class edu.wpi.first.wpilibj.
PWM
Gets the bounds on the PWM pulse widths.
getBreakerFault(int)
- Method in class edu.wpi.first.hal.
PowerDistributionFaults
Gets whether there is a breaker fault at the specified channel.
getBreakerFault(int)
- Method in class edu.wpi.first.hal.
PowerDistributionStickyFaults
Gets whether there is a sticky breaker fault at the specified channel.
getBrightness()
- Method in class edu.wpi.first.cscore.
VideoCamera
Get the brightness, as a percentage (0-100).
getBrownedOut()
- Static method in class edu.wpi.first.hal.
HAL
Gets if the system is in a browned out state.
getBrownoutVoltage()
- Static method in class edu.wpi.first.hal.
PowerJNI
Get the current brownout voltage setting.
getBrownoutVoltage()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getBrownoutVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current brownout voltage setting.
getBrownoutVoltage()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the Brownout voltage.
getBuffer()
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the serialized backing data buffer.
getButtonAPressed()
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Gets if the A button is pressed.
getButtonBPressed()
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Gets if the B button is pressed.
getButtonCount()
- Method in class edu.wpi.first.wpilibj.
GenericHID
For the current HID, return the number of buttons.
getButtonCPressed()
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Gets if the C button is pressed.
getBytesReceived()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Get the number of bytes currently available to read from the serial port.
getC()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix c = 6;
This method returns the internal storage object without modifying any has state.
getC()
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns the output matrix C.
getC(int, int)
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns an element of the output matrix C.
getCameraBrightness(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns camera brightness.
getCameraServerShared()
- Static method in class edu.wpi.first.cameraserver.
CameraServerSharedStore
Get the CameraServerShared object.
getCANPacketBaseTime()
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Reads the current value of the millisecond-resolution timer that the CAN API functions use as a
 time base.
getCANStatus()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current status of the CAN bus.
getCANStatus(CANStatus)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Retrieves the current status of the CAN bus.
getCaptureSize()
- Method in class edu.wpi.first.hal.
DMAJNISample
getCaptureSize()
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns the DMA sample capture size.
getCenter()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the center of the ellipse.
getCenter()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the center of the rectangle.
getCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional .wpi.proto.ProtobufPose2d center = 1;
This method returns the internal storage object without modifying any has state.
getCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional .wpi.proto.ProtobufPose2d center = 1;
This method returns the internal storage object without modifying any has state.
getCenter()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Return the gyro center value set during calibration to use as a future preset.
getCenterX()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the center of the detection in image pixel coordinates.
getCenterY()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the center of the detection in image pixel coordinates.
getChannel()
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
Get the channel number.
getChannel()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get the channel number.
getChannel()
- Method in class edu.wpi.first.wpilibj.
AnalogOutput
Get the channel of this AnalogOutput.
getChannel()
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
getChannel()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Get the channel of the digital input.
getChannel()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Get the GPIO channel number that this object represents.
getChannel()
- Method in class edu.wpi.first.wpilibj.
DigitalSource
The DigitalSource channel.
getChannel()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Gets the channel number associated with the object.
getChannel()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Gets the PWM channel number.
getChannel()
- Method in class edu.wpi.first.wpilibj.
PWM
Gets the channel number associated with the PWM Object.
getChannel()
- Method in class edu.wpi.first.wpilibj.
Relay
Get the channel number.
getChannel()
- Method in class edu.wpi.first.wpilibj.
SharpIR
Get the analog input channel number.
getChannel()
- Method in class edu.wpi.first.wpilibj.
Solenoid
Get the channel this solenoid is connected to.
getChannelCurrent(int, int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the current of a specific PowerDistribution channel.
getChannelCurrentNoError(int, int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the current of a specific PowerDistribution channel without throwing any errors.
getChannelFault(int)
- Method in class edu.wpi.first.hal.
REVPHFaults
Gets whether there is a fault at the specified channel.
getChoices()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns the possible values for the enum property value.
getCIM(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of CIM motors.
getCircleButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the circle button on the controller.
getCircleButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the circle button on the controller.
getCircleButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the circle button was pressed since the last check.
getCircleButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the circle button was pressed since the last check.
getCircleButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the circle button was released since the last check.
getCircleButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the circle button was released since the last check.
getClampFunction()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Get the function used to clamp the input u.
getClosedLoopControl(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Get whether the PCM closed loop control is enabled.
getClosedLoopEnabled()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Check whether the closed loop compressor control is active.
getClosedLoopEnabled(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getCoefficients()
- Method in class edu.wpi.first.math.spline.
CubicHermiteSpline
Returns the coefficients matrix.
getCoefficients()
- Method in class edu.wpi.first.math.spline.
QuinticHermiteSpline
Returns the coefficients matrix.
getCoefficients()
- Method in class edu.wpi.first.math.spline.
Spline
Returns the coefficients of the spline.
getColor()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Get the ligament color.
getComments()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the comments from the roboRIO web interface.
getComments()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getComments()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Return the comments from the roboRIO web interface.
getComments()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the comments string.
getCommsDisableCount()
- Static method in class edu.wpi.first.hal.
HAL
Gets the number of times the system has been disabled due to communication errors with the
 Driver Station.
getCommsDisableCount()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Gets the number of times the system has been disabled due to communication errors with the
 Driver Station.
getComponents()
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Gets the components that are direct children of this container.
getComponents()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
getComponents()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
getCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getCompressor()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Returns whether the compressor is active or not.
getCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getCompressor(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Get whether compressor is turned on.
getCompressor(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Get whether compressor is turned on.
getCompressorConfig(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Get compressor configuration from the PH.
getCompressorConfigType()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getCompressorConfigType()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Returns the active compressor configuration.
getCompressorConfigType()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getCompressorConfigType()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
Check whether the closed loop compressor control is active.
getCompressorConfigType(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getCompressorCurrent()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getCompressorCurrent()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Returns the current drawn by the compressor in amps.
getCompressorCurrent()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getCompressorCurrent()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
getCompressorCurrent()
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Read the compressor current.
getCompressorCurrent()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
getCompressorCurrent(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns the current drawn by the compressor.
getCompressorCurrent(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the current drawn by the compressor.
getCompressorCurrent(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getCompressorCurrent(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getCompressorCurrentTooHighFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Return whether the compressor current is currently too high.
getCompressorCurrentTooHighFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Return whether the compressor current is currently too high.
getCompressorCurrentTooHighStickyFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the compressor current has been too high since sticky faults were last cleared.
getCompressorCurrentTooHighStickyFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the compressor current has been too high since sticky faults were last cleared.
getCompressorNotConnectedFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the compressor is currently disconnected.
getCompressorNotConnectedFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the compressor is currently disconnected.
getCompressorNotConnectedStickyFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the compressor has been disconnected since sticky faults were last cleared.
getCompressorNotConnectedStickyFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the compressor has been disconnected since sticky faults were last cleared.
getCompressorOn()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
getCompressorOn()
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Check if the compressor is on.
getCompressorOn()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
getCompressorOn(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getCompressorOn(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getCompressorShortedFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the compressor is currently shorted.
getCompressorShortedFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the compressor is currently shorted.
getCompressorShortedStickyFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the compressor has been shorted since sticky faults were last cleared.
getCompressorShortedStickyFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the compressor has been shorted since sticky faults were last cleared.
getConfig()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Gets detector configuration.
getConfig()
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Gets estimator configuration.
getConfigJson()
- Method in class edu.wpi.first.cscore.
VideoSink
Get a JSON configuration string.
getConfigJson()
- Method in class edu.wpi.first.cscore.
VideoSource
Get a JSON configuration string.
getConfigType()
- Method in class edu.wpi.first.wpilibj.
Compressor
Returns the active compressor configuration.
getConnected()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Get if the encoder is connected.
getConnections()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Gets information on the currently established network connections.
getConnections(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Gets information on the currently established network connections.
getConstraints()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Get the velocity and acceleration constraints for this controller.
getConstraints()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns the user-defined constraints of the trajectory.
getController()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Return the controller used internally.
getController()
- Method in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
Returns the PIDController used by the command.
getController()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Returns the PIDController.
getController()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Returns the ProfiledPIDController used by the command.
getController()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Returns the ProfiledPIDController.
getControlWord(ControlWord)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the current control word of the driver station.
getConverterFromBase()
- Method in class edu.wpi.first.units.
Unit
Gets the conversion function used to convert values to terms of this unit.
getConverterToBase()
- Method in class edu.wpi.first.units.
Unit
Gets the conversion function used to convert values to base unit terms.
getCorners()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the corners of the tag in image pixel coordinates.
getCornerX(int)
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets a corner of the tag in image pixel coordinates.
getCornerY(int)
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets a corner of the tag in image pixel coordinates.
getCos()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the cosine of the Rotation2d.
getCount()
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
Gets the current count.
getCount()
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
Gets the current count.
getCount()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Read the count of the encoder.
getCount(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getCounter(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Reads the current counter value.
getCounter(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getCounter(Counter)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns counter value from DMA.
getCounterDirection(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Gets the last direction the counter value changed.
getCounterPeriod(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Gets the Period of the most recent count.
getCounterPeriod(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getCounterPeriod(Counter)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns counter period from DMA.
getCounterSamplesToAverage(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Gets the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
getCounterStopped(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Determines if the clock is stopped.
getCPUTemp()
- Static method in class edu.wpi.first.hal.
PowerJNI
Get the current CPU temperature in degrees Celsius.
getCPUTemp()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getCPUTemp()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current CPU temperature in degrees Celsius.
getCPUTemp()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the cpu temp.
getCreateButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the create button on the controller.
getCreateButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the create button was pressed since the last check.
getCreateButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the create button was released since the last check.
getCrossButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the cross button on the controller.
getCrossButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the cross button on the controller.
getCrossButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the cross button was pressed since the last check.
getCrossButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the cross button was pressed since the last check.
getCrossButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the cross button was released since the last check.
getCrossButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the cross button was released since the last check.
getCubicControlVectorsFromWaypoints(Pose2d, Translation2d[], Pose2d)
- Static method in class edu.wpi.first.math.spline.
SplineHelper
Returns 2 cubic control vectors from a set of exterior waypoints and interior translations.
getCubicSplinesFromControlVectors(Spline.ControlVector, Translation2d[], Spline.ControlVector)
- Static method in class edu.wpi.first.math.spline.
SplineHelper
Returns a set of cubic splines corresponding to the provided control vectors.
getCurrent()
- Method in class edu.wpi.first.wpilibj.
Compressor
Get the current drawn by the compressor.
getCurrent(double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Calculate current drawn by motor for a given torque.
getCurrent(double, double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Calculate current drawn by motor with given speed and input voltage.
getCurrent(int)
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the current of a single channel of the PDP/PDH.
getCurrent(int)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Read the current in one of the PDP channels.
getCurrent(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
getCurrent3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output of the 3.3V rail.
getCurrent5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output of the 5V rail.
getCurrent6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output of the 6V rail.
getCurrentCommand()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Returns the command currently running on this subsystem.
getCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's current draw.
getCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the current draw of the drivetrain.
getCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns the elevator current draw.
getCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's current draw.
getCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns the arm current draw.
getCurrentGearing()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the drivetrain gearing.
getCurrentThreadIsRealTime()
- Static method in class edu.wpi.first.hal.
ThreadsJNI
Gets the real-time status for the current thread.
getCurrentThreadIsRealTime()
- Static method in class edu.wpi.first.wpilibj.
Threads
Get if the current thread is real-time.
getCurrentThreadPriority()
- Static method in class edu.wpi.first.hal.
ThreadsJNI
Gets the thread priority for the current thread.
getCurrentThreadPriority()
- Static method in class edu.wpi.first.wpilibj.
Threads
Get the thread priority for the current thread.
getCurvature()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double curvature = 5;
getD()
- Method in class edu.wpi.first.math.controller.
PIDController
Get the Differential coefficient.
getD()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Gets the differential coefficient.
getD()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix d = 7;
This method returns the internal storage object without modifying any has state.
getD()
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns the feedthrough matrix D.
getD(int, int)
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns an element of the feedthrough matrix D.
getData()
- Method in class edu.wpi.first.math.
Matrix
Returns the row major data of this matrix as a double array.
getData()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
This method returns the internal storage object without modifying any has state.
getData()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
Returns multicast service resolver data.
getData()
- Method in class edu.wpi.first.util.
RawFrame
Get a ByteBuffer pointing to the frame data.
getData()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Get the LED data.
getData(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
getData(Sendable, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Gets arbitrary data associated with an object in the registry.
getData(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the value at the specified key.
getDataHandle()
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Gets a unique handle for setting/getting data with setData() and getData().
getDataPtr()
- Method in class edu.wpi.first.util.
RawFrame
Get a long (is a uint8_t* in native code) pointing to the frame data.
getDebounceTime()
- Method in class edu.wpi.first.math.filter.
Debouncer
Gets the time to debounce.
getDebounceType()
- Method in class edu.wpi.first.math.filter.
Debouncer
Gets the debounce type.
getDecisionMargin()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets a measure of the quality of the binary decoding process: the average difference between
 the intensity of a data bit versus the decision threshold.
getDecodingScaleFactor()
- Method in class edu.wpi.first.wpilibj.
Encoder
Gets the decoding scale factor for scaling raw values to full counts.
getDefault()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property default value.
getDefault()
- Static method in class edu.wpi.first.networktables.
NetworkTableInstance
Get global default instance.
getDefaultButtonLoop()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Get the default button poll.
getDefaultCommand()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Gets the default command for this subsystem.
getDefaultCommand(Subsystem)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Gets the default command associated with this subsystem.
getDefaultCTREPCMModule()
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Get the number of the default solenoid module.
getDefaultExtractionRoot()
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Gets the default extraction root location (~/.wpilib/nativecache) for use if
 setExtractionDirectory is not set.
getDefaultForType(PneumaticsModuleType)
- Static method in interface edu.wpi.first.wpilibj.
PneumaticsBase
For internal use to get the default for a specific type.
getDefaultInstance()
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns default instance handle.
getDefaultREVPHModule()
- Static method in class edu.wpi.first.wpilibj.
SensorUtil
Get the number of the default solenoid module.
getDegrees()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the degree value of the Rotation2d.
getDeployDirectory()
- Static method in class edu.wpi.first.wpilibj.
Filesystem
Obtains the 'deploy' directory of the program, located at src/main/deploy, which is deployed by
 default.
getDescription()
- Method in class edu.wpi.first.cscore.
VideoSink
Get the sink description.
getDescription()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the source description.
getDescription()
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
getDescription()
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
getDescription()
- Method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
getDescription()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
getDescription()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
getDescription()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Returns a description to print when an error occurs.
getDescription()
- Method in class edu.wpi.first.wpilibj.
Relay
getDescriptor()
- Method in class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
getDescriptor()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
getDescriptor()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
getDescriptor()
- Method in class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
getDescriptor()
- Method in class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Twist2dProto
getDescriptor()
- Method in class edu.wpi.first.math.geometry.proto.
Twist3dProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
getDescriptor()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
getDescriptor()
- Method in class edu.wpi.first.math.proto.
MatrixProto
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Plant
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Spline
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
System
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Trajectory
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
getDescriptor()
- Method in class edu.wpi.first.math.proto.
VectorProto
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Wpimath
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
getDescriptor()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
getDescriptor()
- Method in class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
getDescriptor()
- Method in class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
getDescriptor()
- Method in class edu.wpi.first.math.system.plant.proto.
DCMotorProto
getDescriptor()
- Method in class edu.wpi.first.math.system.proto.
LinearSystemProto
getDescriptor()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
getDescriptor()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
getDescriptor()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Gets the protobuf descriptor.
getDescriptor()
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the struct descriptor.
getDetectorConfig(long)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Gets the detector engine configuration.
getDetectorQTP(long)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Gets the detector engine quad threshold parameters.
getDeviceAddress()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Returns the I2C device address.
getDeviceAddress()
- Method in class edu.wpi.first.wpilibj.
I2C
Returns I2C device address.
getDigitalSource(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getDigitalSource(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns digital source value from DMA.
getDIO(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Reads a digital value from a DIO channel.
getDIODirection(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Reads the direction of a DIO channel.
getDirection()
- Method in class edu.wpi.first.wpilibj.
Counter
The last direction the counter value changed.
getDirection()
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Determine which direction the counter is going.
getDirection()
- Method in class edu.wpi.first.wpilibj.
Encoder
The last direction the encoder value changed.
getDirection()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the direction of the encoder.
getDirection(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getDirectionDegrees()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the direction of the vector formed by the joystick and its origin in degrees.
getDirectionDegrees()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the direction of the vector formed by the joystick and its origin in degrees.
getDirectionRadians()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the direction of the vector formed by the joystick and its origin in radians.
getDirectionRadians()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the direction of the vector formed by the joystick and its origin in radians.
getDirectMat()
- Method in class edu.wpi.first.cscore.
CvSink
Get the direct backing mat for this sink.
getDistance()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional double distance = 1;
getDistance()
- Method in class edu.wpi.first.wpilibj.
Counter
Read the current scaled counter value.
getDistance()
- Method in class edu.wpi.first.wpilibj.
Encoder
Get the distance the robot has driven since the last reset as scaled by the value from
Encoder.setDistancePerPulse(double)
.
getDistance()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Read the distance of the encoder.
getDistance(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getDistance(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the distance between the perimeter of the ellipse and the point.
getDistance(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the distance between the perimeter of the rectangle and the point.
getDistance(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Calculates the distance between two translations in 2D space.
getDistance(Translation3d)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Calculates the distance between two translations in 3D space.
getDistanceInches()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPRangefinder
Get the measured distance in inches.
getDistanceMeters()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPRangefinder
Get the measured distance in meters.
getDistancePerPulse()
- Method in class edu.wpi.first.wpilibj.
Encoder
Get the distance per pulse for this encoder.
getDistancePerPulse()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the distance per pulse value.
getDistancePerPulse(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getDouble()
- Method in class edu.wpi.first.hal.
HALValue
Get the value as a double.
getDouble()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the double value.
getDouble()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a double.
getDouble(double)
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a double.
getDouble(double)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a double.
getDouble(int, double)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getDouble(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getDouble(String, double)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the double at the given key.
getDoubleArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the double[] value.
getDoubleArray()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a double array.
getDoubleArray(double[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a double[].
getDoubleArray(double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a double[].
getDoubleArray(int, double[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getDoubleArray(Double[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean array.
getDoubleArray(Double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean array.
getDoubleArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get double[] topic.
getDoubleArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get double[] topic.
getDoubleBuffer()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a double array.
getDoubleField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a double field.
getDoubleField(StructFieldDescriptor, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a double field.
getDoubleTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get double topic.
getDoubleTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get double topic.
getDsAttached()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getDsAttached()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if the DS is attached.
getDSAttached()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the DS attached flag.
getDt()
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Returns the period in seconds.
getDt()
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Returns the period in seconds.
getDt()
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Returns the period in seconds.
getDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double dt = 5;
getDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double dt = 5;
getDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double dt = 4;
getDtheta()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dtheta = 3;
getDutyCycle()
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Read the duty cycle value.
getDutyCycle(int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
getDutyCycleOutput(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getDutyCycleOutput(DutyCycle)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns duty cycle output (0-1) from DMA.
getDutyCycleOutputRaw(DutyCycle)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns raw duty cycle output from DMA.
getDx()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dx = 1;
getDx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dx = 1;
getDy()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dy = 2;
getDy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dy = 2;
getDynamics(Matrix<N7, N1>, Matrix<N2, N1>)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
The differential drive dynamics function.
getDz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dz = 3;
getEchoChannel()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Returns the echo channel.
getEdgesPerRevolution()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the number of edges per revolution.
getEllipsesButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the ellipses button on the controller.
getEllipsesButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the ellipses button was pressed since the last check.
getEllipsesButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the ellipses button was released since the last check.
getEnabled()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the Enabled flag.
getEnabled()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getEnabled()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if the DS is enabled.
getEnabled3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the enabled state of the 3.3V rail.
getEnabled5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the enabled state of the 5V rail.
getEnabled6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the enabled state of the 6V rail.
getEncoder(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getEncoder(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the current counts of the encoder after encoding type scaling.
getEncoderDecodingScaleFactor(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the decoding scale factor of the encoder.
getEncoderDirection(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the last direction the encoder value changed.
getEncoderDistance(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the current distance traveled by the encoder.
getEncoderDistance(Encoder)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns encoder distance from DMA.
getEncoderDistancePerPulse(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the user set distance per pulse of the encoder.
getEncoderEncodingScale(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the encoder scale value.
getEncoderEncodingType(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the encoding type of the encoder.
getEncoderFPGAIndex(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the FPGA index of the encoder.
getEncoderPeriod(int)
- Method in class edu.wpi.first.hal.
DMAJNISample
getEncoderPeriod(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the Period of the most recent count.
getEncoderPeriodRaw(Encoder)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns raw encoder period from DMA.
getEncoderRate(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the current rate of the encoder.
getEncoderRaw(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the raw counts of the encoder.
getEncoderRaw(Encoder)
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns raw encoder value from DMA.
getEncoderSamplesToAverage(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the current samples to average value.
getEncoderStopped(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Determines if the clock is stopped.
getEncodingScale()
- Method in class edu.wpi.first.wpilibj.
Encoder
Used to divide raw edge counts down to spec'd counts.
getEncodingScaleFactor(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Gets the encoder scale value.
getEndVelocity()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns the starting velocity of the trajectory.
getEntry()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Gets the entry ID.
getEntry()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SimpleWidget
Gets the NetworkTable entry that contains the data for this widget.
getEntry(boolean[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new entry for the topic.
getEntry(boolean, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new entry for the topic.
getEntry(double[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new entry for the topic.
getEntry(double, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new entry for the topic.
getEntry(float[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new entry for the topic.
getEntry(float, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new entry for the topic.
getEntry(int, int, String, PubSubOption...)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry handle.
getEntry(int, int, String, PubSubOptions)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry handle.
getEntry(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry handle.
getEntry(long[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new entry for the topic.
getEntry(long, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new entry for the topic.
getEntry(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets the entry for a sub key.
getEntry(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Gets the entry for a key.
getEntry(String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SimpleWidget
Gets the NetworkTable entry that contains the data for this widget.
getEntry(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Gets the entry for the specified key.
getEntry(String[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new entry for the topic.
getEntry(String, byte[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
RawTopic
Create a new entry for the topic.
getEntry(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new entry for the topic.
getEntry(T[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructArrayTopic
Create a new entry for the topic.
getEntry(T, PubSubOption...)
- Method in class edu.wpi.first.networktables.
ProtobufTopic
Create a new entry for the topic.
getEntry(T, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructTopic
Create a new entry for the topic.
getEntryEx(String, boolean[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, boolean, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, double[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, double, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, float[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, float, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, long[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, long, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, String[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new entry for the topic, with specified type string.
getEntryEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new entry for the topic, with specified type string.
getEntryFlags(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns entry flags.
getEntryLastChange(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry last change time in microseconds.
getEntryName(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry name.
getEnum(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getEnumOptions(SimEnum)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get all options for the given enum.
getEnumPropertyChoices(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns enum of possible property value strings.
getEnumValues()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the enumerated values.
getError()
- Method in class edu.wpi.first.cscore.
ImageSink
Get error string.
getError()
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the current error.
getError()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the difference between the setpoint and the measurement.
getError()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns difference between reference r and current state x-hat.
getError(int)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns difference between reference r and current state x-hat.
getErrorDerivative()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the error derivative.
getErrorDerivativeTolerance()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the error derivative tolerance of this controller.
getErrorTolerance()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the error tolerance of this controller.
getEstimatedPosition()
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Gets the estimated robot pose.
getEstimatedPosition()
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Gets the estimated robot pose.
getEStop()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the E-Stop flag.
getEStop()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getEStop()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if eStop has been activated.
getEventHandle()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
Returns event handle.
getEventName()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the event name from the FMS.
getExpiration()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Retrieve the timeout value for the corresponding motor safety object.
getExtractionDirectory()
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Returns library extraction directory.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.cscore.
OpenCvLoader.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.hal.
JNIWrapper.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.math.jni.
WPIMathJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.net.
WPINetJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtractOnStaticLoad()
- Static method in class edu.wpi.first.util.
WPIUtilJNI.Helper
Returns true if the JNI should be loaded in the static block.
getExtraHeader()
- Method in class edu.wpi.first.util.datalog.
DataLogReader
Gets the extra header data.
getFactory()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
getFactory()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
getFactory()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
getFactory()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
getFactory()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
getFactory()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
getFactory()
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
getFactory()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
getFactory()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
getFactory()
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
getFactory()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
getFactory()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
getFactory()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
getFactory()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
getFalcon500(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Falcon 500 motors.
getFalcon500Foc(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Falcon 500 motors with FOC (Field-Oriented Control) enabled.
getFallingTimestamp()
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Get the timestamp of the last falling edge.
getFallingTimestamp()
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Get the timestamp of the last falling edge.
getFamily()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the decoded tag's family name.
getFaultCount3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the count of the total current faults on the 3.3V rail since the code started.
getFaultCount5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the count of the total current faults on the 5V rail since the code started.
getFaultCount6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the count of the total current faults on the 6V rail since the code started.
getFaults()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the faults currently active on this device.
getFaults()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Returns the power distribution faults.
getFaults(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Get the current faults of the PowerDistribution.
getFaults(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the faults currently active on the PH.
getFaultsNative(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Get the current faults of the PowerDistribution.
getFaultsNative(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the faults currently active on the PH.
getFeedforward()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Return the feedforward used internally.
getField()
- Method in exception edu.wpi.first.util.struct.
BadSchemaException
Gets the name of the bad schema field.
getFieldLength()
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Returns the length of the field the layout is representing in meters.
getFields()
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Gets all field descriptors.
getFieldWidth()
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Returns the length of the field the layout is representing in meters.
getFileExtension()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Get the file extension for the current system.
getFilePrefix()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Get the file prefix for the current system.
getFilterIndex()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Read the filter index.
getFilterIndex(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
getFilterPeriod(int)
- Static method in class edu.wpi.first.hal.
DigitalGlitchFilterJNI
Gets the filter period for the specified filter index.
getFilterSelect(int)
- Static method in class edu.wpi.first.hal.
DigitalGlitchFilterJNI
Reads the filter index from the FPGA.
getFinalControlVector()
- Method in class edu.wpi.first.math.spline.
CubicHermiteSpline
Returns the final control vector that created this spline.
getFinalControlVector()
- Method in class edu.wpi.first.math.spline.
QuinticHermiteSpline
Returns the final control vector that created this spline.
getFinalControlVector()
- Method in class edu.wpi.first.math.spline.
Spline
Returns the final control vector that created this spline.
getFinishEntry()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a finish control record.
getFirst()
- Method in class edu.wpi.first.math.
Pair
Returns the first object.
getFirst()
- Method in class edu.wpi.first.util.
CircularBuffer
Get value at front of buffer.
getFirst()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Get value at front of buffer.
getFloat()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the float value.
getFloat()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a float.
getFloat(float)
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a float.
getFloat(float)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a float.
getFloat(int, float)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getFloat(String, float)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the float at the given key.
getFloatArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the float[] value.
getFloatArray()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a float array.
getFloatArray(float[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a float[].
getFloatArray(float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a float[].
getFloatArray(int, float[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getFloatArray(Float[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean array.
getFloatArray(Float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean array.
getFloatArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get float[] topic.
getFloatArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get float[] topic.
getFloatBuffer()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a float array.
getFloatField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a float field.
getFloatField(StructFieldDescriptor, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a float field.
getFloatTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get float topic.
getFloatTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get float topic.
getFmsAttached()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getFmsAttached()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if the FMS is connected.
getFMSAttached()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the FMS attached flag.
getFocalPoints()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the focal points of the ellipse.
getForType(int, PneumaticsModuleType)
- Static method in interface edu.wpi.first.wpilibj.
PneumaticsBase
For internal use to get a module for a specific type.
getForType(int, PneumaticsModuleType)
- Static method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Get a module sim for a specific type.
getForward()
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Check whether the forward direction is active.
getForward(int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
getFPGAButton()
- Static method in class edu.wpi.first.hal.
HALUtil
Gets the state of the "USER" button on the roboRIO.
getFPGAButton()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getFPGAButton()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Query the state of the FPGA button.
getFPGAIndex()
- Method in class edu.wpi.first.wpilibj.
Counter
The counter's FPGA index.
getFPGAIndex()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the FPGA index for the DutyCycle.
getFPGAIndex()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Get the FPGA index for the DutyCycleEncoder.
getFPGAIndex()
- Method in class edu.wpi.first.wpilibj.
Encoder
Get the FPGA index of the encoder.
getFPGAIndex(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Get the FPGA index for the DutyCycle.
getFPGARevision()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the FPGA Revision number.
getFPGARevision()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Return the FPGA Revision number.
getFPGATime()
- Static method in class edu.wpi.first.hal.
HALUtil
Reads the microsecond-resolution timer on the FPGA.
getFPGATime()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the microsecond timer from the FPGA.
getFPGATimestamp()
- Static method in class edu.wpi.first.wpilibj.
Timer
Return the system clock time in seconds.
getFPGAVersion()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the FPGA Version number.
getFPGAVersion()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Return the FPGA Version number.
getFrameButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the frame button on the controller.
getFrameButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the frame button was pressed since the last check.
getFrameButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the frame button was released since the last check.
getFreeCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_current = 4;
getFreeSpeed()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_speed = 5;
getFrequency()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the tachometer frequency.
getFrequency()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the frequency of the duty cycle signal.
getFrequency()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Get the frequency in Hz of the duty cycle signal from the encoder.
getFrequency()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Measure the frequency.
getFrequency(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Get the frequency of the duty cycle signal.
getFrequency(int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
getFromInt(int)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableType
Convert from the numerical representation of type to an enum type.
getFromInt(int)
- Static method in enum class edu.wpi.first.util.
PixelFormat
Gets a PixelFormat enum value from its integer value.
getFromInt(int)
- Static method in enum class edu.wpi.first.util.
TimestampSource
Gets a TimestampSource enum value from its integer value.
getFromString(String)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableType
Convert from a type string to an enum type.
getFrontLeft()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Returns the front-left wheel translation.
getFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_left = 1;
This method returns the internal storage object without modifying any has state.
getFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_left = 1;
getFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_left = 1;
getFrontRight()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Returns the front-right wheel translation.
getFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_right = 2;
This method returns the internal storage object without modifying any has state.
getFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_right = 2;
getFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_right = 2;
getFwdChannel()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Get the forward channel.
getGameSpecificMessage()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the game specific message from the FMS.
getGearbox()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the gearbox for the DC motor.
getGearbox()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the gearbox for the flywheel.
getGearing()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the gear ratio of the DC motor.
getGearing()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the gear ratio of the flywheel.
getGenericEntry(PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new generic entry for the topic.
getGenericEntry(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
Topic
Create a new generic entry for the topic.
getGlobalSampleRate()
- Static method in class edu.wpi.first.wpilibj.
AnalogInput
Get the current sample rate.
getGoal()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Gets the goal for the ProfiledPIDController.
getGoogleButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the google button on the controller.
getGoogleButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the google button was pressed since the last check.
getGoogleButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the google button was released since the last check.
getGreen(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Gets the green channel of the color at the specified index.
getGreen(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getGreen(int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the green channel of the color at the specified index.
getGyroAngleX()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the accumulated gyro angle in the X axis in degrees.
getGyroAngleY()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the accumulated gyro angle in the Y axis in degrees.
getGyroAngleZ()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the accumulated gyro angle in the Z axis in degrees.
getGyroRateX()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the gyro angular rate in the X axis in degrees per second.
getGyroRateY()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the gyro angular rate in the Y axis in degrees per second.
getGyroRateZ()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the gyro angular rate in the Z axis in degrees per second.
getHALErrno()
- Static method in class edu.wpi.first.hal.
HALUtil
Get the last HAL error code.
getHALErrorMessage(int)
- Static method in class edu.wpi.first.hal.
HALUtil
Gets the error message for a specific status code.
getHALRuntimeType()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the runtime type of the HAL.
getHALstrerror()
- Static method in class edu.wpi.first.hal.
HALUtil
Gets the error message for the last HAL error.
getHALstrerror(int)
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the textual description of the system error code.
getHamburgerButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the hamburger button on the controller.
getHamburgerButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the hamburger button was pressed since the last check.
getHamburgerButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the hamburger button was released since the last check.
getHamming()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets how many error bits were corrected.
getHandle()
- Method in class edu.wpi.first.cscore.
VideoSink
Returns the video sink handle.
getHandle()
- Method in class edu.wpi.first.cscore.
VideoSource
Returns the video source handle.
getHandle()
- Method in class edu.wpi.first.networktables.
EntryBase
getHandle()
- Method in class edu.wpi.first.networktables.
MultiSubscriber
Gets the native handle.
getHandle()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the native handle for the entry.
getHandle()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Gets the native handle for the instance.
getHandle()
- Method in class edu.wpi.first.networktables.
NetworkTableListener
Gets the native handle.
getHandle()
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Gets the native handle.
getHandle()
- Method in interface edu.wpi.first.networktables.
PubSub
Gets the native handle.
getHandle()
- Method in class edu.wpi.first.networktables.
Topic
Gets the native handle for the topic.
getHandle()
- Method in class edu.wpi.first.util.concurrent.
Event
Gets the event handle (e.g.
getHandle()
- Method in class edu.wpi.first.util.concurrent.
Semaphore
Gets the semaphore handle (e.g.
getHandle()
- Method in class edu.wpi.first.wpilibj.
PWM
Get the underlying handle.
getHashLibraryResource(String)
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Get the path to the hash to the requested resource.
getHeading()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Returns the direction the robot is pointing.
getHeight()
- Method in class edu.wpi.first.util.
RawFrame
Get the height of the image.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Get the underlying GenericHID object.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the underlying GenericHID object.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the underlying GenericHID object.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the underlying GenericHID object.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Get the underlying GenericHID object.
getHID()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the underlying GenericHID object.
getHierarchy(String)
- Static method in class edu.wpi.first.networktables.
NetworkTable
Gets a list of the names of all the super tables of a given key.
getHighTime(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Get the raw high time of the duty cycle signal.
getHighTimeNanoseconds()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the raw high time of the duty cycle signal.
getHomography()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the 3x3 homography matrix describing the projection from an "ideal" tag (with corners at
 (-1,1), (1,1), (1,-1), and (-1, -1)) to pixels in the image.
getHomographyMatrix()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the 3x3 homography matrix describing the projection from an "ideal" tag (with corners at
 (-1,1), (1,1), (1,-1), and (-1, -1)) to pixels in the image.
getHostname()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns hostname.
getHostName()
- Method in class edu.wpi.first.net.
ServiceData
Returns host name.
getHttpCameraKind()
- Method in class edu.wpi.first.cscore.
HttpCamera
Get the kind of HTTP camera.
getHttpCameraKind(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns HTTP camera kind.
getHttpCameraKindFromInt(int)
- Static method in class edu.wpi.first.cscore.
HttpCamera
Convert from the numerical representation of kind to an enum type.
getHttpCameraUrls(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns HTTP camera URLs.
getI()
- Method in class edu.wpi.first.math.controller.
PIDController
Get the Integral coefficient.
getI()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Gets the integral coefficient.
getId()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
Gets the decoded ID of the tag.
getImpl()
- Method in class edu.wpi.first.util.datalog.
DataLog
Gets the JNI implementation handle.
getIndex()
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Return the index of the analog trigger.
getInfo()
- Method in class edu.wpi.first.cscore.
UsbCamera
Get the full camera information for the device.
getInfo()
- Method in class edu.wpi.first.networktables.
Topic
Gets combined information about the topic.
getInitialControlVector()
- Method in class edu.wpi.first.math.spline.
CubicHermiteSpline
Returns the initial control vector that created this spline.
getInitialControlVector()
- Method in class edu.wpi.first.math.spline.
QuinticHermiteSpline
Returns the initial control vector that created this spline.
getInitialControlVector()
- Method in class edu.wpi.first.math.spline.
Spline
Returns the initial control vector that created this spline.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Check if initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Check if the gyro is initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Check if this analog input has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Check whether this analog output has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Check if this analog trigger has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Check whether this PWM output has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Check whether this DIO has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Check whether this duty cycle input has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Read the Initialized value of the encoder.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Check whether this I2C device has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Check whether the PDP has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Check whether the PCM/PH has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Check whether the PWM has been initialized.
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
getInitialized()
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Check whether this device has been initialized.
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getInitialized(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
getInitializedForward()
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Check whether the forward direction has been initialized.
getInitializedForward(int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
getInitializedReverse()
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Check whether the reverse direction has been initialized.
getInitializedReverse(int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
getInitialPose()
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Returns the initial pose of the trajectory.
getInput()
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Returns the current input of the plant.
getInput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Returns an element of the current input of the plant.
getInputCurrent()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the input current to the robot controller.
getInputVoltage()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the current input voltage for this device.
getInputVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the input voltage to the robot controller.
getInputVoltage()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Gets the input voltage for the DC motor.
getInputVoltage()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Gets the input voltage for the flywheel.
getInputVoltage(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the current input voltage for the PH.
getInstance()
- Method in class edu.wpi.first.networktables.
MultiSubscriber
Gets the instance for the subscriber.
getInstance()
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets the instance for the table.
getInstance()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the instance for the entry.
getInstance()
- Method in class edu.wpi.first.networktables.
NetworkTableEvent
Gets the instance associated with this event.
getInstance()
- Method in class edu.wpi.first.networktables.
Topic
Gets the instance for the topic.
getInstance()
- Method in class edu.wpi.first.networktables.
TopicInfo
Get the instance.
getInstance()
- Static method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Returns the Scheduler instance.
getInstanceFromHandle(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT instance from handle.
getInt(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getInt(String, int)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the int at the given key.
getInteger()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the long value.
getInteger()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as an integer.
getInteger(int, long)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getInteger(long)
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a long.
getInteger(long)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a long.
getIntegerArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the long[] value.
getIntegerArray()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as an integer array.
getIntegerArray(int, long[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getIntegerArray(long[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a long[].
getIntegerArray(long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a long[].
getIntegerArray(Long[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a boolean array.
getIntegerArray(Long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a boolean array.
getIntegerArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get long[] topic.
getIntegerArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get long[] topic.
getIntegerBuffer()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as an integer array.
getIntegerTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get long topic.
getIntegerTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get long topic.
getInternalBuffer()
- Method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Grant access to the internal sample buffer.
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
Command
How the command behaves when another command with a shared requirement is scheduled.
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
getInterruptionBehavior()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
getIntField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of an integer field.
getIntField(StructFieldDescriptor, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of an integer field.
getIntMax()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the maximum signed integer value that can be stored in this field.
getIntMin()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the minimum signed integer value that can be stored in this field.
getInto(T)
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the last published value, replacing the contents in place of an existing object.
getInto(T)
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the last published value, replacing the contents in place of an existing object.
getInverted()
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Common interface for returning if a motor controller is in the inverted state or not.
getInverted()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
getInverted()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
getInverted()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
getInverted()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
getInWindow()
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Return the InWindow output of the analog trigger.
getIpv4Address()
- Method in class edu.wpi.first.net.
ServiceData
Returns IPv4 address.
getIsInput()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Check whether this DIO port is currently an Input.
getIsInput(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
getIZone()
- Method in class edu.wpi.first.math.controller.
PIDController
Get the IZone range.
getIZone()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Get the IZone range.
getJKgMetersSquared()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the moment of inertia of the DC motor.
getJKgMetersSquared()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the moment of inertia in kilograms meters squared.
getJoystickAxes(byte, float[])
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the axes of a specific joystick.
getJoystickAxesRaw(byte, int[])
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the axes of a specific joystick.
getJoystickAxisType(byte, byte)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the type of a specific joystick axis.
getJoystickAxisType(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Returns the types of Axes on a given joystick port.
getJoystickButtons(byte, ByteBuffer)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the buttons of a specific joystick.
getJoystickIsXbox(byte)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets whether a specific joystick is considered to be an XBox controller.
getJoystickIsXbox(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the value of isXbox on a joystick.
getJoystickName(byte)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the name of a joystick.
getJoystickName(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the name of the joystick at a port.
getJoystickOutputs(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getJoystickOutputs(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Gets the joystick outputs.
getJoystickPOVs(byte, short[])
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the POVs of a specific joystick.
getJoystickRumble(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getJoystickRumble(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Gets the joystick rumble.
getJoystickType(byte)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the type of joystick connected.
getJoystickType(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the value of type on a joystick.
getK()
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns the controller matrix K.
getK()
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Returns the steady-state Kalman gain matrix K.
getK(int, int)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Returns an element of the steady-state Kalman gain matrix K.
getKa()
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Returns the acceleration gain in V/(rad/s²).
getKa()
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Returns the acceleration gain in V/(m/s²).
getKa()
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Returns the acceleration gain in V/(units/s²).
getKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ka = 4;
getKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ka = 4;
getKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ka = 3;
getKaAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_angular = 4;
getKaLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_linear = 2;
getKeys()
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets all keys in the table (not including sub-tables).
getKeys()
- Static method in class edu.wpi.first.wpilibj.
Preferences
Gets the preferences keys.
getKeys()
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Get the keys stored in the SmartDashboard table of NetworkTables.
getKeys(int)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets all keys in the table (not including sub-tables).
getKeys(int)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Get the keys stored in the SmartDashboard table of NetworkTables.
getKg()
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Returns the gravity gain in volts.
getKg()
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Returns the gravity gain in volts.
getKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kg = 2;
getKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kg = 2;
getKind()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property kind.
getKind()
- Method in class edu.wpi.first.cscore.
VideoSink
Get the kind of the sink.
getKind()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the kind of the source.
getKindFromInt(int)
- Static method in class edu.wpi.first.cscore.
VideoEvent
Convert from the numerical representation of kind to an enum type.
getKindFromInt(int)
- Static method in class edu.wpi.first.cscore.
VideoProperty
Convert from the numerical representation of kind to an enum type.
getKindFromInt(int)
- Static method in class edu.wpi.first.cscore.
VideoSink
Convert from the numerical representation of kind to an enum type.
getKindFromInt(int)
- Static method in class edu.wpi.first.cscore.
VideoSource
Convert from the numerical representation of kind to an enum type.
getKrakenX60(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Kraken X60 brushless motors.
getKrakenX60Foc(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Kraken X60 brushless motors with FOC (Field-Oriented Control) enabled.
getKs()
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Returns the static gain in volts.
getKs()
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Returns the static gain in volts.
getKs()
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Returns the static gain in volts.
getKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ks = 1;
getKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ks = 1;
getKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ks = 1;
getKv()
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Returns the velocity gain in V/(rad/s).
getKv()
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Returns the velocity gain in V/(m/s).
getKv()
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Returns the velocity gain in V/(units/s).
getKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kv = 3;
getKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kv = 3;
getKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double kv = 2;
getKvAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_angular = 3;
getKvLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_linear = 1;
getL1Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the left trigger 1 button on the controller.
getL1Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the left trigger 1 button on the controller.
getL1ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the left trigger 1 button was pressed since the last check.
getL1ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the left trigger 1 button was pressed since the last check.
getL1ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the left trigger 1 button was released since the last check.
getL1ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the left trigger 1 button was released since the last check.
getL2Axis()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the left trigger 2 axis value of the controller.
getL2Axis()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the left trigger 2 axis value of the controller.
getL2Axis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the left trigger 2 axis value of the controller.
getL2Axis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the left trigger 2 axis value of the controller.
getL2Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the left trigger 2 button on the controller.
getL2Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the left trigger 2 button on the controller.
getL2ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the left trigger 2 button was pressed since the last check.
getL2ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the left trigger 2 button was pressed since the last check.
getL2ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the left trigger 2 button was released since the last check.
getL2ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the left trigger 2 button was released since the last check.
getL3Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the L3 (left stick) button on the controller.
getL3Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the L3 (left stick) button on the controller.
getL3ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the L3 (left stick) button was pressed since the last check.
getL3ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the L3 (left stick) button was pressed since the last check.
getL3ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the L3 (left stick) button was released since the last check.
getL3ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the L3 (left stick) button was released since the last check.
getLast()
- Method in class edu.wpi.first.util.
CircularBuffer
Get value at back of buffer.
getLast()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Get value at back of buffer.
getLastChange()
- Method in class edu.wpi.first.networktables.
EntryBase
getLastChange()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the last time the entry's value was changed.
getLastChange()
- Method in interface edu.wpi.first.networktables.
Subscriber
Gets the last time the entry's value was changed.
getLastFrameTime()
- Method in class edu.wpi.first.cscore.
CvSink
Get the last time a frame was grabbed.
getLastFrameTime()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the last time a frame was captured.
getLastFrameTimeSource()
- Method in class edu.wpi.first.cscore.
CvSink
Get the time source for the timestamp the last frame was grabbed at.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Gets the last value.
getLastValue()
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Gets the last value.
getLaunchDirectory()
- Static method in class edu.wpi.first.wpilibj.
Filesystem
Obtains the current working path that the program was launched with.
getLayout(String)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Gets the already-defined layout in this container with the given title.
getLayout(String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
getLayout(String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
getLayout(String, LayoutType)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Gets the layout with the given type and title, creating it if it does not already exist at the
 time this method is called.
getLayout(String, String)
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Gets the layout with the given type and title, creating it if it does not already exist at the
 time this method is called.
getLayout(String, String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardLayout
getLayout(String, String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
getLayoutName()
- Method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInLayouts
getLayoutName()
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
LayoutType
Gets the string type of the layout as defined by that layout in Shuffleboard.
getLed()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPOnBoardIO
Gets state of the onboard LED.
getLED(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getLED(int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the most recently written color for a particular LED in the buffer.
getLED8Bit(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getLED8Bit(int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the most recently written color for a particular LED in the buffer.
getLeft()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double left = 1;
getLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double left = 1;
getLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double left = 1;
getLeftBumper()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getLeftBumperButton()
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
getLeftBumper()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getLeftBumperButton()
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
getLeftBumperButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the left bumper button on the controller.
getLeftBumperButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the left bumper button on the controller.
getLeftBumperButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left bumper button was pressed since the last check.
getLeftBumperButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the left bumper button was pressed since the last check.
getLeftBumperButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left bumper button was released since the last check.
getLeftBumperButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the left bumper button was released since the last check.
getLeftBumperPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getLeftBumperButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getLeftBumperPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getLeftBumperButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getLeftBumperReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getLeftBumperButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getLeftBumperReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getLeftBumperButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getLeftCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the current draw of the left side of the drivetrain.
getLeftPositionMeters()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the left encoder position in meters.
getLeftReflectanceValue()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPReflectanceSensor
Returns the reflectance value of the left sensor.
getLeftStickButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the left stick button on the controller.
getLeftStickButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the left stick button on the controller.
getLeftStickButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left stick button was pressed since the last check.
getLeftStickButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the left stick button was pressed since the last check.
getLeftStickButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left stick button was released since the last check.
getLeftStickButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the left stick button was released since the last check.
getLeftTriggerAxis()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the left trigger axis value of the controller.
getLeftTriggerAxis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the left trigger axis value of the controller.
getLeftTriggerButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the left trigger button on the controller.
getLeftTriggerButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left trigger button was pressed since the last check.
getLeftTriggerButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the left trigger button was released since the last check.
getLeftVelocityMetersPerSecond()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the left encoder velocity in meters per second.
getLeftX()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Get the X axis value of left side of the controller.
getLeftX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the X axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Get the Y axis value of left side of the controller.
getLeftY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the Y axis value of left side of the controller.
getLength()
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Gets the buffer length.
getLength()
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getLength()
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the length of the buffer.
getLength()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Get the length of the LED strip.
getLength()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Get the ligament length.
getLength(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
getLibraryResource(String)
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Get the path to the requested resource.
getLineWeight()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Get the line thickness.
getListenAddress()
- Method in class edu.wpi.first.cscore.
MjpegServer
Get the listen address of the server.
getLocation()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the location of the team's driver station controls from the FMS.
getLog()
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Get the managed data log (for custom logging).
getLogDir()
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Get the log directory.
getLoggedType()
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Gets the type of the data this logger accepts.
getLong()
- Method in class edu.wpi.first.hal.
HALValue
Get the value as a long.
getLong(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getLong(String, long)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the long at the given key.
getLoopStartTime()
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Return the system clock time in micrseconds for the start of the current periodic loop.
getLoopTiming()
- Static method in class edu.wpi.first.hal.
DIOJNI
Gets the loop timing of the PWM system.
getLSBWeight()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get the factory scaling the least significant bit weight constant.
getMagneticFieldX()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the magnetic field strength in the X axis in Tesla.
getMagneticFieldY()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the magnetic field strength in the Y axis in Tesla.
getMagneticFieldZ()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the magnetic field strength in the Z axis in Tesla.
getMagnitude()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the magnitude of the vector formed by the joystick's current position relative to its
 origin.
getMagnitude()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the magnitude of the vector formed by the joystick's current position relative to its
 origin.
getMainThreadId()
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Returns the main thread ID.
getMatchInfo(MatchInfoData)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets info about a specific match.
getMatchNumber()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the match number from the FMS.
getMatchTime()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Returns the approximate match time.
getMatchTime()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getMatchTime()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Return the approximate match time.
getMatchTime()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Get the current value of the match timer.
getMatchTime()
- Static method in class edu.wpi.first.wpilibj.
Timer
Return the approximate match time.
getMatchType()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the match type from the FMS.
getMathShared()
- Static method in class edu.wpi.first.math.
MathSharedStore
Get the MathShared object.
getMax()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property maximum value.
getMaxAcceleration()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns the maximum acceleration of the trajectory.
getMaxPeriod()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the max period of the encoder.
getMaxPeriod(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getMaxVelocity()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns the maximum velocity of the trajectory.
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
CentripetalAccelerationConstraint
Returns the max velocity given the current pose and curvature.
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveKinematicsConstraint
Returns the max velocity given the current pose and curvature.
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveVoltageConstraint
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
EllipticalRegionConstraint
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
MaxVelocityConstraint
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
MecanumDriveKinematicsConstraint
Returns the max velocity given the current pose and curvature.
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
RectangularRegionConstraint
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
SwerveDriveKinematicsConstraint
Returns the max velocity given the current pose and curvature.
getMaxVelocityMetersPerSecond(Pose2d, double, double)
- Method in interface edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint
Returns the max velocity given the current pose and curvature.
getMeasure()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the measure of the Rotation2d.
getMeasureAngle()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the angle in a measure in the axis-angle representation of this rotation.
getMeasureBatteryVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the battery voltage in a measure.
getMeasureBrownoutVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current brownout voltage setting in a measure.
getMeasureCPUTemp()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current CPU temperature in a measure.
getMeasureCurrent3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output in a measure of the 3.3V rail.
getMeasureCurrent5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output in a measure of the 5V rail.
getMeasureCurrent6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the current output in a measure of the 6V rail.
getMeasureDistance(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the distance between the perimeter of the ellipse and the point in a measure.
getMeasureDistance(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the distance between the perimeter of the rectangle and the point in a measure.
getMeasureFPGATime()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the microsecond timer in a measure from the FPGA.
getMeasureInputCurrent()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the input current to the robot controller in a measure.
getMeasureInputVoltage()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the input voltage to the robot controller in a measure.
getMeasurement()
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the current measurement of the process variable.
getMeasurement()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Returns the measurement of the process variable used by the PIDController.
getMeasurement()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Returns the measurement of the process variable used by the ProfiledPIDController.
getMeasureTime()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the microsecond timestamp.
getMeasureVoltage3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage in a measure of the 3.3V rail.
getMeasureVoltage5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage in a measure of the 5V rail.
getMeasureVoltage6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage in a measure of the 6V rail.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the X component of the pose's translation in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the X component of the pose's translation in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the X axis (roll) in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the X component of the transformation's translation in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the X component of the transformation's translation in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the X component of the translation in a measure.
getMeasureX()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the X component of the translation in a measure.
getMeasureXSemiAxis()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the x semi-axis in a measure.
getMeasureXWidth()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the X size component of the rectangle in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the Y component of the pose's translation in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the Y component of the pose's translation in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the Y axis (pitch) in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the Y component of the transformation's translation in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the Y component of the transformation's translation in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the Y component of the translation in a measure.
getMeasureY()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the Y component of the translation in a measure.
getMeasureYSemiAxis()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the y semi-axis in a measure.
getMeasureYWidth()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the Y size component of the rectangle in a measure.
getMeasureZ()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the Z component of the pose's translation in a measure.
getMeasureZ()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the Z axis (yaw) in a measure.
getMeasureZ()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the Z component of the transformation's translation in a measure.
getMeasureZ()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the Z component of the translation in a measure.
getMessage()
- Method in exception edu.wpi.first.util.struct.
BadSchemaException
getMessage()
- Method in exception edu.wpi.first.util.struct.parser.
ParseException
getMessage(double, double, double)
- Static method in exception edu.wpi.first.hal.util.
BoundaryException
Returns the message for a boundary exception.
getMessages()
- Method in exception edu.wpi.first.hal.can.
CANStreamOverflowException
Gets the messages that were successfully read.
getMessagesRead()
- Method in exception edu.wpi.first.hal.can.
CANStreamOverflowException
Gets the count of messages that were successfully read.
getMin()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property minimum value.
getMiniCIM(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of MiniCIM motors.
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
CentripetalAccelerationConstraint
Returns the minimum and maximum allowable acceleration for the trajectory given pose,
 curvature, and speed.
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveKinematicsConstraint
Returns the minimum and maximum allowable acceleration for the trajectory given pose,
 curvature, and speed.
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
DifferentialDriveVoltageConstraint
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
EllipticalRegionConstraint
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
MaxVelocityConstraint
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
MecanumDriveKinematicsConstraint
Returns the minimum and maximum allowable acceleration for the trajectory given pose,
 curvature, and speed.
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
RectangularRegionConstraint
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in class edu.wpi.first.math.trajectory.constraint.
SwerveDriveKinematicsConstraint
Returns the minimum and maximum allowable acceleration for the trajectory given pose,
 curvature, and speed.
getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)
- Method in interface edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint
Returns the minimum and maximum allowable acceleration for the trajectory given pose,
 curvature, and speed.
getMjpegServerListenAddress(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns MJPEG server listen address.
getMjpegServerPort(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns MJPEG server port.
getModule()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Gets module number (CAN ID).
getModuleNumber()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getModuleNumber()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Get module number for this module.
getModuleNumber()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getModuleNumber(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the module number for a specific handle.
getModules()
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Gets the locations of the modules relative to the center of rotation.
getModules()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
This method returns the internal storage object without modifying any has state.
getModuleSim()
- Method in class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Get the wrapped
PneumaticsBaseSim
object.
getMulticastServiceAnnouncerHasImplementation(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Returns true if MulticastServiceAnnouncer has an implementation.
getMulticastServiceResolverData(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Returns service data for MulticastServiceResolver.
getMulticastServiceResolverEventHandle(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Returns event handle for MulticastServiceResolver.
getMulticastServiceResolverHasImplementation(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Returns true if MulticastServiceResolver has an implementation.
getMutableA()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix a = 4;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional .wpi.proto.ProtobufRotation2d angle = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional .wpi.proto.ProtobufRotation2d angle = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableB()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix b = 5;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableC()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix c = 6;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional .wpi.proto.ProtobufPose2d center = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional .wpi.proto.ProtobufPose2d center = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableD()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix d = 7;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableData()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_left = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_right = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableModules()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutablePose()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional .wpi.proto.ProtobufPose2d pose = 4;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableQ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
optional .wpi.proto.ProtobufQuaternion q = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_left = 3;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_right = 4;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableStates()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
This method returns the internal storage object and sets the corresponding
 has state.
getMutableYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
This method returns the internal storage object and sets the corresponding
 has state.
getName()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property name.
getName()
- Method in class edu.wpi.first.cscore.
VideoSink
Get the name of the sink.
getName()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the name of the source.
getName()
- Method in class edu.wpi.first.hal.
SimDevice
Get the name of the simulated device.
getName()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the name of the entry (the key).
getName()
- Method in class edu.wpi.first.networktables.
Topic
Gets the name of the topic.
getName()
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Gets the struct name.
getName()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the field name.
getName()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the name of the HID.
getName()
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the name of this object.
getName()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismObject2d
Retrieve the object's name.
getName()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Gets the name of this Command.
getName()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Gets the subsystem name of this Subsystem.
getName()
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
Gets the name of this Subsystem.
getName(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Gets the name of an object.
getNativeDouble()
- Method in class edu.wpi.first.hal.
HALValue
Get the native double value.
getNativeHandle()
- Method in class edu.wpi.first.hal.
SimDevice
Get the internal device handle.
getNativeHandle()
- Method in class edu.wpi.first.hal.
SimValue
Get the internal device handle.
getNativeHandle()
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the native handle of this object.
getNativeLong()
- Method in class edu.wpi.first.hal.
HALValue
Get the native long value.
getNativeObj()
- Method in class edu.wpi.first.util.
RawFrame
Get the pointer to native representation of this frame.
getNEO(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of NEO motors.
getNeo550(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of NEO 550 motors.
getNeoVortex(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Neo Vortex brushless motors.
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
getNested()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
getNested()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
getNested()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
getNested()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
getNested()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
getNested()
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
getNested()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the list of struct types referenced by this struct.
getNested(String)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Gets a backend that can be used to log nested data underneath a specific path.
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
getNested(String)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
getNetworkInterfaces()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns list of network interfaces.
getNetworkMode()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get the current network mode.
getNetworkMode(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns network mode.
getNextR()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns the controller's next reference r.
getNextR(int)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns an element of the controller's next reference r.
getNextTimeout()
- Static method in class edu.wpi.first.hal.simulation.
NotifierDataJNI
getNextTimeout()
- Static method in class edu.wpi.first.wpilibj.simulation.
NotifierSim
Gets the timeout of the next notifier.
getNominalVoltage()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double nominal_voltage = 1;
getNorm()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the norm, or distance from the origin to the translation.
getNorm()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the norm, or distance from the origin to the translation.
getNum()
- Method in interface edu.wpi.first.math.
Nat
The number this interface represents.
getNum()
- Method in class edu.wpi.first.math.
Num
The number this is backing.
getNum()
- Method in class edu.wpi.first.math.numbers.
N0
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N1
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N10
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N11
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N12
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N13
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N14
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N15
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N16
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N17
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N18
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N19
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N2
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N20
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N3
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N4
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N5
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N6
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N7
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N8
The integer this class represents.
getNum()
- Method in class edu.wpi.first.math.numbers.
N9
The integer this class represents.
getNumAccumulators()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of analog accumulators in the current system.
getNumAnalogInputs()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of analog inputs in the current system.
getNumAnalogOutputs()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of analog outputs in the current system.
getNumAnalogTriggers()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of analog triggers in the current system.
getNumber(Number)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a double.
getNumber(String, double)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the number the key maps to.
getNumberArray(Number[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a double array.
getNumberArray(String, double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the number array the key maps to.
getNumberArray(String, Double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the number array the key maps to.
getNumChannels()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Gets the number of channels for this power distribution object.
getNumChannels(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the number of channels for this handle.
getNumCols()
- Method in class edu.wpi.first.math.
Matrix
Gets the number of columns in this matrix.
getNumCols()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_cols = 2;
getNumCounters()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of counters in the current system.
getNumCTREPCMModules()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PCM modules in the current system.
getNumCTREPDPChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PDP channels in the current system.
getNumCTREPDPModules()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PDP modules in the current system.
getNumCTRESolenoidChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of solenoid channels in the current system.
getNumDigitalChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of digital channels in the current system.
getNumDigitalHeaders()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of digital headers in the current system.
getNumDigitalPWMOutputs()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of digital IO PWM outputs in the current system.
getNumEncoders()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of quadrature encoders in the current system.
getNumInputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_inputs = 2;
getNumInterrupts()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of interrupts in the current system.
getNumNotifiers()
- Static method in class edu.wpi.first.hal.simulation.
NotifierDataJNI
getNumNotifiers()
- Static method in class edu.wpi.first.wpilibj.simulation.
NotifierSim
Gets the total number of notifiers.
getNumOutputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_outputs = 3;
getNumPWMChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PWM channels in the current system.
getNumPWMHeaders()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PWM headers in the current system.
getNumRelayChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of relay channels in the current system.
getNumRelayHeaders()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of relay headers in the current system.
getNumREVPDHChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PDH channels in the current system.
getNumREVPDHModules()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PDH modules in the current system.
getNumREVPHChannels()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PH channels in the current system.
getNumREVPHModules()
- Static method in class edu.wpi.first.hal.
PortsJNI
Gets the number of PH modules in the current system.
getNumRows()
- Method in class edu.wpi.first.math.
Matrix
Gets the number of rows in this matrix.
getNumRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_rows = 1;
getNumSigmas()
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Returns number of sigma points for each variable in the state x.
getNumStates()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_states = 1;
getObject(String)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Get or create a field object.
getObserver()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Return the observer used internally.
getOffset()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the storage offset of the field, in bytes.
getOffset()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Return the gyro offset value set during calibration to use as a future preset.
getOffset()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get the factory scaling offset constant.
getOmega()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double omega = 3;
getOperatingDirectory()
- Static method in class edu.wpi.first.wpilibj.
Filesystem
Obtains the operating directory of the program.
getOptionsButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the options button on the controller.
getOptionsButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the options button on the controller.
getOptionsButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the options button was pressed since the last check.
getOptionsButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the options button was pressed since the last check.
getOptionsButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the options button was released since the last check.
getOptionsButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the options button was released since the last check.
getOrigin()
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Returns the origin used for tag pose transformation.
getOutput()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the output ratio of the duty cycle signal.
getOutput()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Measure the output from this duty cycle port.
getOutput()
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Returns the current output of the plant.
getOutput()
- Method in class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Check the solenoid output.
getOutput(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Get the output ratio of the duty cycle signal.
getOutput(int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
getOutput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Read the output of a button.
getOutput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Returns an element of the current output of the plant.
getOutputPort()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Get the output port.
getOutputPort(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
getOutputs()
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Get the encoded 16-bit integer that passes button values.
getOutputsActive()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets if outputs are enabled by the control system.
getOutputScaleFactor()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the scale factor of the output.
getOutputScaleFactor(int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Get the scale factor of the output.
getOversampleBits()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get the number of oversample bits.
getOversampleBits()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the amount of oversampling bits.
getOversampleBits(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getP()
- Method in class edu.wpi.first.math.controller.
PIDController
Get the Proportional coefficient.
getP()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Gets the proportional coefficient.
getP()
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Returns the error covariance matrix P.
getP()
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Returns the error covariance matrix P.
getP()
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Returns the error covariance matrix.
getP()
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns the reconstructed error covariance matrix P.
getP(int, int)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Returns an element of the error covariance matrix P.
getP(int, int)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Returns an element of the error covariance matrix P.
getP(int, int)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Returns an element of the error covariance matrix.
getP(int, int)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns an element of the error covariance matrix P.
getParent()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the dynamic struct this field is contained in.
getParent()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Returns the parent container.
getPath()
- Method in class edu.wpi.first.cscore.
UsbCamera
Get the path to the device.
getPath()
- Method in class edu.wpi.first.networktables.
NetworkTable
Get the path of the NetworkTable.
getPCMSim()
- Method in class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Get the wrapped
PneumaticsBaseSim
object.
getPeriod()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the period of this controller.
getPeriod()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Gets the period of this controller.
getPeriod()
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
Gets the unit of the acceleration period (how long it takes for a measured velocity to change
 by one unit of velocity).
getPeriod()
- Method in class edu.wpi.first.units.
VelocityUnit
Gets the period unit of the velocity, eg Seconds or Milliseconds.
getPeriod()
- Method in class edu.wpi.first.wpilibj.
Counter
Get the Period of the most recent count.
getPeriod()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the tachometer period.
getPeriod()
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Get the time between the last two edges counted.
getPeriod()
- Method in class edu.wpi.first.wpilibj.
Encoder
Deprecated.
Use getRate() in favor of this method.
getPeriod()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Gets time period between calls to Periodic() functions.
getPeriod()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Read the period of the encoder.
getPeriod(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getPeriodCycles()
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Gets the number of FPGA cycles that the input must hold steady to pass through this glitch
 filter.
getPeriodNanoSeconds()
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Gets the number of nanoseconds that the input must hold steady to pass through this glitch
 filter.
getPeriodScale()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Get the PWM period scale.
getPeriodScale(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
getPin()
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Check the pin number.
getPin(int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
getPitchAxis()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns which axis, kX, kY, or kZ, is set to the pitch axis.
getPixelFormat()
- Method in class edu.wpi.first.util.
RawFrame
Get the PixelFormat of the frame.
getPlatformPath()
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Returns platform path.
getPlatformPath()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Get the platform path for the current system.
getPoint(double)
- Method in class edu.wpi.first.math.spline.
Spline
Gets the pose and curvature at some point t on the spline.
getPort()
- Method in class edu.wpi.first.cscore.
MjpegServer
Get the port number of the server.
getPort()
- Method in class edu.wpi.first.net.
ServiceData
Returns port number.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Get the SPI port number.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Gets the SPI port number.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Returns the I2C port.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Returns the SPI port.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADXL362
Returns the SPI port.
getPort()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Get the SPI port number.
getPort()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the port number of the HID.
getPort()
- Method in class edu.wpi.first.wpilibj.
I2C
Returns I2C port.
getPort()
- Method in class edu.wpi.first.wpilibj.
SPI
Returns the SPI port value.
getPort(byte)
- Static method in class edu.wpi.first.hal.
HAL
Gets a port handle for a specific channel.
getPortHandleForRouting()
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
getPortHandleForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Get the HAL Port Handle.
getPortHandleForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Get the HAL Port Handle.
getPortHandleForRouting()
- Method in class edu.wpi.first.wpilibj.
DigitalSource
The channel routing number.
getPortWithModule(byte, byte)
- Static method in class edu.wpi.first.hal.
HAL
Gets a port handle for a specific channel and module.
getPose()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional .wpi.proto.ProtobufPose2d pose = 4;
This method returns the internal storage object without modifying any has state.
getPose()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Returns the current pose.
getPose()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Get the pose.
getPoseMeters()
- Method in class edu.wpi.first.math.kinematics.
Odometry
Returns the position of the robot on the field.
getPoseMeters()
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Returns the position of the robot on the field.
getPoses()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Get multiple poses.
getPosition()
- Method in class edu.wpi.first.util.struct.parser.
Lexer
Gets the starting position of the last lexed token.
getPosition()
- Method in exception edu.wpi.first.util.struct.parser.
ParseException
Returns position in parsed string.
getPosition()
- Method in class edu.wpi.first.wpilibj.
PWM
Get the PWM value in terms of a position.
getPosition()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Get the PWM position.
getPosition()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPServo
Get the servo position.
getPosition(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
getPositionError()
- Method in class edu.wpi.first.math.controller.
PIDController
Deprecated, for removal: This API element is subject to removal in a future version.
Use getError() instead.
getPositionError()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the difference between the setpoint and the measurement.
getPositionMeters()
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns the position of the elevator.
getPositionTolerance()
- Method in class edu.wpi.first.math.controller.
PIDController
Deprecated, for removal: This API element is subject to removal in a future version.
Use getErrorTolerance() instead.
getPositionTolerance()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the position tolerance of this controller.
getPOV()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the angle in degrees of the default POV (index 0) on the HID.
getPOV(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the angle in degrees of a POV on the HID.
getPOVCount()
- Method in class edu.wpi.first.wpilibj.
GenericHID
For the current HID, return the number of POVs.
getPressure()
- Method in class edu.wpi.first.wpilibj.
Compressor
If supported by the device, returns the pressure (in PSI) read by the analog pressure sensor
 (on channel 0).
getPressure(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the pressure read by an analog pressure sensor on the specified analog input channel.
getPressure(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
If supported by the device, returns the pressure (in PSI) read by an analog pressure sensor on
 the specified analog input channel.
getPressure(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Unsupported by the CTRE PCM.
getPressureSwitch()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getPressureSwitch()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Returns the state of the pressure switch.
getPressureSwitch()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getPressureSwitch()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
getPressureSwitch()
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Check the value of the pressure switch.
getPressureSwitch()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
getPressureSwitch(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns the state of the pressure switch.
getPressureSwitch(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the state of the digital pressure switch.
getPressureSwitch(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getPressureSwitch(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getPressureSwitchValue()
- Method in class edu.wpi.first.wpilibj.
Compressor
Returns the state of the pressure switch.
getPrettyValue()
- Method in enum class edu.wpi.first.wpilibj.
Relay.Value
Returns the pretty string representation of the value.
getProgramStarted()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
getProgramStarted()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Returns true if the user program has started.
getProperties()
- Method in class edu.wpi.first.networktables.
Topic
Gets all topic properties as a JSON object string.
getProperty()
- Method in class edu.wpi.first.cscore.
VideoEvent
Returns the property associated with the event (if any).
getProperty(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property value.
getProperty(String)
- Method in class edu.wpi.first.cscore.
VideoSink
Get a property of the sink.
getProperty(String)
- Method in class edu.wpi.first.cscore.
VideoSource
Get a property.
getProperty(String)
- Method in class edu.wpi.first.networktables.
Topic
Gets the current value of a property (as a JSON string).
getPropertyDefault(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property default value.
getPropertyKind(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property kind.
getPropertyMax(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property maximum.
getPropertyMin(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property minimum.
getPropertyName(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property name.
getPropertyStep(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property step.
getProto()
- Method in class edu.wpi.first.networktables.
ProtobufTopic
Returns the protobuf.
getProto()
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Gets the protobuf object of the stored type.
getProto(Nat<R>)
- Static method in class edu.wpi.first.math.
Vector
Creates an implementation of the
Protobuf
interface for vectors.
getProto(Nat<R>, Nat<C>)
- Static method in class edu.wpi.first.math.
Matrix
Creates an implementation of the
Protobuf
interface for matrices.
getProto(Nat<States>, Nat<Inputs>, Nat<Outputs>)
- Static method in class edu.wpi.first.math.system.
LinearSystem
Creates an implementation of the
Protobuf
interface for linear systems.
getProtobufTopic(String, Protobuf<T, MessageType>)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get protobuf-encoded value topic.
getProtobufTopic(String, Protobuf<T, MessageType>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get protobuf-encoded value topic.
getPSButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the PlayStation button on the controller.
getPSButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the PlayStation button on the controller.
getPSButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the PlayStation button was pressed since the last check.
getPSButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the PlayStation button was pressed since the last check.
getPSButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the PlayStation button was released since the last check.
getPSButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the PlayStation button was released since the last check.
getPulseLength()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Read the pulse length.
getPulseLength(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
getPulseMicrosecond()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Get the PWM pulse microsecond value.
getPulseMicrosecond(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
getPulseTimeMicroseconds()
- Method in class edu.wpi.first.wpilibj.
PWM
Get the PWM value directly from the hardware.
getPulseTimeMicroseconds(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Gets the current microsecond pulse time from a PWM channel.
getPWMConfigMicroseconds(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Gets the pwm configuration settings for the PWM channel.
getPWMEliminateDeadband(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Gets the current eliminate deadband value.
getPwmHandle()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Gets the backing PWM handle.
getPWMPosition(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Gets a position value from a PWM channel.
getPWMSpeed(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Gets a scaled value from a PWM channel.
getQ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
optional .wpi.proto.ProtobufQuaternion q = 1;
This method returns the internal storage object without modifying any has state.
getQuadThresholdParameters()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Gets quad threshold parameters.
getQuaternion()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the quaternion representation of the Rotation3d.
getQuinticSplinesFromControlVectors(Spline.ControlVector[])
- Static method in class edu.wpi.first.math.spline.
SplineHelper
Returns a set of quintic splines corresponding to the provided control vectors.
getQuinticSplinesFromWaypoints(List<Pose2d>)
- Static method in class edu.wpi.first.math.spline.
SplineHelper
Returns quintic splines from a set of waypoints.
getR()
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Returns the current reference vector r.
getR()
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Returns the current reference vector r.
getR()
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns the reference vector r.
getR(int)
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Returns an element of the current reference vector r.
getR(int)
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Returns an element of the current reference vector r.
getR(int)
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns an element of the reference vector r.
getR1Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the right trigger 1 button on the controller.
getR1Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the right trigger 1 button on the controller.
getR1ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the right trigger 1 button was pressed since the last check.
getR1ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the right trigger 1 button was pressed since the last check.
getR1ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the right trigger 1 button was released since the last check.
getR1ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the right trigger 1 button was released since the last check.
getR2Axis()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the right trigger 2 axis value of the controller.
getR2Axis()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the right trigger 2 axis value of the controller.
getR2Axis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the right trigger 2 axis value of the controller.
getR2Axis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the right trigger 2 axis value of the controller.
getR2Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the right trigger 2 button on the controller.
getR2Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the right trigger 2 button on the controller.
getR2ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the right trigger 2 button was pressed since the last check.
getR2ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the right trigger 2 button was pressed since the last check.
getR2ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the right trigger 2 button was released since the last check.
getR2ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the right trigger 2 button was released since the last check.
getR3Button()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the R3 (right stick) button on the controller.
getR3Button()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the R3 (right stick) button on the controller.
getR3ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the R3 (right stick) button was pressed since the last check.
getR3ButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the R3 (right stick) button was pressed since the last check.
getR3ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the R3 (right stick) button was released since the last check.
getR3ButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the R3 (right stick) button was released since the last check.
getRadians()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the radian value of the Rotation2d.
getRadioLEDState()
- Static method in class edu.wpi.first.hal.
LEDJNI
Get the state of the "Radio" LED.
getRadioLEDState()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getRadioLEDState()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the state of the "Radio" LED.
getRadioLEDState()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the state of the radio led.
getRange()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Check the range of this accelerometer.
getRange()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Check the range of this accelerometer.
getRange(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
getRange(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
getRangeCM()
- Method in class edu.wpi.first.wpilibj.
SharpIR
Get the range in centimeters from the distance sensor.
getRangeInches()
- Method in class edu.wpi.first.wpilibj.
SharpIR
Get the range in inches from the distance sensor.
getRangeInches()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Get the range in inches from the ultrasonic sensor.
getRangeMM()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Get the range in millimeters from the ultrasonic sensor.
getRate()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the yaw axis angular rate in degrees per second (CCW positive).
getRate()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the Yaw axis angular rate in degrees per second (CCW positive).
getRate()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Return the rate of rotation of the gyro.
getRate()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Return the rate of rotation of the gyro.
getRate()
- Method in class edu.wpi.first.wpilibj.
Counter
Get the current rate of the Counter.
getRate()
- Method in class edu.wpi.first.wpilibj.
Encoder
Get the current rate of the encoder.
getRate()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Return the rate of rotation of the gyro
getRate()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Get the rate of angle change on this gyro.
getRate()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the rate of the encoder.
getRate()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Return the rate of rotation of the gyro
getRate(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
getRate(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getRate(ADIS16470_IMU.IMUAxis)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the axis angular rate in degrees per second (CCW positive).
getRateX()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the rate of turn in degrees-per-second around the X-axis.
getRateX()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the rate of turn in degrees-per-second around the X-axis.
getRateY()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the rate of turn in degrees-per-second around the Y-axis.
getRateY()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the rate of turn in degrees-per-second around the Y-axis.
getRateZ()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Get the rate of turn in degrees-per-second around the Z-axis.
getRateZ()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Get the rate of turn in degrees-per-second around the Z-axis.
getRaw()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the byte[] value.
getRaw()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Gets the raw data.
getRaw()
- Method in class edu.wpi.first.wpilibj.
Encoder
Gets the raw value from the encoder.
getRaw(byte[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a byte[].
getRaw(byte[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a byte[].
getRaw(int, byte[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getRaw(String, byte[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the raw value (byte array) the key maps to.
getRawAllianceStation()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the raw alliance station of the teams driver station.
getRawAxis(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the value of the axis.
getRawAxis(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Get the value of the axis.
getRawBuffer()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Gets the raw data.
getRawButton(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the button value (starting at button 1).
getRawButtonPressed(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Whether the button was pressed since the last check.
getRawButtonReleased(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Whether the button was released since the last check.
getRawTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get raw topic.
getRawTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get byte[] topic.
getRearLeft()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Returns the rear-left wheel translation.
getRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_left = 3;
This method returns the internal storage object without modifying any has state.
getRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_left = 3;
getRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_left = 3;
getRearRight()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Returns the rear-right wheel translation.
getRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_right = 4;
This method returns the internal storage object without modifying any has state.
getRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_right = 4;
getRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_right = 4;
getRed(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Gets the red channel of the color at the specified index.
getRed(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
getRed(int)
- Method in interface edu.wpi.first.wpilibj.
LEDReader
Gets the red channel of the color at the specified index.
getRelay(int)
- Static method in class edu.wpi.first.hal.
RelayJNI
Gets the current state of the relay channel.
getRemaining()
- Method in class edu.wpi.first.hal.
DMAJNISample
getRemaining()
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns the number of remaining samples.
getReplayNumber()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the replay number from the FMS.
getRequirements()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Specifies the set of subsystems used by this command.
getRequirements()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
Specifies the set of subsystems used by this command.
getReset()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Check if the encoder has been reset.
getReset(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getRevChannel()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Get the reverse channel.
getReverse()
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Check whether the reverse direction is active.
getReverse(int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
getReverseDirection()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the reverse direction of the encoder.
getReverseDirection(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getRevolutionsPerMinute()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the current tachometer revolutions per minute.
getRevolutionsPerSecond()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the current tachometer revolutions per second.
getRight()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double right = 2;
getRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double right = 2;
getRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double right = 2;
getRightBumper()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getRightBumperButton()
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
getRightBumper()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getRightBumperButton()
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
getRightBumperButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the right bumper button on the controller.
getRightBumperButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the right bumper button on the controller.
getRightBumperButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right bumper button was pressed since the last check.
getRightBumperButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the right bumper button was pressed since the last check.
getRightBumperButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right bumper button was released since the last check.
getRightBumperButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the right bumper button was released since the last check.
getRightBumperPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getRightBumperButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getRightBumperPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getRightBumperButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getRightBumperReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
StadiaController.getRightBumperButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getRightBumperReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxController.getRightBumperButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getRightCurrentDrawAmps()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the current draw of the right side of the drivetrain.
getRightPositionMeters()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the right encoder position in meters.
getRightReflectanceValue()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPReflectanceSensor
Returns the reflectance value of the right sensor.
getRightStickButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the right stick button on the controller.
getRightStickButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the right stick button on the controller.
getRightStickButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right stick button was pressed since the last check.
getRightStickButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the right stick button was pressed since the last check.
getRightStickButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right stick button was released since the last check.
getRightStickButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the right stick button was released since the last check.
getRightTriggerAxis()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the right trigger axis value of the controller.
getRightTriggerAxis()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the right trigger axis value of the controller.
getRightTriggerButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the right trigger button on the controller.
getRightTriggerButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right trigger button was pressed since the last check.
getRightTriggerButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the right trigger button was released since the last check.
getRightVelocityMetersPerSecond()
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Get the right encoder velocity in meters per second.
getRightX()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Get the X axis value of right side of the controller.
getRightX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the X axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj.
XboxController
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Get the Y axis value of right side of the controller.
getRightY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Get the Y axis value of right side of the controller.
getRisingTimestamp()
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Get the timestamp of the last rising edge.
getRisingTimestamp()
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Get the timestamp of the last rising edge.
getRobotMainThreadId()
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
get the main thread id func.
getRobotObject()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Get the robot object.
getRobotPose()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Get the robot pose.
getRollAxis()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns which axis, kX, kY, or kZ, is set to the roll axis.
getRomiBuiltIn(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of Romi/TI_RSLK MAX motors.
getRoot(String, double, double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
Get or create a root in this Mechanism2d with the given name and position.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the rotational component of the ellipse.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the rotational component of the transformation.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the rotational component of the transformation.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the rotational component of the rectangle.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the rotational component of the transformation.
getRotation()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the rotational component of the transformation.
getRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
This method returns the internal storage object without modifying any has state.
getRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
This method returns the internal storage object without modifying any has state.
getRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
This method returns the internal storage object without modifying any has state.
getRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
This method returns the internal storage object without modifying any has state.
getRotation2d()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Return the heading of the robot as a
Rotation2d
.
getRotation2d()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Return the heading of the robot as a
Rotation2d
.
getRotation2d()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Gets the angle the robot is facing.
getRotations()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the number of rotations of the Rotation2d.
getRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
This method returns the internal storage object without modifying any has state.
getRSLState()
- Static method in class edu.wpi.first.hal.
HAL
Gets the current state of the Robot Signal Light (RSL).
getRSLState()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Gets the current state of the Robot Signal Light (RSL).
getRumble(GenericHID.RumbleType)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Get the joystick rumble.
getRunning()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Check if the LEDs are running.
getRunning(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
getRuntimeType()
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Get the current runtime type.
getRx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rx = 4;
getRy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double ry = 5;
getRz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rz = 6;
getS()
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns the square-root error covariance matrix S.
getS(int, int)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns an element of the square-root error covariance matrix S.
getSample(double)
- Method in class edu.wpi.first.math.interpolation.
TimeInterpolatableBuffer
Sample the buffer at the given time.
getSamplesToAverage()
- Method in class edu.wpi.first.wpilibj.
Counter
Get the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
getSamplesToAverage()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets the number of samples to average.
getSamplesToAverage()
- Method in class edu.wpi.first.wpilibj.
Encoder
Get the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
getSamplesToAverage()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Get the samples-to-average value.
getSamplesToAverage(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
getSchema()
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
getSchema()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
getSchema()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
getSchema()
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
getSchema()
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
getSchema()
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
getSchema()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
getSchema()
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
getSchema()
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
getSchema()
- Method in class edu.wpi.first.math.struct.
MatrixStruct
getSchema()
- Method in class edu.wpi.first.math.struct.
VectorStruct
getSchema()
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
getSchema()
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
getSchema()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the schema.
getSchema()
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Gets the struct schema.
getSecond()
- Method in class edu.wpi.first.math.
Pair
Returns the second object.
getSelected()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
Returns the selected option.
getSensorReadData(int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Get the sensor DMA sample.
getSerialNumber()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the roboRIO serial number.
getSerialNumber()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getSerialNumber()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Return the serial number of the roboRIO.
getSerialNumber()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the serial number.
getServer()
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Get server for the primary camera feed.
getServer(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Gets a server by name.
getServerTime()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the creation time of the value in server time.
getServerTimeOffset()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get the time offset between server time and local time.
getServerTimeOffset(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Get the time offset between server time and local time.
getServiceName()
- Method in class edu.wpi.first.net.
ServiceData
Returns service name.
getSetMetadataData()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a set metadata control record.
getSetpoint()
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the current setpoint of the bang-bang controller.
getSetpoint()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns the current setpoint of the PIDController.
getSetpoint()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the current setpoint of the ProfiledPIDController.
getSetpoint()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Returns the current setpoint of the subsystem.
getShareButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the share button on the controller.
getShareButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the share button was pressed since the last check.
getShareButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the share button was released since the last check.
getSimDeviceHandle(String)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimDeviceName(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Get the name of a simulated device.
getSimDeviceName(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimpleName()
- Method in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
Returns name of the given enum.
getSimValue(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value.
getSimValueBoolean(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value (boolean).
getSimValueDeviceHandle(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimValueDouble(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value (double).
getSimValueEnum(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value (enum).
getSimValueEnumDoubleValues(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimValueEnumOptions(int)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimValueHandle(int, String)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
getSimValueInt(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value (int).
getSimValueLong(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Gets a simulated value (long).
getSin()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the sine of the Rotation2d.
getSink()
- Method in class edu.wpi.first.cscore.
VideoEvent
Returns the sink associated with the event (if any).
getSinkConfigJson(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink configuration JSON.
getSinkDescription(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink description.
getSinkError(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink error message.
getSinkKind(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink kind.
getSinkName(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink name.
getSinkProperty(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink property.
getSinkSource(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink source.
getSinkSourceProperty(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns sink source property.
getSize()
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
getSize()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
getSize()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
getSize()
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
getSize()
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
getSize()
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
getSize()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
getSize()
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
getSize()
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
getSize()
- Method in class edu.wpi.first.math.struct.
MatrixStruct
getSize()
- Method in class edu.wpi.first.math.struct.
VectorStruct
getSize()
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
getSize()
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
getSize()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Gets the size of the raw data.
getSize()
- Method in class edu.wpi.first.util.
RawFrame
Get the total size of the data stored in the frame, in bytes.
getSize()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the serialized size (in bytes).
getSize()
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Returns the struct size, in bytes.
getSize()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the underlying storage size of the field, in bytes.
getSolenoidCurrent(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the total current drawn by all solenoids.
getSolenoidDisabledList()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getSolenoidDisabledList()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Get a bitmask of disabled solenoids.
getSolenoidDisabledList()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getSolenoidDisabledList(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Get a bitmask of disabled solenoids.
getSolenoidDisabledList(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Get a bitmask of disabled solenoids.
getSolenoidOutput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
getSolenoidOutput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Check the solenoid output on a specific channel.
getSolenoidOutput(int)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
getSolenoidOutput(int, int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
getSolenoidOutput(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
getSolenoids()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
getSolenoids()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Gets a bitmask of solenoid values.
getSolenoids()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
getSolenoids(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Gets a bitmask of solenoid values.
getSolenoids(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Gets a bitmask of solenoid values.
getSolenoidsTotalCurrent()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the total current (in amps) drawn by all solenoids.
getSolenoidsVoltage()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the current voltage of the solenoid power supply.
getSolenoidVoltage(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the current voltage of the solenoid power supply.
getSolenoidVoltageFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the solenoid is currently reporting a voltage fault.
getSolenoidVoltageFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the solenoid is currently reporting a voltage fault.
getSolenoidVoltageStickyFault()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
Returns whether the solenoid has reported a voltage fault since sticky faults were last
 cleared.
getSolenoidVoltageStickyFault(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Returns whether the solenoid has reported a voltage fault since sticky faults were last
 cleared.
getSource()
- Method in class edu.wpi.first.cscore.
VideoEvent
Returns the source associated with the event (if any).
getSource()
- Method in class edu.wpi.first.cscore.
VideoSink
Get the connected source.
getSourceChannel()
- Method in class edu.wpi.first.wpilibj.
DutyCycle
Get the channel of the source.
getSourceChannel()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Get the channel of the source.
getSourceConfigJson(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source configuration JSON.
getSourceDescription(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source description.
getSourceKind(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source kind.
getSourceLastFrameTime(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source's last frame time.
getSourceName(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source name.
getSourceProperty(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source property.
getSourceProperty(String)
- Method in class edu.wpi.first.cscore.
VideoSink
Get a property of the associated source.
getSourceVideoMode(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns source video mode.
getSpeed()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional double speed = 1;
getSpeed()
- Method in class edu.wpi.first.wpilibj.
PWM
Get the PWM value in terms of speed.
getSpeed()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Get the PWM speed.
getSpeed(double, double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Calculates the angular speed produced by the motor at a given torque and input voltage.
getSpeed(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
getSquareButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the square button on the controller.
getSquareButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the square button on the controller.
getSquareButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the square button was pressed since the last check.
getSquareButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the square button was pressed since the last check.
getSquareButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the square button was released since the last check.
getSquareButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the square button was released since the last check.
getStadiaButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the stadia button on the controller.
getStadiaButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the stadia button was pressed since the last check.
getStadiaButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the stadia button was released since the last check.
getStallCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_current = 3;
getStallTorque()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_torque = 2;
getStartButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the start button on the controller.
getStartButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the start button was pressed since the last check.
getStartButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the start button was released since the last check.
getStartData()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a start control record.
getStartVelocity()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns the starting velocity of the trajectory.
getStates()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
This method returns the internal storage object without modifying any has state.
getStates()
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Return the states of the trajectory.
getStatus()
- Method in exception edu.wpi.first.hal.util.
UncleanStatusException
Create a new UncleanStatusException.
getStep()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns property step size.
getStickAxis(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the value of the axis on a joystick.
getStickAxisCount(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Returns the number of axes on a given joystick port.
getStickButton(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
The state of one joystick button.
getStickButtonCount(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets the number of buttons on a joystick.
getStickButtonPressed(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Whether one joystick button was pressed since the last check.
getStickButtonReleased(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Whether one joystick button was released since the last check.
getStickButtons(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
The state of the buttons on the joystick.
getStickPOV(int, int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Get the state of a POV on the joystick.
getStickPOVCount(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Returns the number of povs on a given joystick port.
getStickyFaults()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the sticky faults currently active on this device.
getStickyFaults()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Returns the power distribution sticky faults.
getStickyFaults(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the sticky faults of the PowerDistribution.
getStickyFaults(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the sticky faults currently active on this device.
getStickyFaultsNative(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the sticky faults of the PowerDistribution.
getStickyFaultsNative(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the sticky faults currently active on this device.
getStopped()
- Method in class edu.wpi.first.wpilibj.
Counter
Determine if the clock is stopped.
getStopped()
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Gets if the tachometer is stopped.
getStopped()
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Determine if the counter is not moving.
getStopped()
- Method in class edu.wpi.first.wpilibj.
Encoder
Determine if the encoder is stopped.
getStorage()
- Method in class edu.wpi.first.math.
Matrix
Gets the underlying
SimpleMatrix
that this
Matrix
wraps.
getStride()
- Method in class edu.wpi.first.util.
RawFrame
Get the number of bytes in each row of image data.
getString()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns the string property value.
getString()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the String value.
getString()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a string.
getString(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getString(String)
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a String.
getString(String)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a String.
getString(String, String)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Returns the string at the given key.
getString(String, String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the string the key maps to.
getStringArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the String[] value.
getStringArray()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Decodes a data record as a string array.
getStringArray(int, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic value.
getStringArray(String[])
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Gets the entry's value as a String[].
getStringArray(String[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value as a String[].
getStringArray(String, String[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns the string array the key maps to.
getStringArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get String[] topic.
getStringArrayTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get String[] topic.
getStringField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a character or character array field.
getStringFromObject(Object)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableType
Gets string from generic data value.
getStringProperty(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns property value as a string.
getStringTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get String topic.
getStringTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get String topic.
getStruct()
- Method in class edu.wpi.first.networktables.
StructArrayTopic
Returns the struct.
getStruct()
- Method in class edu.wpi.first.networktables.
StructTopic
Returns the struct.
getStruct()
- Method in class edu.wpi.first.util.struct.
StructBuffer
Gets the struct object of the stored type.
getStruct()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the struct descriptor for a struct data type.
getStruct(int)
- Static method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Creates an implementation of the
Struct
interface for swerve drive kinematics objects.
getStruct(Nat<R>)
- Static method in class edu.wpi.first.math.
Vector
Creates an implementation of the
Struct
interface for vectors.
getStruct(Nat<R>, Nat<C>)
- Static method in class edu.wpi.first.math.
Matrix
Creates an implementation of the
Struct
interfaces for matrices.
getStruct(Nat<States>, Nat<Inputs>, Nat<Outputs>)
- Static method in class edu.wpi.first.math.system.
LinearSystem
Creates an implementation of the
Struct
interface for linear systems.
getStructArrayTopic(String, Struct<T>)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get struct-encoded value array topic.
getStructArrayTopic(String, Struct<T>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get struct-encoded value array topic.
getStructField(StructFieldDescriptor)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a struct field.
getStructField(StructFieldDescriptor, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Gets the value of a struct field.
getStructTopic(String, Struct<T>)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get struct-encoded value topic.
getStructTopic(String, Struct<T>)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get struct-encoded value topic.
getSubsystem()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Gets the subsystem name of this Command.
getSubsystem()
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
Gets the subsystem name of this Subsystem.
getSubsystem(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Gets the subsystem name of an object.
getSubTable(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Returns the table at the specified key.
getSubTables()
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets the names of all subtables in the table.
getSwitchableChannel()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Gets whether the PDH switchable channel is turned on or off.
getSwitchableChannel(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Returns true if switchable channel is powered on.
getSwitchableChannelNoError(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Returns true if switchable channel is powered on without throwing any errors.
getSystemActive()
- Static method in class edu.wpi.first.hal.
HAL
Gets if the system outputs are currently active.
getSystemClockTicksPerMicrosecond()
- Static method in class edu.wpi.first.hal.
ConstantsJNI
Gets the number of FPGA system clock ticks per microsecond.
getSystemTime()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Returns the system time.
getSystemTimeValid()
- Static method in class edu.wpi.first.hal.
HAL
Gets if the system time is valid.
getTab(String)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Gets the Shuffleboard tab with the given title, creating it if it does not already exist.
getTable()
- Method in interface edu.wpi.first.networktables.
NTSendableBuilder
Get the network table.
getTable()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Get the network table.
getTable(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Gets the table with the specified key.
getTagPose(int)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Gets an AprilTag pose by its ID.
getTags()
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Returns a List of the
AprilTags
used in this layout.
getTan()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns the tangent of the Rotation2d.
getTeamNumber()
- Static method in class edu.wpi.first.hal.
HALUtil
Returns the team number configured for the robot controller.
getTeamNumber()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getTeamNumber()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Returns the team number configured for the robot controller.
getTeamNumber()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the team number.
getTelemetryAverageValue(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns telemetry average value.
getTelemetryAverageValue(int, CameraServerJNI.TelemetryKind)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns telemetry average value.
getTelemetryElapsedTime()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns telemetry elapsed time.
getTelemetryValue(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns telemetry value.
getTelemetryValue(int, CameraServerJNI.TelemetryKind)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns telemetry value.
getTemperature()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the temperature in degrees Celsius.
getTemperature()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the temperature of the PDP.
getTemperature()
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Check the temperature of the PDP.
getTemperature(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the temperature of the PowerDistribution.
getTemperature(int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
getTest()
- Method in class edu.wpi.first.hal.
ControlWord
Gets the Test mode flag.
getTest()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
getTest()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Check if the DS is in test.
getText()
- Method in class edu.wpi.first.wpilibj.
Alert
Gets the current alert text.
getThetaController()
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns the heading controller.
getThrottle()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the throttle value of the current joystick.
getThrottle()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the throttle value of the current joystick.
getThrottleChannel()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the channel currently associated with the throttle axis.
getThrottleChannel()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the channel currently associated with the throttle axis.
getTime()
- Method in class edu.wpi.first.hal.
DMAJNISample
getTime()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double time = 1;
getTime()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the creation time of the value in local time.
getTime()
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns the DMA sample time in microseconds.
getTime()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Read the microsecond timestamp.
getTime()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Returns the time in seconds since the watchdog was last fed.
getTimeout()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Returns the watchdog's timeout in seconds.
getTimestamp()
- Method in interface edu.wpi.first.math.
MathShared
Get the current time.
getTimestamp()
- Static method in class edu.wpi.first.math.
MathSharedStore
Get the time.
getTimestamp()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Gets the record timestamp.
getTimestamp()
- Method in class edu.wpi.first.util.
RawFrame
Get the time this frame was grabbed at.
getTimestamp()
- Static method in class edu.wpi.first.wpilibj.
Timer
Return the clock time in seconds.
getTimeStamp()
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns the DMA sample timestamp in seconds.
getTimestampBaseTime()
- Static method in class edu.wpi.first.wpilibj.
CAN
Reads the current value of the millisecond-resolution timer that
CANData
timestamps are
 based on.
getTimestampSource()
- Method in class edu.wpi.first.util.
RawFrame
Get the time source for the timestamp this frame was grabbed at.
getTitle()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
getTitle()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardTab
getTitle()
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardContainer
Gets the title of this Shuffleboard value.
getTokenText()
- Method in class edu.wpi.first.util.struct.parser.
Lexer
Gets the text of the last lexed token.
getTolerance()
- Method in class edu.wpi.first.math.controller.
BangBangController
Returns the current tolerance of the controller.
getTop()
- Method in class edu.wpi.first.wpilibj.
Joystick
Read the state of the top button on the joystick.
getTopic()
- Method in interface edu.wpi.first.networktables.
BooleanArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
BooleanPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
DoubleArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
DoublePublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
FloatArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
FloatPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
IntegerArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
IntegerPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get the corresponding topic.
getTopic()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the subscribed-to / published-to topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
ProtobufPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
PubSub
Gets the subscribed-to / published-to topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
RawPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StringArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StringPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StructArrayPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StructPublisher
Get the corresponding topic.
getTopic()
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get the corresponding topic.
getTopic()
- Method in class edu.wpi.first.networktables.
TopicInfo
Get the topic as an object.
getTopic()
- Method in class edu.wpi.first.networktables.
ValueEventData
Get the topic as an object.
getTopic(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns Topic handle.
getTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Get (generic) topic.
getTopic(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get (generic) topic.
getTopic(String)
- Method in interface edu.wpi.first.networktables.
NTSendableBuilder
Add a property without getters or setters.
getTopic(String)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Add a property without getters or setters.
getTopicCached(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns true if topic is cached.
getTopicExists(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns true if topic exists.
getTopicFromHandle(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic from pubsub entry handle.
getTopicInfo()
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets topic information for all keys in the table (not including sub-tables).
getTopicInfo()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get information about all topics.
getTopicInfo(int)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets topic information for all keys in the table (not including sub-tables).
getTopicInfo(NetworkTableInstance, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic info.
getTopicInfo(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get information about topics starting with the given prefix.
getTopicInfo(String, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get information about topics starting with the given prefix.
getTopicInfo(String, String[])
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get information about topics starting with the given prefix.
getTopicInfos(NetworkTableInstance, int, String, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns list of topic infos.
getTopicInfosStr(NetworkTableInstance, int, String, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns list of topic infos.
getTopicName(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic name.
getTopicPersistent(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns true if topic is persistent.
getTopicProperties(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic properties.
getTopicProperty(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic property.
getTopicRetained(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns true if topic is retained.
getTopics()
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets all topics in the table (not including sub-tables).
getTopics()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get all published topics.
getTopics(int)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets all topics in the table (not including sub-tables).
getTopics(int, String, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns list of topic handles.
getTopics(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get published topics starting with the given prefix.
getTopics(String, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get published topics starting with the given prefix.
getTopics(String, String[])
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Get published topics starting with the given prefix.
getTopicsStr(int, String, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns list of topic handles.
getTopicType(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic type.
getTopicTypeString(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns topic type as string.
getTopPressed()
- Method in class edu.wpi.first.wpilibj.
Joystick
Whether the top button was pressed since the last check.
getTopReleased()
- Method in class edu.wpi.first.wpilibj.
Joystick
Whether the top button was released since the last check.
getTorque(double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Calculate torque produced by the motor with a given current.
getTorqueNewtonMeters()
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Returns the DC motor's torque in Newton-Meters.
getTorqueNewtonMeters()
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Returns the flywheel's torque in Newton-Meters.
getTotalCurrent()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the current of all monitored channels.
getTotalCurrent(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the total current of the PowerDistribution.
getTotalCurrentNoError(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the total current of the PowerDistribution without throwing any errors.
getTotalEnergy()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the total energy drawn from the monitored channels of the PDP.
getTotalEnergy(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the total energy of the Power Distribution Panel.
getTotalPower()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the total power drawn from the monitored channels of the PDP.
getTotalPower(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the total power of the Power Distribution Panel.
getTotalTimeSeconds()
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Returns the overall duration of the trajectory.
getTouchpad()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS4Controller.getTouchpadButton()
instead. This function is deprecated for removal to
     make function names consistent to allow the HID classes to be automatically generated.
getTouchpad()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS5Controller.getTouchpadButton()
instead. This function is deprecated for removal to
     make function names consistent to allow the HID classes to be automatically generated.
getTouchpadButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the touchpad button on the controller.
getTouchpadButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the touchpad button on the controller.
getTouchpadButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the touchpad button was pressed since the last check.
getTouchpadButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the touchpad button was pressed since the last check.
getTouchpadButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the touchpad button was released since the last check.
getTouchpadButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the touchpad button was released since the last check.
getTouchpadPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS4Controller.getTouchpadButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getTouchpadPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS5Controller.getTouchpadButtonPressed()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getTouchpadReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS4Controller.getTouchpadButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getTouchpadReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS5Controller.getTouchpadButtonReleased()
instead. This function is deprecated for
     removal to make function names consistent to allow the HID classes to be automatically
     generated.
getTrackWidth()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
optional double track_width = 1;
getTranslation()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the translation component of the transformation.
getTranslation()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the translation component of the transformation.
getTranslation()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the translation component of the transformation.
getTranslation()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the translation component of the transformation.
getTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
This method returns the internal storage object without modifying any has state.
getTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
This method returns the internal storage object without modifying any has state.
getTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
This method returns the internal storage object without modifying any has state.
getTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
This method returns the internal storage object without modifying any has state.
getTriangleButton()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Read the value of the triangle button on the controller.
getTriangleButton()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Read the value of the triangle button on the controller.
getTriangleButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the triangle button was pressed since the last check.
getTriangleButtonPressed()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the triangle button was pressed since the last check.
getTriangleButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Whether the triangle button was released since the last check.
getTriangleButtonReleased()
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Whether the triangle button was released since the last check.
getTrigger()
- Method in class edu.wpi.first.wpilibj.
Joystick
Read the state of the trigger on the joystick.
getTriggerChannels()
- Method in class edu.wpi.first.hal.
DMAJNISample
getTriggerChannels()
- Method in class edu.wpi.first.wpilibj.
DMASample
Returns the number of DMA trigger channels.
getTriggerLowerBound()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Get the lower bound.
getTriggerLowerBound(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
getTriggerPressed()
- Method in class edu.wpi.first.wpilibj.
Joystick
Whether the trigger was pressed since the last check.
getTriggerReleased()
- Method in class edu.wpi.first.wpilibj.
Joystick
Whether the trigger was released since the last check.
getTriggerState()
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Return the TriggerState output of the analog trigger.
getTriggerUpperBound()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Get the upper bound.
getTriggerUpperBound(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
getTwist()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the twist value of the current joystick.
getTwist()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the twist value of the current joystick.
getTwistChannel()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the channel currently associated with the twist axis.
getTwistChannel()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the channel currently associated with the twist axis.
getTxt()
- Method in class edu.wpi.first.net.
ServiceData
Returns service data payload.
getType()
- Method in class edu.wpi.first.hal.
HALValue
Get the type of the value.
getType()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the type of the entry.
getType()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the data type.
getType()
- Method in class edu.wpi.first.networktables.
Topic
Gets the type of the topic.
getType()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the field type.
getType()
- Method in class edu.wpi.first.wpilibj.
Alert
Get the type of this alert.
getType()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get the type of the HID.
getType()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Gets the module type for this power distribution object.
getType()
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Returns the component type.
getType(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the type of PowerDistribution module.
getType(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT entry type.
getTypeClass()
- Method in class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
getTypeClass()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
getTypeClass()
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
getTypeClass()
- Method in class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
getTypeClass()
- Method in class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
getTypeClass()
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
getTypeClass()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
getTypeClass()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
getTypeClass()
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
getTypeClass()
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Twist2dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.proto.
Twist3dProto
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
getTypeClass()
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
getTypeClass()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
getTypeClass()
- Method in class edu.wpi.first.math.proto.
MatrixProto
getTypeClass()
- Method in class edu.wpi.first.math.proto.
VectorProto
getTypeClass()
- Method in class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
getTypeClass()
- Method in class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
getTypeClass()
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
getTypeClass()
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
getTypeClass()
- Method in class edu.wpi.first.math.struct.
MatrixStruct
getTypeClass()
- Method in class edu.wpi.first.math.struct.
VectorStruct
getTypeClass()
- Method in class edu.wpi.first.math.system.plant.proto.
DCMotorProto
getTypeClass()
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
getTypeClass()
- Method in class edu.wpi.first.math.system.proto.
LinearSystemProto
getTypeClass()
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
getTypeClass()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
getTypeClass()
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
getTypeClass()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Gets the Class object for the stored value.
getTypeClass()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the Class object for the stored value.
getTypeName()
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
getTypeName()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
getTypeName()
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
getTypeName()
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
getTypeName()
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
getTypeName()
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
getTypeName()
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
getTypeName()
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
getTypeName()
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
getTypeName()
- Method in class edu.wpi.first.math.struct.
MatrixStruct
getTypeName()
- Method in class edu.wpi.first.math.struct.
VectorStruct
getTypeName()
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
getTypeName()
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
getTypeName()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the type name (e.g.
getTypeString()
- Method in class edu.wpi.first.networktables.
Topic
Gets the type string of the topic.
getTypeString()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Gets the type string (e.g.
getTypeString()
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Gets the type string.
getTypeString()
- Method in interface edu.wpi.first.util.struct.
Struct
Gets the type string (e.g.
getTypeString()
- Method in class edu.wpi.first.util.struct.
StructBuffer
Gets the type string.
getU()
- Method in class edu.wpi.first.math.controller.
ImplicitModelFollower
Returns the control input vector u.
getU()
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns the control input vector u.
getU()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns the controller's calculated control input u plus the calculated feedforward u_ff.
getU(int)
- Method in class edu.wpi.first.math.controller.
ImplicitModelFollower
Returns an element of the control input vector u.
getU(int)
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Returns an element of the control input vector u.
getU(int)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns an element of the controller's calculated control input u.
getUff()
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Returns the previously calculated feedforward as an input vector.
getUff()
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Returns the previously calculated feedforward as an input vector.
getUff(int)
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Returns an element of the previously calculated feedforward.
getUff(int)
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Returns an element of the previously calculated feedforward.
getUintMax()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the maximum unsigned integer value that can be stored in this field.
getUintMin()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Gets the minimum unsigned integer value that can be stored in this field.
getUnit()
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
Gets the unit of the changing velocity.
getUnit()
- Method in class edu.wpi.first.units.
VelocityUnit
Gets the major unit being measured (eg Meters for Meters per Second).
getUrls()
- Method in class edu.wpi.first.cscore.
HttpCamera
Get the URLs used to connect to the camera.
getUsbCameraInfo(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns USB camera info.
getUsbCameraPath(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns USB camera path.
getUserActive3V3()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the active state of the 3V3 rail.
getUserActive3V3()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserActive3V3()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 3.3V rail active state.
getUserActive5V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the active state of the 5V rail.
getUserActive5V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserActive5V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 5V rail active state.
getUserActive6V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the active state of the 6V rail.
getUserActive6V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserActive6V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 6V rail active state.
getUserButton()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the state of the "USER" button on the roboRIO.
getUserButtonPressed()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPOnBoardIO
Gets if the USER button is pressed.
getUserCurrent3V3()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 3V3 rail current.
getUserCurrent3V3()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserCurrent3V3()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 3.3V rail current.
getUserCurrent5V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 5V rail current.
getUserCurrent5V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserCurrent5V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 5V rail current.
getUserCurrent6V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 6V rail current.
getUserCurrent6V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserCurrent6V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 6V rail current.
getUserCurrentFaults3V3()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the fault count for the 3V3 rail.
getUserCurrentFaults5V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the fault count for the 5V rail.
getUserCurrentFaults6V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the fault count for the 6V rail.
getUserFaults3V3()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserFaults3V3()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 3.3V rail number of faults.
getUserFaults5V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserFaults5V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 5V rail number of faults.
getUserFaults6V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserFaults6V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Get the 6V rail number of faults.
getUserVoltage3V3()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 3V3 rail voltage.
getUserVoltage3V3()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserVoltage3V3()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 3.3V rail voltage.
getUserVoltage5V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 5V rail voltage.
getUserVoltage5V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserVoltage5V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 5V rail voltage.
getUserVoltage6V()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the 6V rail voltage.
getUserVoltage6V()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getUserVoltage6V()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the 6V rail voltage.
getValue()
- Method in enum class edu.wpi.first.cscore.
CameraServerJNI.TelemetryKind
Returns telemetry kind value.
getValue()
- Method in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
Returns HttpCameraKind value.
getValue()
- Method in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Returns the kind value.
getValue()
- Method in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Returns the Kind value.
getValue()
- Method in enum class edu.wpi.first.cscore.
VideoSink.Kind
Returns the Kind value.
getValue()
- Method in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Returns the ConnectionStrategy value.
getValue()
- Method in enum class edu.wpi.first.cscore.
VideoSource.Kind
Returns the Kind value.
getValue()
- Method in class edu.wpi.first.hal.
SimValue
Gets the simulated value.
getValue()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
optional double value = 1;
getValue()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Gets the entry's value.
getValue()
- Method in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Returns the NetworkTable event kind value.
getValue()
- Method in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Returns the network mode value.
getValue()
- Method in enum class edu.wpi.first.networktables.
NetworkTableType
Returns the NetworkTable type value.
getValue()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Get the data value stored.
getValue()
- Method in enum class edu.wpi.first.util.
PixelFormat
Gets the integer value of the pixel format.
getValue()
- Method in enum class edu.wpi.first.util.
TimestampSource
Gets the integer value of the pixel format.
getValue()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get a sample straight from this channel.
getValue()
- Method in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Returns the CompressorConfigType's value.
getValue()
- Method in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Returns the DMAReadStatus value.
getValue()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Read the value of the DIO port.
getValue(boolean, boolean)
- Static method in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Create a wait result enum.
getValue(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
getValue(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns entry's NT value.
getValue(int)
- Static method in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Constructs a DMAReadStatus from a raw value.
getValue(int)
- Static method in enum class edu.wpi.first.wpilibj.
RuntimeType
Construct a runtime type from an int value.
getValue(String)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets the value associated with a key as an object.
getValue(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Get the property object with the given name.
getValueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Relay.Value
Returns the value for a given pretty string.
getValueStr()
- Method in enum class edu.wpi.first.networktables.
NetworkTableType
Returns the NetworkTable type value as as string.
getVelocity()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double velocity = 2;
getVelocityError()
- Method in class edu.wpi.first.math.controller.
PIDController
Deprecated, for removal: This API element is subject to removal in a future version.
Use getErrorDerivative() instead.
getVelocityError()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the change in error per second.
getVelocityMetersPerSecond()
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns the velocity of the elevator.
getVelocityRadPerSec()
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns the current arm velocity.
getVelocityTolerance()
- Method in class edu.wpi.first.math.controller.
PIDController
Deprecated, for removal: This API element is subject to removal in a future version.
Use getErrorDerivativeTolerance() instead.
getVelocityTolerance()
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Returns the velocity tolerance of this controller.
getVersion()
- Method in class edu.wpi.first.util.datalog.
DataLogReader
Gets the data log version.
getVersion()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
Returns the hardware and firmware versions of this device.
getVersion()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Returns the power distribution version number.
getVersion(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Get the version of the PowerDistribution.
getVersion(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Returns the hardware and firmware versions of the PH.
getVex775Pro(int)
- Static method in class edu.wpi.first.math.system.plant.
DCMotor
Return a gearbox of 775Pro motors.
getVideo()
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Get OpenCV access to the primary camera feed.
getVideo(VideoSource)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Get OpenCV access to the specified camera.
getVideo(VideoSource, PixelFormat)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Get OpenCV access to the specified camera.
getVideo(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Get OpenCV access to the specified camera.
getVideoMode()
- Method in class edu.wpi.first.cscore.
VideoSource
Get the current video mode.
getVinCurrent()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the roboRIO input current.
getVInCurrent()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getVInCurrent()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the Vin current.
getVinVoltage()
- Static method in class edu.wpi.first.hal.
PowerJNI
Gets the roboRIO input voltage.
getVInVoltage()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
getVInVoltage()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Measure the Vin voltage.
getVoltage()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Get a scaled sample straight from this channel.
getVoltage()
- Method in class edu.wpi.first.wpilibj.
AnalogOutput
Get the voltage of the analog output.
getVoltage()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Gets the voltage output of the motor controller, nominally between -12 V and 12 V.
getVoltage()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Query the input voltage of the PDP/PDH.
getVoltage()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Get the voltage.
getVoltage()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Read the analog output voltage.
getVoltage()
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Check the PDP voltage.
getVoltage(double, double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Calculate the voltage provided to the motor for a given torque and angular velocity.
getVoltage(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the PowerDistribution input voltage.
getVoltage(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
getVoltage(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
getVoltage(int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
getVoltage3V3()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage of the 3.3V rail.
getVoltage5V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage of the 5V rail.
getVoltage6V()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Get the voltage of the 6V rail.
getVoltageNoError(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Gets the PowerDistribution input voltage without throwing any errors.
getVx()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vx = 1;
getVy()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vy = 2;
getW()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns W component of the quaternion.
getW()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double w = 1;
getWc()
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Returns the weight for each sigma point for the covariance.
getWc(int)
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Returns an element of the weight for each sigma point for the covariance.
getWidgetName()
- Method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
getWidgetName()
- Method in interface edu.wpi.first.wpilibj.shuffleboard.
WidgetType
Gets the string type of the widget as defined by that widget in Shuffleboard.
getWidth()
- Method in class edu.wpi.first.util.
RawFrame
Get the width of the image.
getWm()
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Returns the weight for each sigma point for the mean.
getWm(int)
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Returns an element of the weight for each sigma point for the mean.
getX()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the X component of the pose's translation.
getX()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the X component of the pose's translation.
getX()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns X component of the quaternion.
getX()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the X axis (roll) in radians.
getX()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the X component of the transformation's translation.
getX()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the X component of the transformation's translation.
getX()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the X component of the translation.
getX()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the X component of the translation.
getX()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double x = 1;
getX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double x = 2;
getX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double x = 1;
getX()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Returns the acceleration along the X axis in g-forces.
getX()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Returns the acceleration along the X axis in g-forces.
getX()
- Method in class edu.wpi.first.wpilibj.
ADXL362
Returns the acceleration along the X axis in g-forces.
getX()
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
The acceleration in the X axis.
getX()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the X value of the joystick.
getX()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Measure the X axis value.
getX()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Measure the X axis value.
getX()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the x position of the HID.
getX(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
getX(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
getXButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the X button on the controller.
getXButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the X button on the controller.
getXButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the X button was pressed since the last check.
getXButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the X button was pressed since the last check.
getXButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the X button was released since the last check.
getXButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the X button was released since the last check.
getXChannel()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the channel currently associated with the X axis.
getXChannel()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the channel currently associated with the X axis.
getXComplementaryAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the complementary angle around the X axis computed from accelerometer and gyro rate
 measurements.
getXComplementaryAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the complementary angle around the X axis computed from accelerometer and gyro rate
 measurements.
getXController()
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns the x controller.
getXFilteredAccelAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the X-axis filtered acceleration angle in degrees.
getXFilteredAccelAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the X-axis filtered acceleration angle in degrees.
getXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
This method returns the internal storage object without modifying any has state.
getXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
This method returns the internal storage object without modifying any has state.
getXhat()
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Returns the state estimate x-hat.
getXhat()
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Returns the state estimate x-hat.
getXhat()
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Returns the state estimate.
getXhat()
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Returns the state estimate x-hat.
getXhat()
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns the state estimate x-hat.
getXhat(int)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Returns an element of the state estimate x-hat.
getXhat(int)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Returns an element of the state estimate x-hat.
getXhat(int)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Returns an element of the state estimate.
getXhat(int)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Returns an element of the state estimate x-hat.
getXhat(int)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Returns an element of the state estimate x-hat.
getXHat()
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns the observer's state estimate x-hat.
getXHat(int)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Returns an element of the observer's state estimate x-hat.
getXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
This method returns the internal storage object without modifying any has state.
getXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
This method returns the internal storage object without modifying any has state.
getXSemiAxis()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the x semi-axis.
getXSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double xSemiAxis = 2;
getXWidth()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the x size component of the rectangle.
getXWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double xWidth = 2;
getY()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the Y component of the pose's translation.
getY()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the Y component of the pose's translation.
getY()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns Y component of the quaternion.
getY()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the Y axis (pitch) in radians.
getY()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns the Y component of the transformation's translation.
getY()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the Y component of the transformation's translation.
getY()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the Y component of the translation.
getY()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the Y component of the translation.
getY()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double y = 2;
getY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double y = 3;
getY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double y = 2;
getY()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Returns the acceleration along the Y axis in g-forces.
getY()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Returns the acceleration along the Y axis in g-forces.
getY()
- Method in class edu.wpi.first.wpilibj.
ADXL362
Returns the acceleration along the Y axis in g-forces.
getY()
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
The acceleration in the Y axis.
getY()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the Y value of the joystick.
getY()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Measure the Y axis value.
getY()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Measure the Y axis value.
getY()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the y position of the HID.
getY(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
getY(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
getYawAxis()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns which axis, kX, kY, or kZ, is set to the yaw axis.
getYawAxis()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns which axis, kX, kY, or kZ, is set to the yaw axis.
getYButton()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Read the value of the Y button on the controller.
getYButton()
- Method in class edu.wpi.first.wpilibj.
XboxController
Read the value of the Y button on the controller.
getYButtonPressed()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the Y button was pressed since the last check.
getYButtonPressed()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the Y button was pressed since the last check.
getYButtonReleased()
- Method in class edu.wpi.first.wpilibj.
StadiaController
Whether the Y button was released since the last check.
getYButtonReleased()
- Method in class edu.wpi.first.wpilibj.
XboxController
Whether the Y button was released since the last check.
getYChannel()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the channel currently associated with the Y axis.
getYChannel()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the channel currently associated with the Y axis.
getYComplementaryAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the complementary angle around the Y axis computed from accelerometer and gyro rate
 measurements.
getYComplementaryAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the complementary angle around the Y axis computed from accelerometer and gyro rate
 measurements.
getYController()
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Returns the y controller.
getYFilteredAccelAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Returns the Y-axis filtered acceleration angle in degrees.
getYFilteredAccelAngle()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Returns the Y-axis filtered acceleration angle in degrees.
getYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
This method returns the internal storage object without modifying any has state.
getYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
This method returns the internal storage object without modifying any has state.
getYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
This method returns the internal storage object without modifying any has state.
getYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
This method returns the internal storage object without modifying any has state.
getYSemiAxis()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the y semi-axis.
getYSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double ySemiAxis = 3;
getYWidth()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the y size component of the rectangle.
getYWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double yWidth = 3;
getZ()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the Z component of the pose's translation.
getZ()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns Z component of the quaternion.
getZ()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns the counterclockwise rotation angle around the Z axis (yaw) in radians.
getZ()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns the Z component of the transformation's translation.
getZ()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the Z component of the translation.
getZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double z = 4;
getZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double z = 3;
getZ()
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Returns the acceleration along the Z axis in g-forces.
getZ()
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Returns the acceleration along the Z axis in g-forces.
getZ()
- Method in class edu.wpi.first.wpilibj.
ADXL362
Returns the acceleration along the Z axis in g-forces.
getZ()
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
The acceleration in the Z axis.
getZ()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the z position of the HID.
getZ()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Measure the Z axis value.
getZ()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Measure the Z axis value.
getZ()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the z position of the HID.
getZ(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
getZ(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
getZChannel()
- Method in class edu.wpi.first.wpilibj.
Joystick
Get the channel currently associated with the Z axis.
getZChannel()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Get the channel currently associated with the Z axis.
getZeroLatch()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Check whether the PWM is zero latched.
getZeroLatch(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
google()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the google button's digital signal.
google(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the google button's digital signal.
google(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the google button's digital signal.
GP2Y0A02YK0F(int)
- Static method in class edu.wpi.first.wpilibj.
SharpIR
Sharp GP2Y0A02YK0F is an analog IR sensor capable of measuring distances from 20cm to 150cm.
GP2Y0A21YK0F(int)
- Static method in class edu.wpi.first.wpilibj.
SharpIR
Sharp GP2Y0A21YK0F is an analog IR sensor capable of measuring distances from 10cm to 80cm.
GP2Y0A41SK0F(int)
- Static method in class edu.wpi.first.wpilibj.
SharpIR
Sharp GP2Y0A41SK0F is an analog IR sensor capable of measuring distances from 4cm to 30cm.
GP2Y0A51SK0F(int)
- Static method in class edu.wpi.first.wpilibj.
SharpIR
Sharp GP2Y0A51SK0F is an analog IR sensor capable of measuring distances from 2cm to 15cm.
grabFrame(RawFrame)
- Method in class edu.wpi.first.cscore.raw.
RawSink
Wait for the next frame and get the image.
grabFrame(RawFrame, double)
- Method in class edu.wpi.first.cscore.raw.
RawSink
Wait for the next frame and get the image.
grabFrame(Mat)
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and get the image.
grabFrame(Mat, double)
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and get the image.
grabFrameDirect()
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and store the image.
grabFrameDirect(double)
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and store the image.
grabFrameNoTimeout(RawFrame)
- Method in class edu.wpi.first.cscore.raw.
RawSink
Wait for the next frame and get the image.
grabFrameNoTimeout(Mat)
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and get the image.
grabFrameNoTimeoutDirect()
- Method in class edu.wpi.first.cscore.
CvSink
Wait for the next frame and store the image.
grabRawSinkFrame(int, RawFrame, long)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns raw sink frame.
grabRawSinkFrameTimeout(int, RawFrame, long, double)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns raw sink frame timeout.
gradient(LEDPattern.GradientType, Color...)
- Static method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that displays a non-animated gradient of colors across the entire length of
 the LED strip.
Gram
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Kilogram
.
Grams
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Kilogram
.
green
- Variable in class edu.wpi.first.wpilibj.util.
Color
Green component (0-1).
green
- Variable in class edu.wpi.first.wpilibj.util.
Color8Bit
Green component (0-255).
Gs
- Static variable in class edu.wpi.first.units.
Units
A unit of acceleration equivalent to the pull of gravity on an object at sea level on Earth.
gt(Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is greater than another measure of the same unit.
gte(Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is greater than or equivalent to another measure of the same unit.
H
HAL
- Class in
edu.wpi.first.hal
JNI Wrapper for Hardware Abstraction Layer (HAL).
HAL.SimPeriodicAfterCallback
- Class in
edu.wpi.first.hal
A callback to be run by IterativeRobotBase after the user's simulationPeriodic code.
HAL.SimPeriodicBeforeCallback
- Class in
edu.wpi.first.hal
A callback to be run by IterativeRobotBase prior to the user's simulationPeriodic code.
HalHandleException
- Exception in
edu.wpi.first.hal.util
Exception indicating that an error has occurred with a HAL Handle.
HalHandleException(String)
- Constructor for exception edu.wpi.first.hal.util.
HalHandleException
Create a new HalHandleException.
HalInvalidHandle
- Static variable in class edu.wpi.first.hal.
InterruptJNI
Invalid handle value.
HALUtil
- Class in
edu.wpi.first.hal
Hardware Abstraction Layer (HAL) Utilities JNI Functions.
HALValue
- Class in
edu.wpi.first.hal
Represents a HAL entry value.
hamburger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the hamburger button's digital signal.
hamburger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the hamburger button's digital signal.
hamburger(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the hamburger button's digital signal.
handle
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimDeviceInfo
handle
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimValueInfo
handle(Throwable, ClassSpecificLogger<?>)
- Method in class edu.wpi.first.epilogue.logging.errors.
CrashOnError
handle(Throwable, ClassSpecificLogger<?>)
- Method in interface edu.wpi.first.epilogue.logging.errors.
ErrorHandler
Handles an exception that arose while logging.
handle(Throwable, ClassSpecificLogger<?>)
- Method in class edu.wpi.first.epilogue.logging.errors.
ErrorPrinter
handle(Throwable, ClassSpecificLogger<?>)
- Method in class edu.wpi.first.epilogue.logging.errors.
LoggerDisabler
handleInterrupt(Runnable)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a lambda to call on interrupt, following the command's inherent
Command.end(boolean)
method.
HardwareFault
- Variable in class edu.wpi.first.hal.
PowerDistributionFaults
The hardware on the device has malfunctioned.
HardwareFault
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
The hardware on the device has malfunctioned.
HardwareFault
- Variable in class edu.wpi.first.hal.
REVPHFaults
The hardware on the device has malfunctioned.
HardwareFault
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The hardware on the device has malfunctioned.
hardwareMajor
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Hardware major version number.
hardwareMajor
- Variable in class edu.wpi.first.hal.
REVPHVersion
The hardware major version.
hardwareMinor
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Hardware minor version number.
hardwareMinor
- Variable in class edu.wpi.first.hal.
REVPHVersion
The hardware minor version.
hasA()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix a = 4;
hasAcceleration()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double acceleration = 3;
hasAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional .wpi.proto.ProtobufRotation2d angle = 2;
hasAngle()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional .wpi.proto.ProtobufRotation2d angle = 2;
hasB()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix b = 5;
hasC()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix c = 6;
hasCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional .wpi.proto.ProtobufPose2d center = 1;
hasCenter()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional .wpi.proto.ProtobufPose2d center = 1;
hasCurvature()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double curvature = 5;
hasD()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix d = 7;
hasData()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
repeated double data = 3;
hasDistance()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional double distance = 1;
hasDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double dt = 5;
hasDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double dt = 5;
hasDt()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double dt = 4;
hasDtheta()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dtheta = 3;
hasDx()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dx = 1;
hasDx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dx = 1;
hasDy()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dy = 2;
hasDy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dy = 2;
hasDz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dz = 3;
hasElapsed(double)
- Method in class edu.wpi.first.wpilibj.
Timer
Check if the period specified has passed.
hasEnum()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Returns whether the field has enumerated values.
hasFreeCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_current = 4;
hasFreeSpeed()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_speed = 5;
hasFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_left = 1;
hasFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_left = 1;
hasFrontLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_left = 1;
hasFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_right = 2;
hasFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_right = 2;
hasFrontRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_right = 2;
hashCode()
- Method in class edu.wpi.first.apriltag.
AprilTag
hashCode()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector.Config
hashCode()
- Method in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
hashCode()
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
hashCode()
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
hashCode()
- Method in class edu.wpi.first.cscore.
VideoMode
hashCode()
- Method in class edu.wpi.first.cscore.
VideoSink
hashCode()
- Method in class edu.wpi.first.cscore.
VideoSource
hashCode()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Pose2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Pose3d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Quaternion
hashCode()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Transform2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Transform3d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Translation2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Translation3d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Twist2d
hashCode()
- Method in class edu.wpi.first.math.geometry.
Twist3d
hashCode()
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
hashCode()
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
hashCode()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
hashCode()
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
hashCode()
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
hashCode()
- Method in class edu.wpi.first.math.
Matrix
hashCode()
- Method in class edu.wpi.first.math.
Pair
hashCode()
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile.State
hashCode()
- Method in class edu.wpi.first.math.trajectory.
Trajectory
hashCode()
- Method in class edu.wpi.first.math.trajectory.
Trajectory.State
hashCode()
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
hashCode()
- Method in class edu.wpi.first.networktables.
NetworkTable
hashCode()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
hashCode()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
hashCode()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
hashCode()
- Method in class edu.wpi.first.networktables.
ProtobufTopic
hashCode()
- Method in class edu.wpi.first.networktables.
StructArrayTopic
hashCode()
- Method in class edu.wpi.first.networktables.
StructTopic
hashCode()
- Method in class edu.wpi.first.networktables.
Topic
hashCode()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Returns a hash code value for this object.
hashCode()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Returns a hash code value for this object.
hashCode()
- Method in class edu.wpi.first.units.
MultUnit
hashCode()
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
hashCode()
- Method in class edu.wpi.first.units.
PerUnit
hashCode()
- Method in class edu.wpi.first.units.
Unit
hashCode()
- Method in class edu.wpi.first.wpilibj.util.
Color
hashCode()
- Method in class edu.wpi.first.wpilibj.util.
Color8Bit
hashCode()
- Method in class edu.wpi.first.wpilibj.
Watchdog
hasHitLowerLimit()
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns whether the elevator has hit the lower limit.
hasHitLowerLimit()
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns whether the arm has hit the lower limit.
hasHitUpperLimit()
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns whether the elevator has hit the upper limit.
hasHitUpperLimit()
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns whether the arm has hit the upper limit.
hasImplementation()
- Method in class edu.wpi.first.net.
MulticastServiceAnnouncer
Returns true if there's a multicast service announcer implementation.
hasImplementation()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
Returns true if there's a multicast service resolver implementation.
hasKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ka = 4;
hasKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ka = 4;
hasKa()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ka = 3;
hasKaAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_angular = 4;
hasKaLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_linear = 2;
hasKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kg = 2;
hasKg()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kg = 2;
hasKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ks = 1;
hasKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ks = 1;
hasKs()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ks = 1;
hasKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kv = 3;
hasKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kv = 3;
hasKv()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double kv = 2;
hasKvAngular()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_angular = 3;
hasKvLinear()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_linear = 1;
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Gets whether there is a last value.
hasLastValue()
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Gets whether there is a last value.
hasLeft()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double left = 1;
hasLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double left = 1;
hasLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double left = 1;
hasMain()
- Static method in class edu.wpi.first.hal.
HAL
Returns true if HAL_SetMain() has been called.
hasModules()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
repeated .wpi.proto.ProtobufTranslation2d modules = 1;
hasNext()
- Method in class edu.wpi.first.util.datalog.
DataLogIterator
hasNominalVoltage()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double nominal_voltage = 1;
hasNumCols()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_cols = 2;
hasNumInputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_inputs = 2;
hasNumOutputs()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_outputs = 3;
hasNumRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_rows = 1;
hasNumStates()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_states = 1;
hasOmega()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double omega = 3;
hasPose()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional .wpi.proto.ProtobufPose2d pose = 4;
hasQ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
optional .wpi.proto.ProtobufQuaternion q = 1;
hasRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_left = 3;
hasRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_left = 3;
hasRearLeft()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_left = 3;
hasRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_right = 4;
hasRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_right = 4;
hasRearRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_right = 4;
hasRequirement(Subsystem)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Whether the command requires a given subsystem.
HasReset
- Variable in class edu.wpi.first.hal.
PowerDistributionStickyFaults
The device has rebooted.
HasReset
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
The device has rebooted.
hasRight()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double right = 2;
hasRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double right = 2;
hasRight()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double right = 2;
hasRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
hasRotation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
hasRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
hasRotation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
hasRows()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
repeated double rows = 1;
hasRx()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rx = 4;
hasRy()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double ry = 5;
hasRz()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rz = 6;
hasSchema(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Returns whether there is a data schema already registered with the given name that this
 instance has published.
hasSchema(String)
- Method in class edu.wpi.first.util.datalog.
DataLog
Returns whether there is a data schema already registered with the given name.
hasSpeed()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional double speed = 1;
hasStallCurrent()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_current = 3;
hasStallTorque()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_torque = 2;
hasStates()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
repeated .wpi.proto.ProtobufTrajectoryState states = 2;
hasTime()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double time = 1;
hasTrackWidth()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
optional double track_width = 1;
hasTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
hasTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
hasTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
hasTranslation()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
hasValue()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
optional double value = 1;
hasVelocity()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double velocity = 2;
hasVx()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vx = 1;
hasVy()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vy = 2;
hasW()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double w = 1;
hasX()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double x = 1;
hasX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double x = 2;
hasX()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double x = 1;
hasXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_final = 2;
hasXFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_final = 2;
hasXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double x_initial = 1;
hasXInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double x_initial = 1;
hasXSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double xSemiAxis = 2;
hasXWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double xWidth = 2;
hasY()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double y = 2;
hasY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double y = 3;
hasY()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double y = 2;
hasYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_final = 4;
hasYFinal()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_final = 4;
hasYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
repeated double y_initial = 3;
hasYInitial()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
repeated double y_initial = 3;
hasYSemiAxis()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double ySemiAxis = 3;
hasYWidth()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double yWidth = 3;
hasZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double z = 4;
hasZ()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double z = 3;
height
- Variable in class edu.wpi.first.cscore.
VideoMode
Height in pixels.
Hertz
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of frequency, equivalent to a periodic signal repeating once every
Units.Second
.
hidden
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For subscriptions, don't share the existence of the subscription with the network.
hidden(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
For subscriptions, don't share the existence of the subscription with the network.
highPass(double, double)
- Static method in class edu.wpi.first.math.filter.
LinearFilter
Creates a first-order high-pass filter of the form: y[n] = gain x[n] + (-gain) x[n-1] + gain
 y[n-1] where gain = e
-dt / T
, T is the time constant in seconds.
HolonomicDriveController
- Class in
edu.wpi.first.math.controller
This holonomic drive controller can be used to follow trajectories using a holonomic drivetrain
 (i.e.
HolonomicDriveController(PIDController, PIDController, ProfiledPIDController)
- Constructor for class edu.wpi.first.math.controller.
HolonomicDriveController
Constructs a holonomic drive controller.
Horsepower
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 745.7
Units.Watts
.
hsvToRgb(int, int, int)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Converts HSV values to RGB values.
HttpCamera
- Class in
edu.wpi.first.cscore
A source that represents a MJPEG-over-HTTP (IP) camera.
HttpCamera(String, String)
- Constructor for class edu.wpi.first.cscore.
HttpCamera
Create a source for a MJPEG-over-HTTP (IP) camera.
HttpCamera(String, String[])
- Constructor for class edu.wpi.first.cscore.
HttpCamera
Create a source for a MJPEG-over-HTTP (IP) camera.
HttpCamera(String, String[], HttpCamera.HttpCameraKind)
- Constructor for class edu.wpi.first.cscore.
HttpCamera
Create a source for a MJPEG-over-HTTP (IP) camera.
HttpCamera(String, String, HttpCamera.HttpCameraKind)
- Constructor for class edu.wpi.first.cscore.
HttpCamera
Create a source for a MJPEG-over-HTTP (IP) camera.
HttpCamera.HttpCameraKind
- Enum Class in
edu.wpi.first.cscore
HTTP camera kind.
Hybrid
- Enum constant in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Hybrid.
I
I2C
- Class in
edu.wpi.first.wpilibj
I2C bus interface class.
I2C(I2C.Port, int)
- Constructor for class edu.wpi.first.wpilibj.
I2C
Constructor.
I2C.Port
- Enum Class in
edu.wpi.first.wpilibj
I2C connection ports.
i2CClose(int)
- Static method in class edu.wpi.first.hal.
I2CJNI
Closes an I2C port.
I2CDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for I2C data.
i2CInitialize(int)
- Static method in class edu.wpi.first.hal.
I2CJNI
Initializes the I2C port.
I2CJNI
- Class in
edu.wpi.first.hal
I2C HAL JNI functions.
i2CRead(int, byte, ByteBuffer, byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Executes a read transaction with the device.
i2CReadB(int, byte, byte[], byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Executes a read transaction with the device.
I2CSim
- Class in
edu.wpi.first.wpilibj.simulation
A class to control a simulated I2C device.
I2CSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
I2CSim
Construct a new I2C simulation object.
i2CTransaction(int, byte, ByteBuffer, byte, ByteBuffer, byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Generic I2C read/write transaction.
i2CTransactionB(int, byte, byte[], byte, byte[], byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Generic I2C read/write transaction.
i2CWrite(int, byte, ByteBuffer, byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Executes a write transaction with the device.
i2CWriteB(int, byte, byte[], byte)
- Static method in class edu.wpi.first.hal.
I2CJNI
Executes a write transaction with the device.
id
- Variable in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
The device type ID.
id
- Variable in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
The manufacturer ID.
ID
- Variable in class edu.wpi.first.apriltag.
AprilTag
The tag's ID.
identifyDrivetrainSystem(double, double, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Identify a differential drive drivetrain given the drivetrain's kV and kA in both linear
 {(volts/(meter/sec), (volts/(meter/sec²))} and angular {(volts/(radian/sec)),
 (volts/(radian/sec²))} cases.
identifyDrivetrainSystem(double, double, double, double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Identify a differential drive drivetrain given the drivetrain's kV and kA in both linear
 {(volts/(meter/sec)), (volts/(meter/sec²))} and angular {(volts/(radian/sec)),
 (volts/(radian/sec²))} cases.
identifyPositionSystem(double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model for a 1 DOF position system from its kV (volts/(unit/sec)) and kA
 (volts/(unit/sec²).
identifyVelocitySystem(double, double)
- Static method in class edu.wpi.first.math.system.plant.
LinearSystemId
Create a state-space model for a 1 DOF velocity system from its kV (volts/(unit/sec)) and kA
 (volts/(unit/sec²).
IDENTITY
- Static variable in interface edu.wpi.first.units.
UnaryFunction
The identity function that simply returns the input value.
idle(Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that does nothing until interrupted.
ifHigh(Runnable)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Bind an action to this event.
ignoringDisable(boolean)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to run or stop when disabled.
ImageSink
- Class in
edu.wpi.first.cscore
A base class for single image reading sinks.
ImageSink(int)
- Constructor for class edu.wpi.first.cscore.
ImageSink
Constructs an ImageSink.
ImageSource
- Class in
edu.wpi.first.cscore
A base class for single image providing sources.
ImageSource(int)
- Constructor for class edu.wpi.first.cscore.
ImageSource
Constructs an ImageSource.
ImmutableAcceleration
<
D
extends
Unit
> - Record Class in
edu.wpi.first.units.measure
ImmutableAcceleration(double, double, AccelerationUnit<D>)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableAcceleration
Creates an instance of a
ImmutableAcceleration
record class.
ImmutableAngle
- Record Class in
edu.wpi.first.units.measure
ImmutableAngle(double, double, AngleUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableAngle
Creates an instance of a
ImmutableAngle
record class.
ImmutableAngularAcceleration
- Record Class in
edu.wpi.first.units.measure
ImmutableAngularAcceleration(double, double, AngularAccelerationUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Creates an instance of a
ImmutableAngularAcceleration
record class.
ImmutableAngularMomentum
- Record Class in
edu.wpi.first.units.measure
ImmutableAngularMomentum(double, double, AngularMomentumUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Creates an instance of a
ImmutableAngularMomentum
record class.
ImmutableAngularVelocity
- Record Class in
edu.wpi.first.units.measure
ImmutableAngularVelocity(double, double, AngularVelocityUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Creates an instance of a
ImmutableAngularVelocity
record class.
ImmutableCurrent
- Record Class in
edu.wpi.first.units.measure
ImmutableCurrent(double, double, CurrentUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableCurrent
Creates an instance of a
ImmutableCurrent
record class.
ImmutableDimensionless
- Record Class in
edu.wpi.first.units.measure
ImmutableDimensionless(double, double, DimensionlessUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableDimensionless
Creates an instance of a
ImmutableDimensionless
record class.
ImmutableDistance
- Record Class in
edu.wpi.first.units.measure
ImmutableDistance(double, double, DistanceUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableDistance
Creates an instance of a
ImmutableDistance
record class.
ImmutableEnergy
- Record Class in
edu.wpi.first.units.measure
ImmutableEnergy(double, double, EnergyUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableEnergy
Creates an instance of a
ImmutableEnergy
record class.
ImmutableForce
- Record Class in
edu.wpi.first.units.measure
ImmutableForce(double, double, ForceUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableForce
Creates an instance of a
ImmutableForce
record class.
ImmutableFrequency
- Record Class in
edu.wpi.first.units.measure
ImmutableFrequency(double, double, FrequencyUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableFrequency
Creates an instance of a
ImmutableFrequency
record class.
ImmutableLinearAcceleration
- Record Class in
edu.wpi.first.units.measure
ImmutableLinearAcceleration(double, double, LinearAccelerationUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Creates an instance of a
ImmutableLinearAcceleration
record class.
ImmutableLinearMomentum
- Record Class in
edu.wpi.first.units.measure
ImmutableLinearMomentum(double, double, LinearMomentumUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Creates an instance of a
ImmutableLinearMomentum
record class.
ImmutableLinearVelocity
- Record Class in
edu.wpi.first.units.measure
ImmutableLinearVelocity(double, double, LinearVelocityUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Creates an instance of a
ImmutableLinearVelocity
record class.
ImmutableMass
- Record Class in
edu.wpi.first.units.measure
ImmutableMass(double, double, MassUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableMass
Creates an instance of a
ImmutableMass
record class.
ImmutableMeasure
<
U
extends
Unit
> - Record Class in
edu.wpi.first.units
A measure holds the magnitude and unit of some dimension, such as distance, time, or speed.
ImmutableMeasure(double, double, U)
- Constructor for record class edu.wpi.first.units.
ImmutableMeasure
Creates an instance of a
ImmutableMeasure
record class.
ImmutableMomentOfInertia
- Record Class in
edu.wpi.first.units.measure
ImmutableMomentOfInertia(double, double, MomentOfInertiaUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Creates an instance of a
ImmutableMomentOfInertia
record class.
ImmutableMult
<
A
extends
Unit
,
B
extends
Unit
> - Record Class in
edu.wpi.first.units.measure
ImmutableMult(double, double, MultUnit<A, B>)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableMult
Creates an instance of a
ImmutableMult
record class.
ImmutablePer
<
Dividend
extends
Unit
,
Divisor
extends
Unit
> - Record Class in
edu.wpi.first.units.measure
ImmutablePer(double, double, PerUnit<Dividend, Divisor>)
- Constructor for record class edu.wpi.first.units.measure.
ImmutablePer
Creates an instance of a
ImmutablePer
record class.
ImmutablePower
- Record Class in
edu.wpi.first.units.measure
ImmutablePower(double, double, PowerUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutablePower
Creates an instance of a
ImmutablePower
record class.
ImmutableResistance
- Record Class in
edu.wpi.first.units.measure
ImmutableResistance(double, double, ResistanceUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableResistance
Creates an instance of a
ImmutableResistance
record class.
ImmutableTemperature
- Record Class in
edu.wpi.first.units.measure
ImmutableTemperature(double, double, TemperatureUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableTemperature
Creates an instance of a
ImmutableTemperature
record class.
ImmutableTime
- Record Class in
edu.wpi.first.units.measure
ImmutableTime(double, double, TimeUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableTime
Creates an instance of a
ImmutableTime
record class.
ImmutableTorque
- Record Class in
edu.wpi.first.units.measure
ImmutableTorque(double, double, TorqueUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableTorque
Creates an instance of a
ImmutableTorque
record class.
ImmutableVelocity
<
D
extends
Unit
> - Record Class in
edu.wpi.first.units.measure
ImmutableVelocity(double, double, VelocityUnit<D>)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableVelocity
Creates an instance of a
ImmutableVelocity
record class.
ImmutableVoltage
- Record Class in
edu.wpi.first.units.measure
ImmutableVoltage(double, double, VoltageUnit)
- Constructor for record class edu.wpi.first.units.measure.
ImmutableVoltage
Creates an instance of a
ImmutableVoltage
record class.
ImplicitModelFollower
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.controller
Contains the controller coefficients and logic for an implicit model follower.
ImplicitModelFollower(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<States, Inputs>)
- Constructor for class edu.wpi.first.math.controller.
ImplicitModelFollower
Constructs a controller with the given coefficients and plant.
ImplicitModelFollower(LinearSystem<States, Inputs, Outputs>, LinearSystem<States, Inputs, Outputs>)
- Constructor for class edu.wpi.first.math.controller.
ImplicitModelFollower
Constructs a controller with the given coefficients and plant.
importance()
- Element in annotation interface edu.wpi.first.epilogue.
Logged
The importance of the annotated data.
in(AccelerationUnit<D>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
in(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
in(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
in(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
in(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
in(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Current
in(DimensionlessUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
in(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
in(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
in(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Force
in(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
in(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
in(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
in(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
in(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
in(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
in(MultUnit<A, B>)
- Method in interface edu.wpi.first.units.measure.
Mult
in(PerUnit<Dividend, Divisor>)
- Method in interface edu.wpi.first.units.measure.
Per
in(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Power
in(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
in(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
in(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Time
in(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
in(VelocityUnit<D>)
- Method in interface edu.wpi.first.units.measure.
Velocity
in(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
in(U)
- Method in interface edu.wpi.first.units.
Measure
Converts this measure to a measure with a different unit of the same type, eg minutes to
 seconds.
inAutonomous(boolean)
- Method in class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
Only to be used to tell the Driver Station what code you claim to be executing for diagnostic
 purposes only.
Inch
- Static variable in class edu.wpi.first.units.
Units
25.4/1000 of a
Units.Meter
and 1/12 of a
Units.Foot
.
Inches
- Static variable in class edu.wpi.first.units.
Units
25.4/1000 of a
Units.Meter
and 1/12 of a
Units.Foot
.
InchesPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of linear velocity equivalent to travelling at a rate of one
Inch
per
Units.Second
.
inchesToMeters(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given inches to meters.
INCOMPATIBLE_STATE
- Static variable in class edu.wpi.first.hal.
HALUtil
The operation cannot be completed.
inDisabled(boolean)
- Method in class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
Only to be used to tell the Driver Station what code you claim to be executing for diagnostic
 purposes only.
inflectionTime
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.ProfileTiming
Profile inflection time.
INFO
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Importance
Informational data.
initAccumulator()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Initialize the accumulator.
initAccumulator(double, int, int, int, int, int, int, boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
SPI
Initialize the accumulator.
initAccumulator(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Initialize the accumulator.
initAuto(int)
- Method in class edu.wpi.first.wpilibj.
SPI
Initialize automatic SPI transfer engine.
initBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given boolean into the preferences table if it doesn't already exist.
initDouble(String, double)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given double into the preferences table if it doesn't already exist.
initFloat(String, float)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given float into the preferences table if it doesn't already exist.
initialize()
- Static method in class edu.wpi.first.hal.
DMAJNI
Initializes an object for performing DMA transfers.
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
Command
The initial subroutine of a command.
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
DeferredCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
FunctionalCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
NotifierCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
RamseteCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
ScheduleCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileCommand
Deprecated.
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
WaitCommand
initialize()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
The initial subroutine of a command.
initialize(int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Initialize Addressable LED using a PWM Digital handle.
initialize(int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Initializes a PCM.
initialize(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Initializes a PH.
initialize(int, int)
- Static method in class edu.wpi.first.hal.
DutyCycleJNI
Initialize a DutyCycle input.
initialize(int, int)
- Static method in class edu.wpi.first.hal.
HAL
Call this to start up HAL.
initialize(int, int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Initializes a Power Distribution Panel.
initializeAnalogGyro(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Initializes an analog gyro.
initializeAnalogInputPort(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Initializes the analog input port using the given port object.
initializeAnalogOutputPort(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Initializes the analog output port using the given port object.
initializeAnalogTrigger(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Initializes an analog trigger.
initializeAnalogTriggerDutyCycle(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Initializes an analog trigger with a Duty Cycle input.
initializeCAN(int, int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Initializes a CAN device.
initializeCounter(int, IntBuffer)
- Static method in class edu.wpi.first.hal.
CounterJNI
Initializes a counter.
initializeDIOPort(int, boolean)
- Static method in class edu.wpi.first.hal.
DIOJNI
Creates a new instance of a digital port.
initializeEncoder(int, int, int, int, boolean, int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Initializes an encoder.
initializeInterrupts()
- Static method in class edu.wpi.first.hal.
InterruptJNI
Initializes an interrupt.
initializeNotifier()
- Static method in class edu.wpi.first.hal.
NotifierJNI
Initializes a notifier.
initializePWMPort(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Initializes a PWM port.
initializeRelayPort(int, boolean)
- Static method in class edu.wpi.first.hal.
RelayJNI
Initializes a relay.
initInt(String, int)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given int into the preferences table if it doesn't already exist.
initLong(String, long)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given long into the preferences table if it doesn't already exist.
initRomiMotor()
- Method in class edu.wpi.first.wpilibj.romi.
RomiMotor
Common initialization code called by all constructors.
initSendable(NTSendableBuilder)
- Method in interface edu.wpi.first.networktables.
NTSendable
Initializes this
Sendable
object.
initSendable(NTSendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
initSendable(NTSendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
initSendable(NTSendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADXL362
initSendable(NTSendableBuilder)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
initSendable(NTSendableBuilder)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
initSendable(SendableBuilder)
- Method in class edu.wpi.first.math.controller.
BangBangController
initSendable(SendableBuilder)
- Method in class edu.wpi.first.math.controller.
PIDController
initSendable(SendableBuilder)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
initSendable(SendableBuilder)
- Method in interface edu.wpi.first.networktables.
NTSendable
initSendable(SendableBuilder)
- Method in interface edu.wpi.first.util.sendable.
Sendable
Initializes this
Sendable
object.
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogAccelerometer
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogOutput
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogPotentiometer
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Compressor
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Counter
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DigitalInput
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DutyCycle
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Encoder
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
PWM
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Relay
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Servo
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
SharpIR
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
SendableCameraWrapper
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Solenoid
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
StadiaController
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj.
XboxController
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
Command
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
DeferredCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
RamseteCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
initSendable(SendableBuilder)
- Method in class edu.wpi.first.wpilibj2.command.
WaitCommand
initString(String, String)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given string into the preferences table if it doesn't already exist.
INPUT
- Enum constant in enum class edu.wpi.first.wpilibj.romi.
OnBoardIO.ChannelMode
Input.
inputModulus(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Returns modulus of input.
inputs
- Variable in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator.ObserverSnapshot
The inputs.
instance
- Static variable in class edu.wpi.first.math.numbers.
N0
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N1
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N10
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N11
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N12
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N13
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N14
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N15
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N16
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N17
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N18
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N19
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N2
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N20
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N3
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N4
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N5
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N6
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N7
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N8
The singleton instance of this class.
instance
- Static variable in class edu.wpi.first.math.numbers.
N9
The singleton instance of this class.
InstantCommand
- Class in
edu.wpi.first.wpilibj2.command
A Command that runs instantly; it will initialize, execute once, and end on the same iteration of
 the scheduler.
InstantCommand()
- Constructor for class edu.wpi.first.wpilibj2.command.
InstantCommand
Creates a new InstantCommand with a Runnable that does nothing.
InstantCommand(Runnable, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
InstantCommand
Creates a new InstantCommand that runs the given Runnable with the given requirements.
IntegerArrayEntry
- Interface in
edu.wpi.first.networktables
NetworkTables IntegerArray entry.
IntegerArrayLogEntry
- Class in
edu.wpi.first.util.datalog
Log array of integer values.
IntegerArrayLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Constructs a integer array log entry.
IntegerArrayLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Constructs a integer array log entry.
IntegerArrayLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Constructs a integer array log entry.
IntegerArrayLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Constructs a integer array log entry.
IntegerArrayPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables IntegerArray publisher.
IntegerArraySubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables IntegerArray subscriber.
IntegerArrayTopic
- Class in
edu.wpi.first.networktables
NetworkTables IntegerArray topic.
IntegerArrayTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
IntegerArrayTopic
Constructor; use NetworkTableInstance.getIntegerArrayTopic() instead.
IntegerArrayTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
IntegerArrayTopic
Construct from a generic topic.
IntegerEntry
- Interface in
edu.wpi.first.networktables
NetworkTables Integer entry.
IntegerLogEntry
- Class in
edu.wpi.first.util.datalog
Log integer values.
IntegerLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
IntegerLogEntry
Constructs a integer log entry.
IntegerLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
IntegerLogEntry
Constructs a integer log entry.
IntegerLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
IntegerLogEntry
Constructs a integer log entry.
IntegerLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
IntegerLogEntry
Constructs a integer log entry.
IntegerPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables Integer publisher.
IntegerSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables Integer subscriber.
IntegerTopic
- Class in
edu.wpi.first.networktables
NetworkTables Integer topic.
IntegerTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
IntegerTopic
Constructor; use NetworkTableInstance.getIntegerTopic() instead.
IntegerTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
IntegerTopic
Construct from a generic topic.
inTeleop(boolean)
- Method in class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
Only to be used to tell the Driver Station what code you claim to be executing for diagnostic
 purposes only.
InternalButton
- Class in
edu.wpi.first.wpilibj2.command.button
This class is intended to be used within a program.
InternalButton()
- Constructor for class edu.wpi.first.wpilibj2.command.button.
InternalButton
Creates an InternalButton that is not inverted.
InternalButton(boolean)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
InternalButton
Creates an InternalButton which is inverted depending on the input.
Interpolatable
<
T
> - Interface in
edu.wpi.first.math.interpolation
An object should extend interpolatable if you wish to interpolate between a lower and upper
 bound, such as a robot position on the field between timesteps.
interpolate(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Perform linear interpolation between two values.
interpolate(Pose2d, double)
- Method in class edu.wpi.first.math.geometry.
Pose2d
interpolate(Pose3d, double)
- Method in class edu.wpi.first.math.geometry.
Pose3d
interpolate(Rotation2d, double)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
interpolate(Rotation3d, double)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
interpolate(Translation2d, double)
- Method in class edu.wpi.first.math.geometry.
Translation2d
interpolate(Translation3d, double)
- Method in class edu.wpi.first.math.geometry.
Translation3d
interpolate(DifferentialDriveWheelPositions, double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
interpolate(DifferentialDriveWheelPositions, DifferentialDriveWheelPositions, double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
interpolate(MecanumDriveWheelPositions, double)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
interpolate(MecanumDriveWheelPositions, MecanumDriveWheelPositions, double)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
interpolate(SwerveModulePosition[], SwerveModulePosition[], double)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
interpolate(SwerveModulePosition, double)
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
interpolate(Matrix<R, C>, Matrix<R, C>, double)
- Method in class edu.wpi.first.math.
InterpolatingMatrixTreeMap
Return the value interpolated between val1 and val2 by the interpolant d.
interpolate(T, double)
- Method in interface edu.wpi.first.math.interpolation.
Interpolatable
Return the interpolated value.
interpolate(T, T, double)
- Method in interface edu.wpi.first.math.interpolation.
Interpolator
Perform interpolation between two values.
InterpolatingDoubleTreeMap
- Class in
edu.wpi.first.math.interpolation
Interpolating Tree Maps are used to get values at points that are not defined by making a guess
 from points that are defined.
InterpolatingDoubleTreeMap()
- Constructor for class edu.wpi.first.math.interpolation.
InterpolatingDoubleTreeMap
Default constructor.
InterpolatingMatrixTreeMap
<
K
extends
Number
,
R
extends
Num
,
C
extends
Num
> - Class in
edu.wpi.first.math
Interpolating Tree Maps are used to get values at points that are not defined by making a guess
 from points that are defined.
InterpolatingMatrixTreeMap()
- Constructor for class edu.wpi.first.math.
InterpolatingMatrixTreeMap
Default constructor.
InterpolatingTreeMap
<
K
,
V
> - Class in
edu.wpi.first.math.interpolation
Interpolating Tree Maps are used to get values at points that are not defined by making a guess
 from points that are defined.
InterpolatingTreeMap(InverseInterpolator<K>, Interpolator<V>)
- Constructor for class edu.wpi.first.math.interpolation.
InterpolatingTreeMap
Constructs an InterpolatingTreeMap.
InterpolatingTreeMap(InverseInterpolator<K>, Interpolator<V>, Comparator<K>)
- Constructor for class edu.wpi.first.math.interpolation.
InterpolatingTreeMap
Constructs an InterpolatingTreeMap using
comparator
.
Interpolator
<
T
> - Interface in
edu.wpi.first.math.interpolation
An interpolation function that returns a value interpolated between an upper and lower bound.
InterruptJNI
- Class in
edu.wpi.first.hal
Interrupt HAL JNI functions.
intersects(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Checks if a point is intersected by this ellipse's circumference.
intersects(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Checks if a point is intersected by the rectangle's perimeter.
inTest(boolean)
- Method in class edu.wpi.first.wpilibj.internal.
DriverStationModeThread
Only to be used to tell the Driver Station what code you claim to be executing for diagnostic
 purposes only.
inv()
- Method in class edu.wpi.first.math.
Matrix
Returns the inverse matrix of "this" matrix.
INVALID_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
Invalid port number.
InvalidValueException(String)
- Constructor for exception edu.wpi.first.wpilibj.
Relay.InvalidValueException
Create a new exception with the given message.
inverse()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns the inverse of the quaternion.
inverse()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Invert the transformation.
inverse()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Invert the transformation.
inverse(TimeUnit)
- Static method in class edu.wpi.first.units.
FrequencyUnit
Inverts a unit of time to get its corresponding frequency (as if the unit of time is the period
 of the frequency).
inverseInterpolate(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Return where within interpolation range [0, 1] q is between startValue and endValue.
inverseInterpolate(K, K, K)
- Method in class edu.wpi.first.math.
InterpolatingMatrixTreeMap
Return where within interpolation range [0, 1] q is between down and up.
inverseInterpolate(T, T, T)
- Method in interface edu.wpi.first.math.interpolation.
InverseInterpolator
Return where within interpolation range [0, 1] q is between startValue and endValue.
InverseInterpolator
<
T
> - Interface in
edu.wpi.first.math.interpolation
An inverse interpolation function which determines where within an interpolation range an object
 lies.
is(NetworkTableEvent.Kind)
- Method in class edu.wpi.first.networktables.
NetworkTableEvent
Determine if event is of a particular kind.
is32BitIntel()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is 32bit Intel.
is64BitIntel()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is 64bit Intel.
isAccumulatorChannel()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Is the channel attached to an accumulator.
isAccumulatorChannel(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Is the channel attached to an accumulator.
isActuator()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Return whether this sendable should be treated as an actuator.
isAlive()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Determine of the motor is still operating or has timed out.
isAnalogTrigger()
- Method in class edu.wpi.first.wpilibj.
AnalogTriggerOutput
isAnalogTrigger()
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Is this an analog trigger.
isAnalogTrigger()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Is this an analog trigger.
isAnalogTrigger()
- Method in class edu.wpi.first.wpilibj.
DigitalSource
Returns true if this DigitalSource is an AnalogTrigger.
isAnyPulsing()
- Static method in class edu.wpi.first.hal.
DIOJNI
Checks if any DIO line is currently generating a pulse.
isArm32()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is Arm32.
isArm64()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if architecture is Arm64.
isArray()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Returns whether the field is an array.
isAthena()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if hardware platform is Athena.
isAutonomous()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in
 autonomous mode.
isAutonomous()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be running in
 autonomous mode.
isAutonomous()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is currently in Autonomous mode as determined by the Driver Station.
isAutonomous()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is in autonomous mode.
isAutonomousEnabled()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in
 autonomous mode and enabled.
isAutonomousEnabled()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be running in
 autonomous mode and enabled.
isAutonomousEnabled()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is currently in Autonomous mode and enabled as determined by the Driver
 Station.
isBaseUnit()
- Method in class edu.wpi.first.units.
Unit
Checks if this unit is the base unit for its own system of measurement.
isBitField()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Returns whether the field is a bitfield.
isBoolean()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns true if property is a boolean.
isBoolean()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a boolean.
isBooleanArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a boolean[].
isBrownedOut()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Check if the system is browned out.
isCached()
- Method in class edu.wpi.first.networktables.
Topic
Returns whether the topic's last value is stored.
isCloneable()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Returns whether or not objects are cloneable using the clone() method.
isCloneable()
- Method in interface edu.wpi.first.util.struct.
Struct
Returns whether or not objects are cloneable using the clone() method.
isComposed(Command)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Check if the given command has been composed.
isConnected()
- Method in class edu.wpi.first.cscore.
VideoSource
Returns true if the source currently connected to whatever is providing the images.
isConnected()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Return whether or not the instance is connected to another node.
isConnected()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Checks the connection status of the IMU.
isConnected()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Checks the connection status of the IMU.
isConnected()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Determine if the gyro is connected.
isConnected()
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Get if the sensor is connected
isConnected()
- Method in class edu.wpi.first.wpilibj.
GenericHID
Get if the HID is connected.
isConnected()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Get if the HID is connected.
isConnected(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Return whether or not the instance is connected to another node.
isContinuousInputEnabled()
- Method in class edu.wpi.first.math.controller.
PIDController
Returns true if continuous input is enabled.
isControl()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Returns true if the record is a control record.
isDetectable(Matrix<States, States>, Matrix<Outputs, States>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Returns true if (A, C) is a detectable pair.
isDisabled()
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Checks if this logger has been disabled.
isDisabled()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be disabled.
isDisabled()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be disabled.
isDisabled()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the Robot is currently disabled.
isDisabled()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is disabled.
isDisabled()
- Method in class edu.wpi.first.wpilibj.
Solenoid
Check if solenoid is DisabledListed.
isDouble()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a double.
isDoubleArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a double[].
isDSAttached()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station is attached.
isDSAttached()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station is attached.
isEmpty()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
isEmpty()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
isEmpty()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
isEmpty()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
isEmpty()
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
isEmpty()
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
isEmpty()
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
isEmpty()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
isEmpty()
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
isEmpty()
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
isEmpty()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
isEmpty()
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
isEmpty()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
isEmpty()
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
isEmpty()
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Checks if the map contains any entries.
isEmpty()
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Checks if the set is empty, i.e.
isEnabled()
- Method in class edu.wpi.first.cscore.
VideoSource
Gets source enable status.
isEnabled()
- Method in class edu.wpi.first.wpilibj.
Compressor
Returns whether the compressor is active or not.
isEnabled()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be enabled.
isEnabled()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be enabled.
isEnabled()
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Returns true if LiveWindow is enabled.
isEnabled()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the Robot is currently enabled.
isEnabled()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is enabled.
isEnabled()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Is the ultrasonic enabled.
isEnabled()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Returns whether the controller is enabled.
isEnabled()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Returns whether the controller is enabled.
isEnum()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns true if property is an enum.
isEqual(Matrix<?, ?>, double)
- Method in class edu.wpi.first.math.
Matrix
Checks if another
Matrix
is equal to "this" within a specified tolerance.
isEquivalent(Measure<?>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is equivalent to another measure of the same unit.
isEStopped()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Robot is e-stopped.
isEStopped()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Robot is e-stopped.
isEStopped()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is E-stopped.
isExpired()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Returns true if the watchdog timer has expired.
isFinish()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Returns true if the record is a finish control record.
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Whether the command has finished.
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
DeferredCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
FunctionalCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
RamseteCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
ScheduleCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileCommand
Deprecated.
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
WaitCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
WaitUntilCommand
isFinished()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
Whether the command has finished.
isFinished(double)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile.ProfileTiming
Decides if the profile is finished by time t.
isFinished(double)
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile
Returns true if the profile has reached the goal.
isFloat()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a float.
isFloatArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a float[].
isFMSAttached()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets if the driver station attached to a Field Management System.
isFMSAttached()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets if the driver station attached to a Field Management System.
isFwdSolenoidDisabled()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Check if the forward solenoid is Disabled.
isIdentical(Matrix<?, ?>, double)
- Method in class edu.wpi.first.math.
Matrix
Checks if another
Matrix
is identical to "this" one within a specified tolerance.
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
isImmutable()
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
isImmutable()
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Returns whether or not objects are immutable.
isImmutable()
- Method in interface edu.wpi.first.util.struct.
Struct
Returns whether or not objects are immutable.
isInt
- Variable in enum class edu.wpi.first.util.struct.
StructFieldType
Indicates if the data type is a signed integer.
isInt()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Returns whether the field type is a signed integer.
isInteger()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns true if property is an integer.
isInteger()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a long.
isIntegerArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a long[].
isJoystickConnected(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Returns if a joystick is connected to the Driver Station.
isJoystickConnectionWarningSilenced()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Returns whether joystick connection warnings are silenced.
isLinux()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is Linux.
isLiveWindowEnabledInTest()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Whether LiveWindow operation is enabled during test mode.
isMac()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is Mac.
isNear(double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Checks if the given value matches an expected value within a certain tolerance.
isNear(double, double, double, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Checks if the given value matches an expected value within a certain tolerance.
isNear(Measure<?>, double)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is near another measure of the same unit.
isNear(Measure<U>, Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is near another measure of the same unit, with a specified tolerance of
 the same unit.
isPersistent()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Returns whether the value is persistent through program restarts.
isPersistent()
- Method in class edu.wpi.first.networktables.
Topic
Returns whether the value is persistent through server restarts.
isPersistent(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Returns whether the value is persistent through program restarts.
isPublished()
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
isPublished()
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Return whether this sendable has been published.
isPublished()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Return whether this sendable has an associated table.
isPulsing()
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Determine if the pulse is still going.
isPulsing(int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Checks a DIO line to see if it is currently generating a pulse.
isRangeValid()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Check if there is a valid range measurement.
isRaw()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a byte[].
isReal()
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Get if the robot is real.
isRetained()
- Method in class edu.wpi.first.networktables.
Topic
Returns whether the topic is retained by server when there are no publishers.
isReversed()
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Returns whether the trajectory is reversed or not.
isReversed()
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
Checks if this view is reversed with respect to its backing buffer.
isRevSolenoidDisabled()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Check if the reverse solenoid is Disabled.
isRoboRIO()
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
Get if running on a roboRIO.
isRunning()
- Method in class edu.wpi.first.wpilibj.
Timer
Whether the timer is currently running.
isSafetyEnabled()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Return the state of the motor safety enabled flag.
isScheduled()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Whether the command is currently scheduled.
isScheduled(Command)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Whether the given commands are running.
isScheduled(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Whether the given commands are running.
isSetMetadata()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Returns true if the record is a set metadata control record.
isSimDeviceEnabled(String)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
isSimulation()
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Get if the robot is a simulation.
isSourceConnected(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns true if source is connected.
isSourceEnabled(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Returns true if source is enabled.
isStabilizable(int, int, double[], double[])
- Static method in class edu.wpi.first.math.jni.
StateSpaceUtilJNI
Returns true if (A, B) is a stabilizable pair.
isStabilizable(Matrix<States, States>, Matrix<States, Inputs>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Returns true if (A, B) is a stabilizable pair.
isStart()
- Method in class edu.wpi.first.util.datalog.
DataLogRecord
Returns true if the record is a start control record.
isString()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns true if property is a string.
isString()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a String.
isStringArray()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a String[].
isSysActive()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Gets a value indicating whether the FPGA outputs are enabled.
isSystemTimeValid()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Gets if the system time is valid.
isTeleop()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in
 operator-controlled mode.
isTeleop()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be running in
 operator-controlled mode.
isTeleop()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is currently in Operator Control mode as determined by the Driver
 Station.
isTeleop()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is in teleop mode.
isTeleopEnabled()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in
 operator-controller mode and enabled.
isTeleopEnabled()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be running in
 operator-controller mode and enabled.
isTeleopEnabled()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is currently in Operator Control mode and enabled as determined by the
 Driver Station.
isTest()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in Test
 mode.
isTest()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Gets a value indicating whether the Driver Station requires the robot to be running in test
 mode.
isTest()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is currently in Test mode as determined by the Driver Station.
isTest()
- Static method in class edu.wpi.first.wpilibj.
RobotState
Returns true if the robot is in test mode.
isTestEnabled()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Gets a value indicating whether the Driver Station requires the robot to be running in Test
 mode and enabled.
isTestEnabled()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Determine if the robot is current in Test mode and enabled as determined by the Driver Station.
isTimingPaused()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
isTimingPaused()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Check if the simulator time is paused.
isUint
- Variable in enum class edu.wpi.first.util.struct.
StructFieldType
Indicates if the data type is an unsigned integer.
isUint()
- Method in class edu.wpi.first.util.struct.
StructFieldDescriptor
Returns whether the field type is an unsigned integer.
isValid()
- Method in class edu.wpi.first.cscore.
VideoListener
Returns true if the video listener handle is valid.
isValid()
- Method in class edu.wpi.first.cscore.
VideoProperty
Returns true if property is valid.
isValid()
- Method in class edu.wpi.first.cscore.
VideoSink
Returns true if the VideoSink is valid.
isValid()
- Method in class edu.wpi.first.cscore.
VideoSource
Returns true if the VideoSource is valid.
isValid()
- Method in class edu.wpi.first.networktables.
EntryBase
isValid()
- Method in class edu.wpi.first.networktables.
MultiSubscriber
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
NetworkTableListener
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
NetworkTableValue
Determine if entry value contains a value or is unassigned.
isValid()
- Method in interface edu.wpi.first.networktables.
PubSub
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.networktables.
Topic
Determines if the native handle is valid.
isValid()
- Method in class edu.wpi.first.util.datalog.
DataLogReader
Returns true if the data log is valid (e.g.
isValid()
- Method in class edu.wpi.first.util.struct.
StructDescriptor
Returns whether the struct is valid (e.g.
isValidDataType(Object)
- Static method in class edu.wpi.first.networktables.
NetworkTableEntry
Checks if a data value is of a type that can be placed in a NetworkTable entry.
isWindows()
- Static method in class edu.wpi.first.util.
RuntimeDetector
Deprecated.
Check if OS is Windows.
IterativeRobotBase
- Class in
edu.wpi.first.wpilibj
IterativeRobotBase implements a specific type of robot program framework, extending the RobotBase
 class.
IterativeRobotBase(double)
- Constructor for class edu.wpi.first.wpilibj.
IterativeRobotBase
Constructor for IterativeRobotBase.
iterator()
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
iterator()
- Method in class edu.wpi.first.util.datalog.
DataLogReader
J
Jaguar
- Class in
edu.wpi.first.wpilibj.motorcontrol
Luminary Micro / Vex Robotics Jaguar Motor Controller.
Jaguar(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
Jaguar
Constructor.
JNIWrapper
- Class in
edu.wpi.first.hal
Base class for all JNI wrappers.
JNIWrapper()
- Constructor for class edu.wpi.first.hal.
JNIWrapper
Utility class.
JNIWrapper.Helper
- Class in
edu.wpi.first.hal
Sets whether JNI should be loaded in the static block.
Joule
- Static variable in class edu.wpi.first.units.
Units
The base unit of energy.
Joules
- Static variable in class edu.wpi.first.units.
Units
The base unit of energy.
Joystick
- Class in
edu.wpi.first.wpilibj
Handle input from Flight Joysticks connected to the Driver Station.
Joystick(int)
- Constructor for class edu.wpi.first.wpilibj.
Joystick
Construct an instance of a joystick.
Joystick.AxisType
- Enum Class in
edu.wpi.first.wpilibj
Represents an analog axis on a joystick.
Joystick.ButtonType
- Enum Class in
edu.wpi.first.wpilibj
Represents a digital button on a joystick.
JoystickButton
- Class in
edu.wpi.first.wpilibj2.command.button
A
Trigger
that gets its state from a
GenericHID
.
JoystickButton(GenericHID, int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
JoystickButton
Creates a joystick button for triggering commands.
JoystickSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated joystick.
JoystickSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
JoystickSim
Constructs from a joystick port number.
JoystickSim(Joystick)
- Constructor for class edu.wpi.first.wpilibj.simulation.
JoystickSim
Constructs from a Joystick object.
K
k10p71
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Gear ratio of 10.71:1.
k12p75
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Gear ratio of 12.75:1.
k16G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
16 Gs max.
k16G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
16 Gs max.
k180deg
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a counterclockwise rotation by 180° (π rad).
k1X
- Enum constant in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
Count only the rising edge.
k1X
- Enum constant in enum class edu.wpi.first.wpilibj.
PWM.PeriodMultiplier
Period Multiplier: don't skip pulses.
k2022RapidReact
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFields
2022 Rapid React.
k2023ChargedUp
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFields
2023 Charged Up.
k2024Crescendo
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFields
2024 Crescendo.
k2025ReefscapeAndyMark
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFields
2025 Reefscape AndyMark (see TU 12).
k2025ReefscapeWelded
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFields
2025 Reefscape Welded (see TU 12).
k2G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
2 Gs max.
k2G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
2 Gs max.
k2G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Range
2 Gs max.
k2G
- Enum constant in enum class edu.wpi.first.wpilibj.
BuiltInAccelerometer.Range
2 Gs max.
k2X
- Enum constant in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
Count both the rising and falling edge.
k2X
- Enum constant in enum class edu.wpi.first.wpilibj.
PWM.PeriodMultiplier
Period Multiplier: skip every other pulse.
k3AxisAccelerometer
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a 3-axis accelerometer with a number bar for each axis' acceleration.
k4G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
4 Gs max.
k4G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
4 Gs max.
k4G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Range
4 Gs max.
k4G
- Enum constant in enum class edu.wpi.first.wpilibj.
BuiltInAccelerometer.Range
4 Gs max.
k4X
- Enum constant in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
Count rising and falling on both channels.
k4X
- Enum constant in enum class edu.wpi.first.wpilibj.
PWM.PeriodMultiplier
Period Multiplier: skip three out of four pulses.
k5p95
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Gear ratio of 5.95:1.
k7p31
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Gear ratio of 7.31:1.
k8G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
8 Gs max.
k8G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
8 Gs max.
k8G
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Range
8 Gs max.
k8G
- Enum constant in enum class edu.wpi.first.wpilibj.
BuiltInAccelerometer.Range
8 Gs max.
k8p45
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Gear ratio of 8.45:1.
kA
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
A button.
kA
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
A button.
kAccelerometer
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Accelerometer.
kAccelerometer
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays an accelerometer with a number bar displaying the magnitude of the acceleration and
 text displaying the exact value.
kAddress
- Static variable in class edu.wpi.first.wpilibj.
ADXL345_I2C
Default I2C device address.
kADXL345_I2C
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kADXL345_I2C = 2.
kADXL345_SPI
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kADXL345_SPI = 1.
kAliceBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF0F8FF.
KalmanFilter
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.estimator
A Kalman filter combines predictions from a model and measurements to give an estimate of the
 true system state.
KalmanFilter(Nat<States>, Nat<Outputs>, LinearSystem<States, Inputs, Outputs>, Matrix<States, N1>, Matrix<Outputs, N1>, double)
- Constructor for class edu.wpi.first.math.estimator.
KalmanFilter
Constructs a Kalman filter with the given plant.
KalmanFilterLatencyCompensator
<
S
extends
Num
,
I
extends
Num
,
O
extends
Num
> - Class in
edu.wpi.first.math.estimator
This class incorporates time-delayed measurements into a Kalman filter's state estimate.
KalmanFilterLatencyCompensator.ObserverSnapshot
- Class in
edu.wpi.first.math.estimator
This class contains all the information about our observer at a given time.
KalmanTypeFilter
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Interface in
edu.wpi.first.math.estimator
Interface for Kalman filters for use with KalmanFilterLatencyCompensator.
kAnalogInputChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of analog input channels per roboRIO.
kAnalogOutputChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of analog output channels per roboRIO.
kAndyMark
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
AndyMark.
kAntiqueWhite
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFAEBD7.
kAqua
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00FFFF.
kAquamarine
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x7FFFD4.
kAutoManage
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Automatically connect or disconnect based on whether any sinks are connected to this source.
kAxis
- Enum constant in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
Axis camera.
kAzure
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF0FFFF.
kB
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
B button.
kB
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
B button.
kBack
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Back motor.
kBack
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Back button.
kBasePort
- Static variable in class edu.wpi.first.cameraserver.
CameraServer
CameraServer base port.
kBaseResourceDir
- Static variable in enum class edu.wpi.first.apriltag.
AprilTagFields
Base resource directory.
kBaseTableName
- Static variable in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
The name of the base NetworkTable into which all Shuffleboard data will be added.
kBeige
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF5F5DC.
kBGR
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
BGR 8-8-8, 24 bpp.
kBGR
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
BGR order.
kBGRA
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
BGRA 8-8-8-8.
kBidir
- Enum constant in enum class edu.wpi.first.hal.
SimDevice.Direction
Bidirectional direction for simulation devices.
kBidir
- Static variable in class edu.wpi.first.hal.
SimDeviceJNI
Bidirectional between user code and simulator.
kBisque
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFE4C4.
kBlack
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x000000.
kBlanchedAlmond
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFEBCD.
kBlue
- Enum constant in enum class edu.wpi.first.wpilibj.util.
Color.RGBChannel
The blue channel of an RGB color.
kBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x0000FF.
kBlue1AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Blue Alliance Station 1 ID.
kBlue2AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Blue Alliance Station 2 ID.
kBlue3AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Blue Alliance Station 3 ID.
kBlueAllianceWallRightSide
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFieldLayout.OriginPosition
Blue alliance wall, right side.
kBlueViolet
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x8A2BE2.
kBool
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
bool.
kBoolean
- Enum constant in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Boolean property.
kBoolean
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Boolean data type.
kBoolean
- Static variable in class edu.wpi.first.hal.
HALValue
Boolean.
kBooleanArray
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Boolean array data type.
kBooleanBox
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a boolean value as a large colored box.
kBoth
- Enum constant in enum class edu.wpi.first.math.filter.
Debouncer.DebounceType
Both rising and falling edges.
kBoth
- Enum constant in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
Both rising and falling edge configuration.
kBoth
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Direction
Both directions are valid.
kBoth
- Enum constant in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Both rising and falling edge events.
kBothRumble
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.RumbleType
Both left and right rumble motors.
kBRG
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
BRG order.
kBroadcast
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Broadcast.
kBroadcast
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Broadcast.
kBrown
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xA52A2A.
kBurlywood
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDEB887.
kCadetBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x5F9EA0.
kCameraStream
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a camera stream.
kCancelIncoming
- Enum constant in enum class edu.wpi.first.wpilibj2.command.
Command.InterruptionBehavior
This command continues, and the incoming command is not scheduled.
kCancelSelf
- Enum constant in enum class edu.wpi.first.wpilibj2.command.
Command.InterruptionBehavior
This command ends,
end(true)
is called, and the incoming command is
 scheduled normally.
kCANPlugin_2CAN
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kCANPlugin_2CAN = 2.
kCANPlugin_BlackJagBridge
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kCANPlugin_BlackJagBridge = 1.
kCCW_90deg
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a counterclockwise rotation by 90° (π/2 rad).
kCCW_Pi_2
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a counterclockwise rotation by π/2 rad (90°).
kChar
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
char.
kChartreuse
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x7FFF00.
kChocolate
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xD2691E.
kCircle
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Circle button.
kCircle
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Circle button.
kClient3
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Running in NT3 client mode.
kClient4
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Running in NT4 client mode.
kColon
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Colon.
kComboBoxChooser
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a
SendableChooser
with a
 dropdown combo box with a list of options.
kComma
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Comma.
kCommand
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a command with a toggle button.
kCommand_Scheduler
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kCommand_Scheduler = 1.
kCommand2_Scheduler
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kCommand2_Scheduler = 2.
kConnected
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Client connected (on server, any client connected).
kConnection
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Any connection event (connect or disconnect).
kContinuous
- Enum constant in enum class edu.wpi.first.wpilibj.
LEDPattern.GradientType
A continuous gradient, where the gradient wraps around to allow for seamless scrolling
 effects.
kController_BangBangController
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
BangBangController.
kController_PIDController2
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
PIDController.
kController_ProfiledPIDController
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
ProfiledPIDController.
kCopperforge
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Copperforge.
kCoral
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF7F50.
kCornflowerBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x6495ED.
kCornsilk
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFF8DC.
kCreate
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Create button.
kCrimson
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDC143C.
kCritical
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
A critically important event such as a brownout, component failure, or software deadlock.
kCritical
- Static variable in class edu.wpi.first.networktables.
LogMessage
Critical logging level.
kCross
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Cross button.
kCross
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Cross button.
kCSCore
- Enum constant in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
CS Core camera.
kCTRE
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Cross the Road Electronics.
kCTRE
- Enum constant in enum class edu.wpi.first.wpilibj.
PowerDistribution.ModuleType
CTRE (Cross The Road Electronics) Power Distribution Panel (PDP).
kCTREPCMModules
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of PCM Modules.
kCTREPDPChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of power distribution channels per PDP.
kCTREPDPModules
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of power distribution modules per PDP.
kCTRESolenoidChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of solenoid channels per module.
kCv
- Enum constant in enum class edu.wpi.first.cscore.
VideoSink.Kind
CV video sink.
kCv
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.Kind
CV video source.
kCW_90deg
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a clockwise rotation by 90° (π/2 rad).
kCW_Pi_2
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a clockwise rotation by π/2 rad (90°).
kCyan
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00FFFF.
kDarkBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00008B.
kDarkCyan
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x008B8B.
kDarkGoldenrod
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xB8860B.
kDarkGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xA9A9A9.
kDarkGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x006400.
kDarkKhaki
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xBDB76B.
kDarkMagenta
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x8B008B.
kDarkOliveGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x556B2F.
kDarkOrange
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF8C00.
kDarkOrchid
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x9932CC.
kDarkRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x8B0000.
kDarkSalmon
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xE9967A.
kDarkSeaGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x8FBC8F.
kDarkSlateBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x483D8B.
kDarkSlateGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x2F4F4F.
kDarkTurquoise
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00CED1.
kDarkViolet
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x9400D3.
kDashboard_AdvantageScope
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_AdvantageScope = 7.
kDashboard_Elastic
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_Elastic = 5.
kDashboard_FRCWebComponents
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_FRCWebComponents = 9.
kDashboard_Glass
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_Glass = 2.
kDashboard_LabVIEW
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_LabVIEW = 6.
kDashboard_QFRCDashboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_QFRCDashboard = 8.
kDashboard_Shuffleboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_Shuffleboard = 4.
kDashboard_SmartDashboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_SmartDashboard = 3.
kDashboard_Unknown
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDashboard_Unknown = 1.
kDataLogLocation_Onboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDataLogLocation_Onboard = 1.
kDataLogLocation_USB
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDataLogLocation_USB = 2.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
The data type for boolean array values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
BooleanLogEntry
The data type for boolean values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
The data type for double array values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
DoubleLogEntry
The data type for double values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
The data type for float array values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
FloatLogEntry
The data type for float values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
The data type for integer array values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
IntegerLogEntry
The data type for integer values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
RawLogEntry
The data type for raw values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
StringArrayLogEntry
The data type for string array values.
kDataType
- Static variable in class edu.wpi.first.util.datalog.
StringLogEntry
The data type for string values.
kDebug
- Static variable in class edu.wpi.first.networktables.
LogMessage
Debug log level.
kDebug1
- Static variable in class edu.wpi.first.networktables.
LogMessage
Debug log level 1.
kDebug2
- Static variable in class edu.wpi.first.networktables.
LogMessage
Debug log level 2.
kDebug3
- Static variable in class edu.wpi.first.networktables.
LogMessage
Debug log level 3.
kDebug4
- Static variable in class edu.wpi.first.networktables.
LogMessage
Debug log level 4.
kDeepPink
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF1493.
kDeepSkyBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00BFFF.
kDefaultDeadband
- Static variable in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Default input deadband.
kDefaultField
- Static variable in enum class edu.wpi.first.apriltag.
AprilTagFields
Alias to the current game.
kDefaultMaxOutput
- Static variable in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Default maximum output.
kDefaultModule
- Static variable in class edu.wpi.first.wpilibj.
PowerDistribution
Default module number.
kDefaultPeriod
- Static variable in class edu.wpi.first.wpilibj.
TimedRobot
Default loop period.
kDefaultPeriodic
- Static variable in class edu.wpi.first.networktables.
PubSubOptions
Default value of periodic.
kDefaultPort3
- Static variable in class edu.wpi.first.networktables.
NetworkTableInstance
The default port that network tables operates on for NT3.
kDefaultPort4
- Static variable in class edu.wpi.first.networktables.
NetworkTableInstance
The default port that network tables operates on for NT4.
kDefaultThrottleChannel
- Static variable in class edu.wpi.first.wpilibj.
Joystick
Default throttle axis channel.
kDefaultTwistChannel
- Static variable in class edu.wpi.first.wpilibj.
Joystick
Default twist axis channel.
kDefaultXChannel
- Static variable in class edu.wpi.first.wpilibj.
Joystick
Default X axis channel.
kDefaultYChannel
- Static variable in class edu.wpi.first.wpilibj.
Joystick
Default Y axis channel.
kDefaultZChannel
- Static variable in class edu.wpi.first.wpilibj.
Joystick
Default Z axis channel.
kDEKA
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
DEKA Research and Development Corp.
kDenim
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x1560BD.
kDial
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a number with a view-only dial.
kDifferentialDrive
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a differential drive with a widget that displays the speed of each side of the
 drivebase and a vector for the direction and rotation of the drivebase.
kDigitalChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of digital channels per roboRIO.
kDimGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x696969.
kDisconnected
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Client disconnected (on server, any client disconnected).
kDiscontinuous
- Enum constant in enum class edu.wpi.first.wpilibj.
LEDPattern.GradientType
A discontinuous gradient, where the first pixel is set to the first color of the gradient and
 the final pixel is set to the last color of the gradient.
kDodgerBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x1E90FF.
kDouble
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Double precision floating-point data type.
kDouble
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
double.
kDouble
- Static variable in class edu.wpi.first.hal.
HALValue
Double.
kDoubleArray
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Double precision floating-point array data type.
kDoubleFalcon500PerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Two Falcon 500 motors per drive side.
kDoubleNEOPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Two NEO motors per drive side.
kDriverStationCIO_Analog
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationCIO_Analog = 1.
kDriverStationCIO_DigitalIn
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationCIO_DigitalIn = 2.
kDriverStationCIO_DigitalOut
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationCIO_DigitalOut = 3.
kDriverStationEIO_Acceleration
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_Acceleration = 1.
kDriverStationEIO_AnalogIn
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_AnalogIn = 2.
kDriverStationEIO_AnalogOut
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_AnalogOut = 3.
kDriverStationEIO_Button
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_Button = 4.
kDriverStationEIO_DigitalIn
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_DigitalIn = 6.
kDriverStationEIO_DigitalOut
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_DigitalOut = 7.
kDriverStationEIO_Encoder
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_Encoder = 10.
kDriverStationEIO_FixedDigitalOut
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_FixedDigitalOut = 8.
kDriverStationEIO_LED
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_LED = 5.
kDriverStationEIO_PWM
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_PWM = 9.
kDriverStationEIO_TouchSlider
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kDriverStationEIO_TouchSlider = 11.
kDtsDsr
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
DTS/DSR flow control.
kDualCIMPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Two CIM motors per drive side.
kDualMiniCIMPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Two Mini CIM motors per drive side.
kDynamicForward
- Enum constant in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Dynamic forward test.
kDynamicReverse
- Enum constant in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Dynamic reverse test.
keepDuplicates
- Variable in class edu.wpi.first.networktables.
PubSubOptions
Preserve duplicate value changes (rather than ignoring them).
keepDuplicates(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
If enabled, preserves duplicate value changes (rather than ignoring them).
kEightInch
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
Eight inch diameter wheels.
kEllipses
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Ellipses button.
Kelvin
- Static variable in class edu.wpi.first.units.
Units
The base unit of temperature, where a value of 0 corresponds with absolutely zero energy in the
 measured system.
kEncoder
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays an
Encoder
displaying its speed, total traveled
 distance, and its distance per tick.
kEndOfInput
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
End of input.
kEnum
- Enum constant in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Enum property.
kEnum
- Static variable in class edu.wpi.first.hal.
HALValue
Enum.
kEquals
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Equals.
kError
- Enum constant in enum class edu.wpi.first.wpilibj.
Alert.AlertType
High priority alert - displayed first on the dashboard with a red "X" symbol.
kError
- Enum constant in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Error status.
kError
- Static variable in class edu.wpi.first.networktables.
LogMessage
Error logging level.
kEven
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Even parity.
kExternalDirection
- Enum constant in enum class edu.wpi.first.wpilibj.
Counter.Mode
mode: external direction.
keySet()
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Gets the keys contained in the map.
kFalling
- Enum constant in enum class edu.wpi.first.math.filter.
Debouncer.DebounceType
Falling edge.
kFallingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
Falling edge configuration.
kFallingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Falling edge event.
kFallingPulse
- Enum constant in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
Falling pulse.
kFallingPulse
- Static variable in interface edu.wpi.first.hal.
AnalogJNI.AnalogTriggerType
native declaration : AthenaJava\target\native\include\HAL\Analog.h:57
kField
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a Field2d object.
Supported types:
Field2d
kFilter_Linear
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
LinearFilter.
kFirebrick
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xB22222.
kFirmwareUpdate
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Firmware update.
kFirstBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x0066B3.
kFirstRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xED1C24.
kFixedFlourescent2
- Static variable in class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Fixed fluorescent white balance 2.
kFixedFluorescent1
- Static variable in class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Fixed fluorescent white balance 1.
kFixedIndoor
- Static variable in class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Fixed indoor white balance.
kFixedOutdoor1
- Static variable in class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Fixed outdoor white balance 1.
kFixedOutdoor2
- Static variable in class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Fixed outdoor white balance 2.
kFloat
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Single precision floating-point data type.
kFloat
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
float.
kFloatArray
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Single precision floating-point array data type.
kFloralWhite
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFAF0.
kFlushOnAccess
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.WriteBufferMode
Flush the buffer on each access.
kFlushWhenFull
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.WriteBufferMode
Flush the buffer when it is full.
kForceClose
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Never open the connection.
kForestGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x228B22.
kForward
- Enum constant in enum class edu.wpi.first.wpilibj.
DoubleSolenoid.Value
Forward position.
kForward
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Direction
Only forward is valid.
kForward
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Value
Forward.
kForward
- Enum constant in enum class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Direction
Forward.
kFrame
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Frame button.
kFrameDequeue
- Enum constant in enum class edu.wpi.first.util.
TimestampSource
wpi::Now when the new frame was dequeued by CSCore.
kFramework_AdvantageKit
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_AdvantageKit = 7.
kFramework_CommandControl
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_CommandControl = 3.
kFramework_Iterative
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_Iterative = 1.
kFramework_KitBotInline
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_KitBotInline = 10.
kFramework_KitBotTraditional
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_KitBotTraditional = 9.
kFramework_MagicBot
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_MagicBot = 8.
kFramework_RobotBuilder
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_RobotBuilder = 6.
kFramework_ROS
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_ROS = 5.
kFramework_Simple
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_Simple = 2.
kFramework_Timed
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kFramework_Timed = 4.
kFrontLeft
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Front left motor.
kFrontRight
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Front right motor.
kFuchsia
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF00FF.
kGainsboro
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDCDCDC.
kGBR
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
GBR order.
kGearToothSensor
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Gear tooth sensor.
kGhostWhite
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF8F8FF.
kGold
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFD700.
kGoldenrod
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDAA520.
kGoogle
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Google button.
kGraph
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a number with a graph.
kGrapple
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Grapple.
kGray
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
Grayscale, 8 bpp.
kGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x808080.
kGRB
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
GRB order.
kGreen
- Enum constant in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Green.
kGreen
- Enum constant in enum class edu.wpi.first.wpilibj.util.
Color.RGBChannel
The green channel of an RGB color.
kGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x008000.
kGreenYellow
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xADFF2F.
kGrid
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInLayouts
Groups components in an
n
x
m
grid.
kGyro
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a gyro with a dial from 0 to 360 degrees.
kGyroSensor
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Gyro sensor.
kHamburger
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Hamburger button.
kHID1stPerson
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HID1stPerson.
kHIDDriving
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HIDDriving.
kHIDFlight
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HIDFlight.
kHIDGamepad
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HIDGamepad.
kHIDJoystick
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HIDJoystick.
kHigh
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
A high-importance event such as scoring a game piece.
kHoneydew
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF0FFF0.
kHotPink
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF69B4.
kHttp
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.Kind
HTTP video source.
kIdentifier
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Identifier.
Kilo(U)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a thousand of the base unit, eg Kilograms = Kilo(Units.Grams).
Kilo(U, String, String)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a thousand of the base unit, eg Kilograms = Kilo(Units.Grams).
Kilogram
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of mass.
KilogramMetersPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit for linear momentum, equivalent to a one
Units.Kilogram
mass moving at
 one
Units.MetersPerSecond
.
KilogramMetersSquaredPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit for angular momentum.
Kilograms
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of mass.
KilogramSquareMeters
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit for moment of inertia.
kilogramsToLbs(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts kilograms into lbs (pound-mass).
Kilojoule
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1,000
Units.Joules
.
Kilojoules
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1,000
Units.Joules
.
KiloOhm
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1,000
Units.Ohms
.
KiloOhms
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1,000
Units.Ohms
.
kImmediate
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Initial listener addition.
kind
- Variable in class edu.wpi.first.cscore.
VideoEvent
The video event kind.
kIndianRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xCD5C5C.
kIndigo
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x4B0082.
Kinematics
- Class in
edu.wpi.first.math.proto
Kinematics
<
S
,
P
> - Interface in
edu.wpi.first.math.kinematics
Helper class that converts a chassis velocity (dx and dtheta components) into wheel speeds.
Kinematics()
- Constructor for class edu.wpi.first.math.proto.
Kinematics
Kinematics.ProtobufChassisSpeeds
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufChassisSpeeds
Kinematics.ProtobufDifferentialDriveKinematics
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDifferentialDriveKinematics
Kinematics.ProtobufDifferentialDriveWheelPositions
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDifferentialDriveWheelPositions
Kinematics.ProtobufDifferentialDriveWheelSpeeds
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDifferentialDriveWheelSpeeds
Kinematics.ProtobufMecanumDriveKinematics
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufMecanumDriveKinematics
Kinematics.ProtobufMecanumDriveWheelPositions
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufMecanumDriveWheelPositions
Kinematics.ProtobufMecanumDriveWheelSpeeds
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufMecanumDriveWheelSpeeds
Kinematics.ProtobufSwerveDriveKinematics
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufSwerveDriveKinematics
Kinematics.ProtobufSwerveModulePosition
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufSwerveModulePosition
Kinematics.ProtobufSwerveModuleState
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufSwerveModuleState
kInfo
- Enum constant in enum class edu.wpi.first.wpilibj.
Alert.AlertType
Low priority alert - displayed last on the dashboard with a green "i" symbol.
kInfo
- Static variable in class edu.wpi.first.networktables.
LogMessage
Info log level.
kInput
- Enum constant in enum class edu.wpi.first.hal.
SimDevice.Direction
Input direction for simulation devices.
kInput
- Static variable in class edu.wpi.first.hal.
SimDeviceJNI
Input to user code from the simulator.
kInt
- Static variable in class edu.wpi.first.hal.
HALValue
Int.
kInt16
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
int16.
kInt32
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
int32.
kInt64
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
int64.
kInt8
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
int8.
kInteger
- Enum constant in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Integer property.
kInteger
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Integer data type.
kInteger
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Integer.
kIntegerArray
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Integer array data type.
kInWindow
- Enum constant in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
In window.
kInWindow
- Static variable in interface edu.wpi.first.hal.
AnalogJNI.AnalogTriggerType
native declaration : AthenaJava\target\native\include\HAL\Analog.h:54
kIOBreakout
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
IO breakout.
kIvory
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFFF0.
kJoystickPorts
- Static variable in class edu.wpi.first.wpilibj.
DriverStation
Number of Joystick ports.
kKauaiLabs
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Kauai Labs.
kKeepOpen
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Try to keep the connection open regardless of whether any sinks are connected.
kKhaki
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF0E68C.
kKinematics_DifferentialDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
DifferentialDriveKinematics.
kKinematics_DifferentialDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kKinematics_DifferentialDrive = 1.
kKinematics_MecanumDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
MecanumDriveKinematics.
kKinematics_MecanumDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kKinematics_MecanumDrive = 2.
kKinematics_SwerveDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
SwerveDriveKinematics.
kKinematics_SwerveDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kKinematics_SwerveDrive = 3.
kL1
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Left trigger 1 button.
kL1
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Left trigger 1 button.
kL2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Left trigger 2.
kL2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Left trigger 2 button.
kL2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Left trigger 2.
kL2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Left trigger 2 button.
kL3
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
L3 (left stick) button.
kL3
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
L3 (left stick) button.
kLanguage_CPlusPlus
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_CPlusPlus = 2.
kLanguage_DotNet
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_DotNet = 5.
kLanguage_Java
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_Java = 3.
kLanguage_Kotlin
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_Kotlin = 6.
kLanguage_LabVIEW
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_LabVIEW = 1.
kLanguage_Python
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_Python = 4.
kLanguage_Rust
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLanguage_Rust = 7.
kLavender
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xE6E6FA.
kLavenderBlush
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFF0F5.
kLawnGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x7CFC00.
kLeft
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Left motor.
kLeftBrace
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Left curly brace.
kLeftBracket
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Left square bracket.
kLeftBumper
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Left bumper button.
kLeftBumper
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Left bumper button.
kLeftRumble
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.RumbleType
Left rumble motor.
kLeftStick
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Left stick button.
kLeftStick
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Left stick button.
kLeftTrigger
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Left trigger button.
kLeftTrigger
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Left trigger.
kLeftX
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Left X axis.
kLeftX
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Left X axis.
kLeftX
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Left X axis.
kLeftX
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Left X axis.
kLeftY
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Left Y axis.
kLeftY
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Left Y axis.
kLeftY
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Left Y axis.
kLeftY
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Left Y axis.
kLemonChiffon
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFACD.
kLightBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xADD8E6.
kLightCoral
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF08080.
kLightCyan
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xE0FFFF.
kLightGoldenrodYellow
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFAFAD2.
kLightGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xD3D3D3.
kLightGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x90EE90.
kLightPink
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFB6C1.
kLightSalmon
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFA07A.
kLightSeaGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x20B2AA.
kLightSkyBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x87CEFA.
kLightSlateGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x778899.
kLightSteelBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xB0C4DE.
kLightYellow
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFFE0.
kLime
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00FF00.
kLimeGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x32CD32.
kLinen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFAF0E6.
kList
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInLayouts
Groups components in a vertical list.
kLM
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Luminary Micro.
kLocal
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Running in local-only mode.
kLoggingFramework_AdvantageKit
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLoggingFramework_AdvantageKit = 4.
kLoggingFramework_DogLog
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLoggingFramework_DogLog = 5.
kLoggingFramework_Epilogue
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLoggingFramework_Epilogue = 2.
kLoggingFramework_Monologue
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLoggingFramework_Monologue = 3.
kLoggingFramework_Other
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kLoggingFramework_Other = 1.
kLogMessage
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Log message.
kLong
- Static variable in class edu.wpi.first.hal.
HALValue
Long.
kLow
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
A low importance event such as acquisition of a game piece.
kMagenta
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF00FF.
kMark
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Parity bit always on.
kMaroon
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x800000.
kMaxJoystickAxes
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
The maximum number of axes.
kMaxJoystickPOVs
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
The maximum number of POVs.
kMaxJoysticks
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
The maximum number of joysticks.
kMecanumDrive
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a mecanum drive with a widget that displays the speed of each wheel, and vectors for
 the direction and rotation of the drivebase.
kMediumAquamarine
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x66CDAA.
kMediumBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x0000CD.
kMediumOrchid
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xBA55D3.
kMediumPurple
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x9370DB.
kMediumSeaGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x3CB371.
kMediumSlateBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x7B68EE.
kMediumSpringGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00FA9A.
kMediumTurquoise
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x48D1CC.
kMediumVioletRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xC71585.
kMidnightBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x191970.
kMintcream
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF5FFFA.
kMiscellaneous
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Miscellaneous.
kMistyRose
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFE4E1.
kMjpeg
- Enum constant in enum class edu.wpi.first.cscore.
VideoSink.Kind
MJPEG video sink.
kMJPEG
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
Motion-JPEG (compressed image data).
kMJPGStreamer
- Enum constant in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
MJPG Streamer camera.
kMoccasin
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFE4B5.
kMode0
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Mode
Clock idle low, data sampled on rising edge.
kMode1
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Mode
Clock idle low, data sampled on falling edge.
kMode2
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Mode
Clock idle high, data sampled on falling edge.
kMode3
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Mode
Clock idle high, data sampled on rising edge.
kMotorController
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Motor controller.
kMotorController
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a
MotorController
.
kMS
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
MindSensors.
kMXP
- Enum constant in enum class edu.wpi.first.wpilibj.
I2C.Port
MXP (roboRIO MXP) I2C port.
kMXP
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Port
MXP (roboRIO MXP) serial port.
kMXP
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Port
MXP (roboRIO MXP) SPI bus port.
kNavajoWhite
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFDEAD.
kNavy
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x000080.
kNetworkInterfacesChanged
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Network Interfaces Changed event.
kNetworkTables
- Enum constant in enum class edu.wpi.first.util.sendable.
SendableBuilder.BackendKind
NetworkTables.
kNI
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
National Instruments.
kNone
- Enum constant in enum class edu.wpi.first.cscore.
VideoProperty.Kind
No specific property.
kNone
- Enum constant in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
No edge configuration (neither rising nor falling).
kNone
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
No flow control.
kNone
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
No parity.
kNone
- Enum constant in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
No test.
kNormal
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
A "normal" importance event, such as a transition from autonomous mode to teleoperated control.
kNumberBar
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a number with a view-only bar.
kNumberSlider
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a number with a controllable slider.
kOdd
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Odd parity.
kOdometry_DifferentialDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
DifferentialDriveOdometry.
kOdometry_DifferentialDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kOdometry_DifferentialDrive = 1.
kOdometry_MecanumDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
MecanumDriveOdometry.
kOdometry_MecanumDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kOdometry_MecanumDrive = 2.
kOdometry_SwerveDrive
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
SwerveDriveOdometry.
kOdometry_SwerveDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kOdometry_SwerveDrive = 3.
kOff
- Enum constant in enum class edu.wpi.first.wpilibj.
DoubleSolenoid.Value
Off position.
kOff
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Value
Off.
kOff
- Enum constant in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Off.
kOff
- Static variable in interface edu.wpi.first.wpilibj.
LEDPattern
A pattern that turns off all LEDs.
kOk
- Enum constant in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
OK status.
kOldLace
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFDF5E6.
kOlive
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x808000.
kOliveDrab
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x6B8E23.
kOn
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Value
On.
kOnboard
- Enum constant in enum class edu.wpi.first.wpilibj.
I2C.Port
Onboard I2C port.
kOnboard
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Port
Onboard serial port on the roboRIO.
kOnboardCS0
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Port
Onboard SPI bus port CS0.
kOnboardCS1
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Port
Onboard SPI bus port CS1.
kOnboardCS2
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Port
Onboard SPI bus port CS2.
kOnboardCS3
- Enum constant in enum class edu.wpi.first.wpilibj.
SPI.Port
Onboard SPI bus port CS3.
kOne
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
One stop bit.
kOnePointFive
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
One and a half stop bits.
Koors40
- Class in
edu.wpi.first.wpilibj.motorcontrol
AndyMark Koors40 Motor Controller.
Koors40(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
Koors40
Constructor.
kOptions
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Options button.
kOptions
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Options button.
kOrange
- Enum constant in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Orange.
kOrange
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFA500.
kOrangeRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF4500.
kOrchid
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDA70D6.
kOutput
- Enum constant in enum class edu.wpi.first.hal.
SimDevice.Direction
Output direction for simulation devices.
kOutput
- Static variable in class edu.wpi.first.hal.
SimDeviceJNI
Output from user code to the simulator.
kPaleGoldenrod
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xEEE8AA.
kPaleGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x98FB98.
kPaleTurquoise
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xAFEEEE.
kPaleVioletRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDB7093.
kPapayaWhip
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFEFD5.
kPDP_CTRE
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kPDP_CTRE = 1.
kPDP_REV
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kPDP_REV = 2.
kPDP_Unknown
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kPDP_Unknown = 3.
kPeachPuff
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFDAB9.
kPeru
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xCD853F.
kPi
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing a counterclockwise rotation by π rad (180°).
kPIDCommand
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a PID command with a checkbox and an editor for the PIDF constants.
kPIDController
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a PID controller with an editor for the PIDF constants and a toggle switch for
 enabling and disabling the controller.
kPink
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFC0CB.
kPitch
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The user-configured pitch axis.
kPlum
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xDDA0DD.
kPneumatics
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Pneumatics.
kPowderBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xB0E0E6.
kPowerDistribution
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Power distribution.
kPowerDistribution
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a
PowerDistribution
.
kProperties
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Topic properties changed.
kPS
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
PlayStation button.
kPS
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
PlayStation button.
kPublish
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
New topic published.
kPulseLength
- Enum constant in enum class edu.wpi.first.wpilibj.
Counter.Mode
mode: pulse length.
kPurple
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x800080.
kPWF
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Playing With Fusion.
kPwmChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of PWM channels per roboRIO.
kQuasistaticForward
- Enum constant in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Quasistatic forward test.
kQuasistaticReverse
- Enum constant in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Quasistatic reverse test.
kR1
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Right trigger 1 button.
kR1
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Right trigger 1 button.
kR2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Right trigger 2.
kR2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Right trigger 2 button.
kR2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Right trigger 2.
kR2
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Right trigger 2 button.
kR3
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
R3 (right stick) button.
kR3
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
R3 (right stick) button.
kRaw
- Enum constant in enum class edu.wpi.first.cscore.
VideoSink.Kind
Raw video sink.
kRaw
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.Kind
Raw video source.
kRaw
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Raw data type.
kRBG
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
RBG order.
kRearLeft
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Rear left motor.
kRearRight
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Rear right motor.
kRed
- Enum constant in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Red.
kRed
- Enum constant in enum class edu.wpi.first.wpilibj.util.
Color.RGBChannel
The red channel of an RGB color.
kRed
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF0000.
kRed1AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Red Alliance Station 1 ID.
kRed2AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Red Alliance Station 2 ID.
kRed3AllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Red Alliance Station 3 ID.
kRedAllianceWallRightSide
- Enum constant in enum class edu.wpi.first.apriltag.
AprilTagFieldLayout.OriginPosition
Red alliance wall, right side.
kReduxRobotics
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Redux Robotics.
kRelay
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a relay with toggle buttons for each supported mode (off, on, forward, reverse).
kRelayChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of relay channels per roboRIO.
kRelayController
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Relay controller.
kResetOnFallingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Reset on falling edge of the signal.
kResetOnRisingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Reset on rising edge of the signal.
kResetWhileHigh
- Enum constant in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Reset while the signal is high.
kResetWhileLow
- Enum constant in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Reset while the signal is low.
kResourceType_Accelerometer
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Accelerometer = 4.
kResourceType_AddressableLEDs
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AddressableLEDs = 92.
kResourceType_ADIS16448
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ADIS16448 = 58.
kResourceType_ADIS16470
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ADIS16470 = 84.
kResourceType_ADXL345
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ADXL345 = 5.
kResourceType_ADXL362
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ADXL362 = 53.
kResourceType_ADXRS450
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ADXRS450 = 54.
kResourceType_AnalogChannel
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AnalogChannel = 6.
kResourceType_AnalogOutput
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AnalogOutput = 49.
kResourceType_AnalogTrigger
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AnalogTrigger = 7.
kResourceType_AnalogTriggerOutput
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AnalogTriggerOutput = 8.
kResourceType_AxisCamera
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_AxisCamera = 41.
kResourceType_BangBangController
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_BangBangController = 116.
kResourceType_Button
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Button = 39.
kResourceType_CAN
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CAN = 79.
kResourceType_CANifier
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CANifier = 63.
kResourceType_CANJaguar
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CANJaguar = 9.
kResourceType_CANPlugin
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CANPlugin = 3.
kResourceType_CANTalonSRX
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CANTalonSRX = 52.
kResourceType_ChoreoTrajectory
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ChoreoTrajectory = 119.
kResourceType_ChoreoTrigger
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ChoreoTrigger = 120.
kResourceType_Command
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Command = 40.
kResourceType_Compressor
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Compressor = 10.
kResourceType_Controller
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Controller = 0.
kResourceType_Counter
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Counter = 11.
kResourceType_CTRE_future1
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future1 = 65.
kResourceType_CTRE_future10
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future10 = 97.
kResourceType_CTRE_future11
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future11 = 98.
kResourceType_CTRE_future12
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future12 = 99.
kResourceType_CTRE_future13
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future13 = 100.
kResourceType_CTRE_future14
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future14 = 101.
kResourceType_CTRE_future2
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future2 = 66.
kResourceType_CTRE_future3
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future3 = 67.
kResourceType_CTRE_future4
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future4 = 68.
kResourceType_CTRE_future5
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future5 = 69.
kResourceType_CTRE_future6
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future6 = 70.
kResourceType_CTRE_future7
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future7 = 94.
kResourceType_CTRE_future8
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future8 = 95.
kResourceType_CTRE_future9
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_CTRE_future9 = 96.
kResourceType_Dashboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Dashboard = 12.
kResourceType_DataLogManager
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DataLogManager = 117.
kResourceType_DigilentDMC60
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DigilentDMC60 = 80.
kResourceType_DigitalGlitchFilter
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DigitalGlitchFilter = 57.
kResourceType_DigitalInput
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DigitalInput = 13.
kResourceType_DigitalOutput
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DigitalOutput = 14.
kResourceType_DriverStationCIO
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DriverStationCIO = 15.
kResourceType_DriverStationEIO
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DriverStationEIO = 16.
kResourceType_DriverStationLCD
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DriverStationLCD = 17.
kResourceType_DutyCycle
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_DutyCycle = 91.
kResourceType_Encoder
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Encoder = 18.
kResourceType_ExponentialProfile
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ExponentialProfile = 102.
kResourceType_Framework
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Framework = 22.
kResourceType_FusionVenom
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_FusionVenom = 93.
kResourceType_GearTooth
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_GearTooth = 19.
kResourceType_Gyro
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Gyro = 20.
kResourceType_HiTechnicAccel
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_HiTechnicAccel = 46.
kResourceType_HiTechnicColorSensor
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_HiTechnicColorSensor = 45.
kResourceType_HiTechnicCompass
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_HiTechnicCompass = 47.
kResourceType_I2C
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_I2C = 21.
kResourceType_Jaguar
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Jaguar = 23.
kResourceType_Joystick
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Joystick = 24.
kResourceType_Kinect
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Kinect = 25.
kResourceType_KinectStick
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_KinectStick = 26.
kResourceType_Kinematics
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Kinematics = 87.
kResourceType_Koors40
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Koors40 = 122.
kResourceType_Language
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Language = 2.
kResourceType_LaserShark
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_LaserShark = 126.
kResourceType_LinearFilter
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_LinearFilter = 71.
kResourceType_LoggingFramework
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_LoggingFramework = 118.
kResourceType_MindsensorsSD540
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_MindsensorsSD540 = 56.
kResourceType_Module
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Module = 1.
kResourceType_NavX
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_NavX = 74.
kResourceType_NidecBrushless
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_NidecBrushless = 62.
kResourceType_Odometry
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Odometry = 88.
kResourceType_PathFindingCommand
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PathFindingCommand = 108.
kResourceType_PathPlannerAuto
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PathPlannerAuto = 107.
kResourceType_PathPlannerPath
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PathPlannerPath = 106.
kResourceType_PathWeaverTrajectory
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PathWeaverTrajectory = 121.
kResourceType_PCM
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PCM = 60.
kResourceType_PCVideoServer
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PCVideoServer = 42.
kResourceType_PDP
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PDP = 59.
kResourceType_PhotonCamera
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PhotonCamera = 104.
kResourceType_PhotonPoseEstimator
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PhotonPoseEstimator = 105.
kResourceType_PIDController
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PIDController = 27.
kResourceType_PIDController2
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PIDController2 = 85.
kResourceType_PigeonIMU
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PigeonIMU = 61.
kResourceType_Pixy
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Pixy = 75.
kResourceType_Pixy2
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Pixy2 = 76.
kResourceType_Preferences
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Preferences = 28.
kResourceType_ProfiledPIDController
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ProfiledPIDController = 86.
kResourceType_PS4Controller
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PS4Controller = 103.
kResourceType_PWFSEN36005
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PWFSEN36005 = 125.
kResourceType_PWM
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PWM = 29.
kResourceType_PWMTalonSRX
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PWMTalonSRX = 51.
kResourceType_PWMVictorSPX
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_PWMVictorSPX = 81.
kResourceType_Redux_future1
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Redux_future1 = 109.
kResourceType_Redux_future2
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Redux_future2 = 110.
kResourceType_Redux_future3
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Redux_future3 = 111.
kResourceType_Redux_future4
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Redux_future4 = 112.
kResourceType_Redux_future5
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Redux_future5 = 113.
kResourceType_Relay
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Relay = 30.
kResourceType_RevServoHub
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevServoHub = 124.
kResourceType_RevSPARK
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevSPARK = 55.
kResourceType_RevSparkFlexCAN
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevSparkFlexCAN = 114.
kResourceType_RevSparkFlexPWM
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevSparkFlexPWM = 115.
kResourceType_RevSparkMaxCAN
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevSparkMaxCAN = 83.
kResourceType_RevSparkMaxPWM
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RevSparkMaxPWM = 82.
kResourceType_RobotDrive
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_RobotDrive = 31.
kResourceType_ScanseSweep
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ScanseSweep = 77.
kResourceType_SerialPort
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_SerialPort = 32.
kResourceType_Servo
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Servo = 33.
kResourceType_Shuffleboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Shuffleboard = 78.
kResourceType_SmartDashboard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_SmartDashboard = 43.
kResourceType_Solenoid
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Solenoid = 34.
kResourceType_SPI
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_SPI = 35.
kResourceType_SRF08
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_SRF08 = 48.
kResourceType_Talon
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Talon = 44.
kResourceType_TalonFX
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_TalonFX = 64.
kResourceType_Task
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Task = 36.
kResourceType_ThriftyNova
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_ThriftyNova = 123.
kResourceType_TrapezoidProfile
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_TrapezoidProfile = 90.
kResourceType_Ultrasonic
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Ultrasonic = 37.
kResourceType_Units
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Units = 89.
kResourceType_UsbCamera
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_UsbCamera = 73.
kResourceType_Victor
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_Victor = 38.
kResourceType_VictorSP
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_VictorSP = 50.
kResourceType_XboxController
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tResourceType
kResourceType_XboxController = 72.
kRev
- Enum constant in enum class edu.wpi.first.wpilibj.
PowerDistribution.ModuleType
REV Power Distribution Hub (PDH).
kREV
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
REV Robotics.
kReverse
- Enum constant in enum class edu.wpi.first.wpilibj.
DoubleSolenoid.Value
Reverse position.
kReverse
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Direction
Only reverse is valid.
kReverse
- Enum constant in enum class edu.wpi.first.wpilibj.
Relay.Value
Reverse.
kReverse
- Enum constant in enum class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Direction
Reverse.
kREVPHChannels
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of power distribution channels per PH.
kREVPHModules
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Number of PH modules.
kRGB
- Enum constant in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
RGB order.
kRGB565
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
RGB 5-6-5, 16 bpp.
kRight
- Enum constant in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Right motor.
kRightBrace
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Right curly brace.
kRightBracket
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Right square bracket.
kRightBumper
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Right bumper button.
kRightBumper
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Right bumper button.
kRightRumble
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.RumbleType
Right rumble motor.
kRightStick
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Right stick button.
kRightStick
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Right stick button.
kRightTrigger
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Right trigger button.
kRightTrigger
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Right trigger.
kRightX
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Right X axis.
kRightX
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Right X axis.
kRightX
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Right X axis.
kRightX
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Right X axis.
kRightY
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Right Y axis.
kRightY
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Right Y axis.
kRightY
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Right Y axis.
kRightY
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Right Y axis.
kRIOStatusBufferInvalidSize
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
Buffer invalid size.
kRIOStatusFeatureNotSupported
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
Feature not supported.
kRioStatusOffset
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
RIO status offset.
kRIOStatusOperationTimedOut
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
Operation timed out.
kRIOStatusResourceNotInitialized
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
Resource not initialized.
kRioStatusSuccess
- Static variable in class edu.wpi.first.hal.communication.
NIRioStatus
Success.
kRising
- Enum constant in enum class edu.wpi.first.math.filter.
Debouncer.DebounceType
Rising edge.
kRisingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
Rising edge configuration.
kRisingEdge
- Enum constant in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Rising edge event.
kRisingPulse
- Enum constant in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
Rising pulse.
kRisingPulse
- Static variable in interface edu.wpi.first.hal.
AnalogJNI.AnalogTriggerType
native declaration : AthenaJava\target\native\include\HAL\Analog.h:56
kRoboRIO
- Enum constant in enum class edu.wpi.first.wpilibj.
RuntimeType
roboRIO 1.0.
kRoboRIO2
- Enum constant in enum class edu.wpi.first.wpilibj.
RuntimeType
roboRIO 2.0.
kRobotController
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Robot controller.
kRobotDrive_ArcadeButtonSpin
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_ArcadeButtonSpin = 2.
kRobotDrive_ArcadeRatioCurve
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_ArcadeRatioCurve = 3.
kRobotDrive_ArcadeStandard
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_ArcadeStandard = 1.
kRobotDrive_MecanumCartesian
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_MecanumCartesian = 6.
kRobotDrive_MecanumPolar
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_MecanumPolar = 5.
kRobotDrive_Tank
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive_Tank = 4.
kRobotDrive2_DifferentialArcade
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_DifferentialArcade = 7.
kRobotDrive2_DifferentialCurvature
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_DifferentialCurvature = 9.
kRobotDrive2_DifferentialTank
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_DifferentialTank = 8.
kRobotDrive2_KilloughCartesian
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_KilloughCartesian = 12.
kRobotDrive2_KilloughPolar
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_KilloughPolar = 13.
kRobotDrive2_MecanumCartesian
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_MecanumCartesian = 10.
kRobotDrive2_MecanumPolar
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDrive2_MecanumPolar = 11.
kRobotDriveSwerve_AdvantageKit
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDriveSwerve_AdvantageKit = 18.
kRobotDriveSwerve_CTRE
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDriveSwerve_CTRE = 16.
kRobotDriveSwerve_MaxSwerve
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDriveSwerve_MaxSwerve = 17.
kRobotDriveSwerve_Other
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDriveSwerve_Other = 14.
kRobotDriveSwerve_YAGSL
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kRobotDriveSwerve_YAGSL = 15.
kRoll
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The user-configured roll axis.
kRosyBrown
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xBC8F8F.
kRoyalBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x4169E1.
kRtsCts
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
RTS/CTS flow control.
kSaddleBrown
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x8B4513.
kSalmon
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFA8072.
kSandyBrown
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF4A460.
kSeaGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x2E8B57.
kSeashell
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFF5EE.
kSemicolon
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Semicolon.
kSemiperiod
- Enum constant in enum class edu.wpi.first.wpilibj.
Counter.Mode
mode: semi period.
kServer
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Running in server mode.
kServoController
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Servo Controller.
kShare
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Share button.
kSienna
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xA0522D.
kSilver
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xC0C0C0.
kSimulation
- Enum constant in enum class edu.wpi.first.wpilibj.
RuntimeType
Simulation runtime.
kSingleCIMPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
One CIM motor per drive side.
kSingleFalcon500PerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
One Falcon 500 motor per drive side.
kSingleMiniCIMPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
One Mini CIM motor per drive side.
kSingleNEOPerSide
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
One NEO motor per drive side.
kSinkCreated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Created event.
kSinkDestroyed
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Destroyed event.
kSinkDisabled
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Disabled event.
kSinkEnabled
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Enabled event.
kSinkPropertyChoicesUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Property Choices Updated event.
kSinkPropertyCreated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Property Created event.
kSinkPropertyValueUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Property Value Updated event.
kSinkSourceChanged
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Sink Source Changed event.
kSixInch
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
Six inch diameter wheels.
kSizeBool
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of a "bool" value.
kSizeDouble
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "double" or "float64" value.
kSizeFloat
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "float" or "float32" value.
kSizeInt16
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "int16" or "uint16" value.
kSizeInt32
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "int32" or "uint32" value.
kSizeInt64
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "int64" or "uint64" value.
kSizeInt8
- Static variable in interface edu.wpi.first.util.struct.
Struct
Serialized size of an "int8" or "uint8" value.
kSkyBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x87CEEB.
kSlateBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x6A5ACD.
kSlateGray
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x708090.
kSmartDashboard_Instance
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kSmartDashboard_Instance = 1.
kSmartDashboard_LiveWindow
- Static variable in class edu.wpi.first.hal.
FRCNetComm.tInstances
kSmartDashboard_LiveWindow = 2.
kSnow
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFAFA.
kSourceBytesReceived
- Enum constant in enum class edu.wpi.first.cscore.
CameraServerJNI.TelemetryKind
kSourceBytesReceived.
kSourceConnected
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Connected event.
kSourceCreated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Created event.
kSourceDestroyed
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Destroyed event.
kSourceDisconnected
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Disconnected event.
kSourceFramesReceived
- Enum constant in enum class edu.wpi.first.cscore.
CameraServerJNI.TelemetryKind
kSourceFramesReceived.
kSourcePropertyChoicesUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Property Choices Updated event.
kSourcePropertyCreated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Property Created event.
kSourcePropertyValueUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Property Value Updated event.
kSourceVideoModeChanged
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source VideoMode Changed event.
kSourceVideoModesUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Source Video Modes Updated event.
kSpace
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Parity bit always off.
kSplitButtonChooser
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a
SendableChooser
with a
 toggle button for each available option.
kSpringGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x00FF7F.
kSquare
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Square button.
kSquare
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Square button.
kStadia
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Stadia button.
kStart
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Start button.
kStarting
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Currently starting up (either client or server).
kState
- Enum constant in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
State.
kState
- Static variable in interface edu.wpi.first.hal.
AnalogJNI.AnalogTriggerType
native declaration : AthenaJava\target\native\include\HAL\Analog.h:55
kSteelBlue
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x4682B4.
kString
- Enum constant in enum class edu.wpi.first.cscore.
VideoProperty.Kind
String property.
kString
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
String data type.
kStringArray
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
String array data type.
kStruct
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
struct.
kStudica
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Studica.
kSystemClockTicksPerMicrosecond
- Static variable in class edu.wpi.first.wpilibj.
SensorUtil
Ticks per microsecond.
kTan
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xD2B48C.
kTeal
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x008080.
kTeamDeviceType
- Static variable in class edu.wpi.first.wpilibj.
CAN
Team device type.
kTeamManufacturer
- Static variable in class edu.wpi.first.wpilibj.
CAN
Team manufacturer.
kTeamUse
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Team use.
kTelemetryUpdated
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Telemetry Updated event.
kTenInch
- Enum constant in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
Ten inch diameter wheels.
kTextView
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a value with a simple text field.
kTheThriftyBot
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
TheThriftyBot.
kThistle
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xD8BFD8.
kThrottle
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Throttle axis.
kTimeout
- Enum constant in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Timeout status.
kTimeout
- Enum constant in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Timeout event.
kTimeSync
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Time synchronized with server.
KtNMPerAmp
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Motor torque constant.
kToggleButton
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a boolean with a large interactive toggle button.
kToggleSwitch
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays a boolean with a fixed-size toggle switch.
kTomato
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFF6347.
kTop
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.ButtonType
kTop.
kTopic
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Any topic event (publish, unpublish, or properties changed).
kTouchpad
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Touchpad button.
kTouchpad
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Touchpad button.
kTrajectory_PathWeaver
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
PathWeaver Trajectory.
kTrajectory_TrapezoidProfile
- Enum constant in enum class edu.wpi.first.math.
MathUsageId
TrapezoidProfile.
kTriangle
- Enum constant in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Triangle button.
kTriangle
- Enum constant in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Triangle button.
kTrigger
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.ButtonType
kTrigger.
kTrivial
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
A trivial event such as a change in command state.
kTurquoise
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x40E0D0.
kTwist
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Twist axis.
kTwo
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
Two stop bits.
kTwoPulse
- Enum constant in enum class edu.wpi.first.wpilibj.
Counter.Mode
mode: two pulse.
kTypeString
- Static variable in class edu.wpi.first.networktables.
BooleanArrayTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
BooleanTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
DoubleArrayTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
DoubleTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
FloatArrayTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
FloatTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
IntegerArrayTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
IntegerTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
StringArrayTopic
The default type string for this topic type.
kTypeString
- Static variable in class edu.wpi.first.networktables.
StringTopic
The default type string for this topic type.
kUint16
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
uint16.
kUint32
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
uint32.
kUint64
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
uint64.
kUint8
- Enum constant in enum class edu.wpi.first.util.struct.
StructFieldType
uint8.
kUltrasonicSensor
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Ultrasonic sensor.
kUnassigned
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableType
Unassigned data type.
kUnassigned
- Static variable in class edu.wpi.first.hal.
HALValue
Unassigned type.
kUnknown
- Enum constant in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
Unknown camera kind.
kUnknown
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Unknown video event.
kUnknown
- Enum constant in enum class edu.wpi.first.cscore.
VideoSink.Kind
Unknown video sink type.
kUnknown
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.Kind
Unknown video source.
kUnknown
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
Unknown format.
kUnknown
- Enum constant in enum class edu.wpi.first.util.sendable.
SendableBuilder.BackendKind
Unknown.
kUnknown
- Enum constant in enum class edu.wpi.first.util.struct.parser.
TokenKind
Unknown.
kUnknown
- Enum constant in enum class edu.wpi.first.util.
TimestampSource
unknown.
kUnknown
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
Unknown.
kUnknownAllianceStation
- Static variable in class edu.wpi.first.hal.
DriverStationJNI
Unknown Alliance Station ID.
kUnpublish
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Topic unpublished.
kUsb
- Enum constant in enum class edu.wpi.first.cscore.
VideoSource.Kind
USB video source.
kUSB
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Port
USB serial port (same as kUSB1).
kUSB1
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Port
USB serial port 1.
kUSB2
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.Port
USB serial port 2.
kUsbCamerasChanged
- Enum constant in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Usb Cameras Changed event.
kUYVY
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
YUV 4:2:2, 16 bpp.
kV4LEOF
- Enum constant in enum class edu.wpi.first.util.
TimestampSource
End of Frame.
kV4LSOE
- Enum constant in enum class edu.wpi.first.util.
TimestampSource
Start of Exposure.
kValueAll
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Topic value updated (network or local).
kValueLocal
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Topic value updated (local).
kValueRemote
- Enum constant in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Topic value updated (via network).
kViolet
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xEE82EE.
kVividHosting
- Enum constant in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Vivid-Hosting.
kVoltageView
- Enum constant in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Displays an analog input or a raw number with a number bar.
KvRadPerSecPerVolt
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Motor velocity constant.
kWarning
- Enum constant in enum class edu.wpi.first.wpilibj.
Alert.AlertType
Medium priority alert - displayed second on the dashboard with a yellow "!" symbol.
kWarning
- Static variable in class edu.wpi.first.networktables.
LogMessage
Warning log level.
kWheat
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF5DEB3.
kWhite
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFFFF.
kWhiteSmoke
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xF5F5F5.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.IMUAxis
The IMU's X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The IMU's X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
X axis.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
X button.
kX
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
X button.
kXInputArcadePad
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputArcadePad.
kXInputArcadeStick
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputArcadeStick.
kXInputDancePad
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputDancePad.
kXInputDrumKit
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputDrumKit.
kXInputFlightStick
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputFlightStick.
kXInputGamepad
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputGamepad.
kXInputGuitar
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputGuitar.
kXInputGuitar2
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputGuitar2.
kXInputGuitar3
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputGuitar3.
kXInputUnknown
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputUnknown.
kXInputWheel
- Enum constant in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
XInputWheel.
kXonXoff
- Enum constant in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
XON/XOFF flow control.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.IMUAxis
The IMU's Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The IMU's Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Y axis.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Y button.
kY
- Enum constant in enum class edu.wpi.first.wpilibj.
XboxController.Button
Y button.
kY16
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
Grayscale, 16 bpp.
kYaw
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The user-configured yaw axis.
kYellow
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0xFFFF00.
kYellowGreen
- Static variable in class edu.wpi.first.wpilibj.util.
Color
0x9ACD32.
kYUYV
- Enum constant in enum class edu.wpi.first.util.
PixelFormat
YUY 4:2:2, 16 bpp.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.IMUAxis
The IMU's Z axis.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
The IMU's Z axis.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
Z axis.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
Z axis.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
Z axis.
kZ
- Enum constant in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Z axis.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Pose2d
A preallocated Pose2d representing the origin.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Pose3d
A preallocated Pose3d representing the origin.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
A preallocated Rotation2d representing no rotation.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Rotation3d
A preallocated Rotation3d representing no rotation.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Transform2d
A preallocated Transform2d representing no transformation.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Transform3d
A preallocated Transform3d representing no transformation.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Translation2d
A preallocated Translation2d representing the origin.
kZero
- Static variable in class edu.wpi.first.math.geometry.
Translation3d
A preallocated Translation3d representing the origin.
L
L1()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the left trigger 1 button's digital signal.
L1()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the left trigger 1 button's digital signal.
L1(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the left trigger 1 button's digital signal.
L1(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the left trigger 1 button's digital signal.
L1(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the left trigger 1 button's digital signal.
L1(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the left trigger 1 button's digital signal.
L2()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the left trigger 2 button's digital signal.
L2()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the left trigger 2 button's digital signal.
L2(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the left trigger 2 button's digital signal.
L2(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the left trigger 2 button's digital signal.
L2(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the left trigger 2 button's digital signal.
L2(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the left trigger 2 button's digital signal.
L3()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the L3 (left stick) button's digital signal.
L3()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the L3 (left stick) button's digital signal.
L3(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the L3 (left stick) button's digital signal.
L3(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the L3 (left stick) button's digital signal.
L3(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the L3 (left stick) button's digital signal.
L3(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the L3 (left stick) button's digital signal.
last_update
- Variable in class edu.wpi.first.networktables.
ConnectionInfo
The last time any update was received from the remote node (same scale as returned by
NetworkTablesJNI.now()
).
lastValue()
- Method in class edu.wpi.first.math.filter.
LinearFilter
Returns the last value calculated by the LinearFilter.
lastValue()
- Method in class edu.wpi.first.math.filter.
MedianFilter
Returns the last value calculated by the MedianFilter.
lastValue()
- Method in class edu.wpi.first.math.filter.
SlewRateLimiter
Returns the value last calculated by the SlewRateLimiter.
latchPWMZero(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Forces a PWM signal to go to 0 temporarily.
latencyCompensate(LinearSystem<States, Inputs, Outputs>, double, double)
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Adjusts LQR controller gain to compensate for a pure time delay in the input.
LayoutType
- Interface in
edu.wpi.first.wpilibj.shuffleboard
Represents the type of a layout in Shuffleboard.
lazy()
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Creates a lazy version of this backend.
lazy()
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
LazyBackend
- Class in
edu.wpi.first.epilogue.logging
A backend implementation that only logs data when it changes.
LazyBackend(EpilogueBackend)
- Constructor for class edu.wpi.first.epilogue.logging.
LazyBackend
Creates a new lazy backend wrapper around another backend.
lbsToKilograms(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts lbs (pound-mass) into kilograms.
LEDJNI
- Class in
edu.wpi.first.hal
LED JNI Functions.
LEDPattern
- Interface in
edu.wpi.first.wpilibj
An LED pattern controls lights on an LED strip to command patterns of color that may change over
 time.
LEDPattern.GradientType
- Enum Class in
edu.wpi.first.wpilibj
Types of gradients.
LEDPattern.IndexMapper
- Interface in
edu.wpi.first.wpilibj
A functional interface for index mapping functions.
LEDReader
- Interface in
edu.wpi.first.wpilibj
Generic interface for reading data from an LED buffer.
LEDReader.IndexedColorIterator
- Interface in
edu.wpi.first.wpilibj
A functional interface that allows for iteration over an LED buffer without manually writing an
 indexed for-loop.
LEDWriter
- Interface in
edu.wpi.first.wpilibj
Generic interface for writing data to an LED buffer.
left
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
Left wheel voltage.
left
- Variable in class edu.wpi.first.wpilibj.drive.
DifferentialDrive.WheelSpeeds
Left wheel speed.
leftBumper()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left bumper button's digital signal.
leftBumper()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the left bumper button's digital signal.
leftBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the left bumper button's digital signal.
leftBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the left bumper button's digital signal.
leftBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left bumper button's digital signal.
leftBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the left bumper button's digital signal.
leftMeters
- Variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
Distance measured by the left side.
leftMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Speed of the left side of the robot.
leftStick()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left stick button's digital signal.
leftStick()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the left stick button's digital signal.
leftStick(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the left stick button's digital signal.
leftStick(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the left stick button's digital signal.
leftStick(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left stick button's digital signal.
leftStick(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the left stick button's digital signal.
leftTrigger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left trigger button's digital signal.
leftTrigger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the left trigger.
leftTrigger(double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the left trigger.
leftTrigger(double, EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the axis value of the left trigger.
leftTrigger(double, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the left trigger.
leftTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the left trigger button's digital signal.
leftTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the axis value of the left trigger.
leftTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the left trigger button's digital signal.
length
- Variable in class edu.wpi.first.hal.
CANData
Length of the frame in bytes.
length
- Variable in class edu.wpi.first.hal.
CANStreamMessage
The length of the data received (0-8 bytes).
lerpRGB(double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Linearly interpolates between two RGB colors represented by the (r1, g1, b1) and (r2, g2, b2)
 triplets.
lerpRGB(int, int, int, int, int, int, double)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Linearly interpolates between two RGB colors represented by the (r1, g1, b1) and (r2, g2, b2)
 triplets.
lerpRGB(Color, Color, double)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Performs a linear interpolation between two colors in the RGB colorspace.
level
- Variable in class edu.wpi.first.networktables.
LogMessage
Log level of the message.
Lexer
- Class in
edu.wpi.first.util.struct.parser
Raw struct schema lexer.
Lexer(String)
- Constructor for class edu.wpi.first.util.struct.parser.
Lexer
Construct a raw struct schema lexer.
line
- Variable in class edu.wpi.first.networktables.
LogMessage
The line number in the source file that generated the message.
linearAcceleration(LinearAcceleration)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the linear acceleration of the motor.
LinearAcceleration
- Interface in
edu.wpi.first.units.measure
LinearAccelerationUnit
- Class in
edu.wpi.first.units
A unit of linear acceleration like
Units.MetersPerSecondPerSecond
.
LinearFilter
- Class in
edu.wpi.first.math.filter
This class implements a linear, digital filter.
LinearFilter(double[], double[])
- Constructor for class edu.wpi.first.math.filter.
LinearFilter
Create a linear FIR or IIR filter.
LinearMomentum
- Interface in
edu.wpi.first.units.measure
LinearMomentumUnit
- Class in
edu.wpi.first.units
A unit of linear momentum like
Units.KilogramMetersPerSecond
.
LinearPlantInversionFeedforward
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.controller
Constructs a plant inversion model-based feedforward from a
LinearSystem
.
LinearPlantInversionFeedforward(Matrix<States, States>, Matrix<States, Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Constructs a feedforward with the given coefficients.
LinearPlantInversionFeedforward(LinearSystem<States, Inputs, Outputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Constructs a feedforward with the given plant.
linearPosition(Distance)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the linear position of the motor.
LinearQuadraticRegulator
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.controller
Contains the controller coefficients and logic for a linear-quadratic regulator (LQR).
LinearQuadraticRegulator(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Constructs a controller with the given coefficients and plant.
LinearQuadraticRegulator(Matrix<States, States>, Matrix<States, Inputs>, Matrix<States, States>, Matrix<Inputs, Inputs>, Matrix<States, Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Constructs a controller with the given coefficients and plant.
LinearQuadraticRegulator(Matrix<States, States>, Matrix<States, Inputs>, Vector<States>, Vector<Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Constructs a controller with the given coefficients and plant.
LinearQuadraticRegulator(LinearSystem<States, Inputs, Outputs>, Vector<States>, Vector<Inputs>, double)
- Constructor for class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Constructs a controller with the given coefficients and plant.
LinearSystem
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.system
A plant defined using state-space notation.
LinearSystem(Matrix<States, States>, Matrix<States, Inputs>, Matrix<Outputs, States>, Matrix<Outputs, Inputs>)
- Constructor for class edu.wpi.first.math.system.
LinearSystem
Construct a new LinearSystem from the four system matrices.
LinearSystemId
- Class in
edu.wpi.first.math.system.plant
Linear system ID utility functions.
LinearSystemLoop
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.system
Combines a controller, feedforward, and observer for controlling a mechanism with full state
 feedback.
LinearSystemLoop(LinearQuadraticRegulator<States, Inputs, Outputs>, LinearPlantInversionFeedforward<States, Inputs, Outputs>, KalmanFilter<States, Inputs, Outputs>, double)
- Constructor for class edu.wpi.first.math.system.
LinearSystemLoop
Constructs a state-space loop with the given controller, feedforward and observer.
LinearSystemLoop(LinearQuadraticRegulator<States, Inputs, Outputs>, LinearPlantInversionFeedforward<States, Inputs, Outputs>, KalmanFilter<States, Inputs, Outputs>, Function<Matrix<Inputs, N1>, Matrix<Inputs, N1>>)
- Constructor for class edu.wpi.first.math.system.
LinearSystemLoop
Constructs a state-space loop with the given controller, feedforward, and observer.
LinearSystemLoop(LinearSystem<States, Inputs, Outputs>, LinearQuadraticRegulator<States, Inputs, Outputs>, KalmanFilter<States, Inputs, Outputs>, double, double)
- Constructor for class edu.wpi.first.math.system.
LinearSystemLoop
Constructs a state-space loop with the given plant, controller, and observer.
LinearSystemLoop(LinearSystem<States, Inputs, Outputs>, LinearQuadraticRegulator<States, Inputs, Outputs>, KalmanFilter<States, Inputs, Outputs>, Function<Matrix<Inputs, N1>, Matrix<Inputs, N1>>, double)
- Constructor for class edu.wpi.first.math.system.
LinearSystemLoop
Constructs a state-space loop with the given plant, controller, and observer.
LinearSystemProto
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.system.proto
LinearSystemProto(Nat<States>, Nat<Inputs>, Nat<Outputs>)
- Constructor for class edu.wpi.first.math.system.proto.
LinearSystemProto
Constructs the
Protobuf
implementation.
LinearSystemSim
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.wpilibj.simulation
This class helps simulate linear systems.
LinearSystemSim(LinearSystem<States, Inputs, Outputs>, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Creates a simulated generic linear system with measurement noise.
LinearSystemStruct
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.system.struct
LinearSystemStruct(Nat<States>, Nat<Inputs>, Nat<Outputs>)
- Constructor for class edu.wpi.first.math.system.struct.
LinearSystemStruct
Constructs the
Struct
implementation.
linearVelocity(LinearVelocity)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the linear velocity of the motor.
LinearVelocity
- Interface in
edu.wpi.first.units.measure
LinearVelocityUnit
- Class in
edu.wpi.first.units
A unit of linear velocity like
Units.MetersPerSecond
.
listener
- Variable in class edu.wpi.first.cscore.
VideoEvent
Listener that was triggered.
listener
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Handle of listener that was triggered.
LiveWindow
- Class in
edu.wpi.first.wpilibj.livewindow
The LiveWindow class is the public interface for putting sensors and actuators on the LiveWindow.
lltDecompose(boolean)
- Method in class edu.wpi.first.math.
Matrix
Decompose "this" matrix using Cholesky Decomposition.
loadAprilTagLayoutField()
- Method in enum class edu.wpi.first.apriltag.
AprilTagFields
Deprecated, for removal: This API element is subject to removal in a future version.
Use
AprilTagFieldLayout.loadField(AprilTagFields)
instead.
loadField(AprilTagFields)
- Static method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Get an official
AprilTagFieldLayout
.
loadFromResource(String)
- Static method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Deserializes a field layout from a resource within a internal jar file.
loadLibraries(Class<T>, String...)
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Load a list of native libraries out of a single directory.
loadLibrary(String)
- Static method in class edu.wpi.first.util.
RuntimeLoader
Loads a native library.
loadLibrary(String, List<String>)
- Static method in class edu.wpi.first.util.
CombinedRuntimeLoader
Load a single library from a list of extracted files.
localMeasurements
- Variable in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator.ObserverSnapshot
The local measurements.
log()
- Method in class edu.wpi.first.math.geometry.
Quaternion
The Log operator of a general quaternion.
log(double, double, double, double, double, double, double, double, double, double, double, double, double, double)
- Static method in class edu.wpi.first.math.jni.
Pose3dJNI
Returns a Twist3d that maps the starting pose to the end pose.
log(Pose2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns a Twist2d that maps this pose to the end pose.
log(Pose3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns a Twist3d that maps this pose to the end pose.
log(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Log operator of a quaternion.
log(String)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Log a message to the "messages" entry.
log(String, boolean)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a boolean data point.
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, boolean[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a boolean array data point.
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, byte[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a raw byte array data point.
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, double)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 64-bit floating point data point.
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, double)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, double[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 64-bit floating point array data point.
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, float)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 32-bit floating point data point.
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, float)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, float[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 32-bit floating point array data point.
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, int)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 32-bit integer data point.
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, int)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, int[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 32-bit integer array data point.
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, int[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, long)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 64-bit integer data point.
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, long)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, long[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a 64-bit integer array data point.
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, Measure<?>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a measurement's value in terms of its base unit.
log(String, Measure<U>, U)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a measurement's value in terms of another unit.
log(String, Enum<?>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs an enum value.
log(String, String)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a text data point.
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, String)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, String[])
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a string array data point.
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, Collection<String>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a collection of strings data point.
log(String, Collection<S>, Struct<S>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a collection of struct-serializable objects.
log(String, S[], Struct<S>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs an array of struct-serializable objects.
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, S[], Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
log(String, S, Struct<S>)
- Method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Logs a struct-serializable object.
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
FileBackend
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
LazyBackend
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
MultiBackend
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NestedBackend
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
log(String, S, Struct<S>)
- Method in class edu.wpi.first.epilogue.logging.
NullBackend
LogBackedSendableBuilder
- Class in
edu.wpi.first.epilogue.logging
A sendable builder implementation that sends data to a
EpilogueBackend
.
LogBackedSendableBuilder(EpilogueBackend)
- Constructor for class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
Creates a new sendable builder that delegates writes to an underlying backend.
logConsoleOutput(boolean)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Enable or disable logging of the console output.
Logged
- Annotation Interface in
edu.wpi.first.epilogue
Place this annotation on a class to automatically log every field and every public accessor
 method (methods with no arguments and return a loggable data type).
Logged.Importance
- Enum Class in
edu.wpi.first.epilogue
Data importance.
Logged.Naming
- Enum Class in
edu.wpi.first.epilogue
Different behaviors for how Epilogue will generate the names of logged data points.
Logged.Strategy
- Enum Class in
edu.wpi.first.epilogue
Opt-in or opt-out strategies for logging.
LoggerDisabler
- Class in
edu.wpi.first.epilogue.logging.errors
An error handler that disables loggers after too many exceptions are raised.
LoggerDisabler(int)
- Constructor for class edu.wpi.first.epilogue.logging.errors.
LoggerDisabler
Creates a new logger-disabling error handler.
loggingPeriod
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The period Epilogue will log at.
loggingPeriodOffset
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The offset from the periodic run that Epilogue will log at.
logMessage
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Log message (for log message events).
LogMessage
- Class in
edu.wpi.first.networktables
NetworkTables log message.
LogMessage(int, String, int, String)
- Constructor for class edu.wpi.first.networktables.
LogMessage
Constructor.
logNetworkTables(boolean)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Enable or disable logging of NetworkTables data.
logSendable(EpilogueBackend, Sendable)
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Logs a sendable type.
LongToObjectHashMap
<
V
> - Class in
edu.wpi.first.units.collections
A variant on
java.util.HashMap<K, V>
that uses primitive long ints for map keys instead
 of autoboxed Long objects like would be used for a
Map<Long, V>
.
LongToObjectHashMap()
- Constructor for class edu.wpi.first.units.collections.
LongToObjectHashMap
Default constructor.
LongToObjectHashMap.IteratorFunction
<
V
> - Interface in
edu.wpi.first.units.collections
Interface for map iterator function.
LOOP_TIMING_ERROR
- Static variable in class edu.wpi.first.hal.
HALUtil
Digital module loop timing is not the expected value.
loopFunc()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Loop function.
lt(Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is less than another measure of the same unit.
lte(Measure<U>)
- Method in interface edu.wpi.first.units.
Measure
Checks if this measure is less than or equivalent to another measure of the same unit.
LTVDifferentialDriveController
- Class in
edu.wpi.first.math.controller
The linear time-varying differential drive controller has a similar form to the LQR, but the
 model used to compute the controller gain is the nonlinear differential drive model linearized
 around the drivetrain's current state.
LTVDifferentialDriveController(LinearSystem<N2, N2, N2>, double, Vector<N5>, Vector<N2>, double)
- Constructor for class edu.wpi.first.math.controller.
LTVDifferentialDriveController
Constructs a linear time-varying differential drive controller.
LTVUnicycleController
- Class in
edu.wpi.first.math.controller
The linear time-varying unicycle controller has a similar form to the LQR, but the model used to
 compute the controller gain is the nonlinear unicycle model linearized around the drivetrain's
 current state.
LTVUnicycleController(double)
- Constructor for class edu.wpi.first.math.controller.
LTVUnicycleController
Constructs a linear time-varying unicycle controller with default maximum desired error
 tolerances of (x = 0.0625 m, y = 0.125 m, heading = 2 rad), default maximum desired control
 effort of (linear velocity = 1 m/s, angular velocity = 2 rad/s), and default maximum Velocity
 of 9 m/s.
LTVUnicycleController(double, double)
- Constructor for class edu.wpi.first.math.controller.
LTVUnicycleController
Constructs a linear time-varying unicycle controller with default maximum desired error
 tolerances of (x = 0.0625 m, y = 0.125 m, heading = 2 rad), default maximum desired control
 effort of (1 m/s, 2 rad/s).
LTVUnicycleController(Vector<N3>, Vector<N2>, double)
- Constructor for class edu.wpi.first.math.controller.
LTVUnicycleController
Constructs a linear time-varying unicycle controller.
LTVUnicycleController(Vector<N3>, Vector<N2>, double, double)
- Constructor for class edu.wpi.first.math.controller.
LTVUnicycleController
Constructs a linear time-varying unicycle controller.
M
m_aSource
- Variable in class edu.wpi.first.wpilibj.
Encoder
The 'a' source.
m_baseUnitMagnitude
- Variable in class edu.wpi.first.units.mutable.
MutableMeasureBase
The magnitude of the measurement, in terms of
MutableMeasureBase.m_unit
's base unit.
m_bSource
- Variable in class edu.wpi.first.wpilibj.
Encoder
The 'b' source.
m_command
- Variable in class edu.wpi.first.wpilibj2.command.
WrapperCommand
Command being wrapped.
m_controller
- Variable in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
PID controller.
m_controller
- Variable in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
PID controller.
m_controller
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Profiled PID controller.
m_controller
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Profiled PID controller.
m_deadband
- Variable in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Input deadband.
m_downSource
- Variable in class edu.wpi.first.wpilibj.
Counter
What makes the counter count down.
m_drive
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
Sends the SysId-specified drive signal to the mechanism motors during test routines.
m_enabled
- Variable in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Whether PID controller output is enabled.
m_enabled
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Whether the profiled PID controller output is enabled.
m_entry
- Variable in class edu.wpi.first.util.datalog.
DataLogEntry
The data log entry index.
m_goal
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Goal getter.
m_handle
- Variable in class edu.wpi.first.cscore.
VideoSink
The VideoSink handle.
m_handle
- Variable in class edu.wpi.first.cscore.
VideoSource
Video source handle.
m_handle
- Variable in class edu.wpi.first.hal.
SimValue
The native handle for this SimValue.
m_handle
- Variable in class edu.wpi.first.networktables.
EntryBase
NetworkTables handle.
m_handle
- Variable in class edu.wpi.first.networktables.
Topic
NetworkTables handle.
m_impl
- Variable in class edu.wpi.first.util.datalog.
DataLog
Implementation handle.
m_index
- Variable in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
PneumaticsBase index.
m_indexSource
- Variable in class edu.wpi.first.wpilibj.
Encoder
The index source.
m_inst
- Variable in class edu.wpi.first.networktables.
Topic
NetworkTables instance.
m_kAAngular
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
The angular acceleration gain in volts per (radians per second squared).
m_kALinear
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
The linear acceleration gain in volts per (meters per second squared).
m_kVAngular
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
The angular velocity gain in volts per (radians per second).
m_kVLinear
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
The linear velocity gain in volts per (meters per second).
m_log
- Variable in class edu.wpi.first.util.datalog.
DataLogEntry
The data log instance associated with the entry.
m_log
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
Returns measured data (voltages, positions, velocities) of the mechanism motors during test
 routines.
m_loop
- Variable in class edu.wpi.first.wpilibj.event.
BooleanEvent
Poller loop.
m_magnitude
- Variable in class edu.wpi.first.units.mutable.
MutableMeasureBase
The magnitude of the measurement, in terms of
MutableMeasureBase.m_unit
.
m_maxOutput
- Variable in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Maximum output.
m_measurement
- Variable in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
Measurement getter.
m_measurement
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Measurement getter.
m_measurementStdDevs
- Variable in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
The standard deviations of measurements, used for adding noise to the measurements.
m_name
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
The name of the mechanism being tested.
m_plant
- Variable in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
The plant that represents the linear system.
m_port
- Variable in class edu.wpi.first.wpilibj.
AnalogTrigger
Where the analog trigger is attached.
m_port
- Variable in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
GenericHID port.
m_pwm
- Variable in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
PWM instances for motor controller.
m_rampRate
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
The voltage ramp rate used for quasistatic test routines.
m_recordState
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
Optional handle for recording test state in a third-party logging solution.
m_resourceFile
- Variable in enum class edu.wpi.first.apriltag.
AprilTagFields
Resource filename.
m_setpoint
- Variable in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
Setpoint getter.
m_stepVoltage
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
The step voltage output used for dynamic test routines.
m_storage
- Variable in class edu.wpi.first.math.
Matrix
Storage for underlying EJML matrix.
m_subsystem
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
The subsystem containing the motor(s) that is (or are) being characterized.
m_timeout
- Variable in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Config
Safety timeout for the test routine commands.
m_timer
- Variable in class edu.wpi.first.wpilibj2.command.
WaitCommand
The timer used for waiting.
m_u
- Variable in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Input vector.
m_unit
- Variable in class edu.wpi.first.units.mutable.
MutableMeasureBase
The unit of measurement.
m_upSource
- Variable in class edu.wpi.first.wpilibj.
Counter
What makes the counter count up.
m_useOutput
- Variable in class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
PID controller output consumer.
m_useOutput
- Variable in class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Profiled PID controller output consumer.
m_value
- Variable in enum class edu.wpi.first.hal.
SimDevice.Direction
The native value of this Direction.
m_x
- Variable in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
State vector.
m_y
- Variable in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Output vector.
magnitude()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Returns the value of the
magnitude
record component.
magnitude()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Returns the value of the
magnitude
record component.
magnitude()
- Method in interface edu.wpi.first.units.
Measure
Gets the unitless magnitude of this measure.
magnitude()
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
make()
- Method in class edu.wpi.first.units.
UnitBuilder
Creates the new unit based off of the builder methods called prior.
make(UnitBuilder.UnitConstructorFunction<U>)
- Method in class edu.wpi.first.units.
UnitBuilder
Creates the new unit based off of the builder methods called prior, passing them to a provided
 constructor function.
makeBoolean(boolean)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL boolean value.
makeBoolean(boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean value.
makeBoolean(boolean, long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean value.
makeBooleanArray(boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean[] value.
makeBooleanArray(boolean[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean[] value.
makeBooleanArray(Boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean[] value.
makeBooleanArray(Boolean[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a boolean[] value.
makeCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
makeCompressor()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Create a compressor object.
makeCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
makeCostMatrix(Matrix<Elements, N1>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Creates a cost matrix from the given vector for use with LQR.
makeCovarianceMatrix(Nat<States>, Matrix<States, N1>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Creates a covariance matrix from the given vector for use with Kalman filters.
makeDouble(double)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL double value.
makeDouble(double)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double value.
makeDouble(double, long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double value.
makeDoubleArray(double[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double[] value.
makeDoubleArray(double[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double[] value.
makeDoubleArray(Double[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double[] value.
makeDoubleArray(Double[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a double[] value.
makeDoubleSolenoid(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
makeDoubleSolenoid(int, int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Create a double solenoid object for the specified channels.
makeDoubleSolenoid(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
makeEnum(int)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL enum value.
makeFloat(float)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float value.
makeFloat(float, long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float value.
makeFloatArray(float[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float[] value.
makeFloatArray(float[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float[] value.
makeFloatArray(Float[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float[] value.
makeFloatArray(Float[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a float[] value.
makeInt(int)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL integer value.
makeInteger(long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long value.
makeInteger(long, long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long value.
makeIntegerArray(long[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long[] value.
makeIntegerArray(long[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long[] value.
makeIntegerArray(Long[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long[] value.
makeIntegerArray(Long[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a long[] value.
makeLong(long)
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL long value.
makeRaw(byte[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a byte[] value.
makeRaw(byte[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a byte[] value.
makeSolenoid(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
makeSolenoid(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Create a solenoid object for the specified channel.
makeSolenoid(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
makeString(String)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a String value.
makeString(String, long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a String value.
makeStringArray(String[])
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a String[] value.
makeStringArray(String[], long)
- Static method in class edu.wpi.first.networktables.
NetworkTableValue
Creates a String[] value.
makeUnassigned()
- Static method in class edu.wpi.first.hal.
HALValue
Build a HAL unassigned value.
makeWhiteNoiseVector(Matrix<N, N1>)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Creates a vector of normally distributed white noise with the given noise intensities for each
 element.
mapIndex(LEDPattern.IndexMapper)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern with remapped indices.
mappingInputRange(double, double)
- Method in class edu.wpi.first.units.
UnitBuilder
Defines a mapping for values within the given input range.
mask(LEDPattern)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Similar to
LEDPattern.blend(LEDPattern)
, but performs a bitwise mask on each color channel rather
 than averaging the colors for each LED.
Mass
- Interface in
edu.wpi.first.units.measure
MassUnit
- Class in
edu.wpi.first.units
Unit of mass dimension.
MassUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of mass, kilograms.
MatBuilder
- Class in
edu.wpi.first.math
A class for constructing arbitrary RxC matrices.
MatchInfoData
- Class in
edu.wpi.first.hal
Structure for holding the match info data request.
MatchInfoData()
- Constructor for class edu.wpi.first.hal.
MatchInfoData
Default constructor.
matchNumber
- Variable in class edu.wpi.first.hal.
MatchInfoData
Stores the match number.
matchType
- Variable in class edu.wpi.first.hal.
MatchInfoData
Stores the match type.
MathShared
- Interface in
edu.wpi.first.math
WPIMath utility functions.
MathSharedStore
- Class in
edu.wpi.first.math
Storage for MathShared object.
MathUsageId
- Enum Class in
edu.wpi.first.math
WPIMath usage reporting IDs.
MathUtil
- Class in
edu.wpi.first.math
Math utility functions.
Matrix
<
R
extends
Num
,
C
extends
Num
> - Class in
edu.wpi.first.math
A shape-safe wrapper over Efficient Java Matrix Library (EJML) matrices.
Matrix(Matrix<R, C>)
- Constructor for class edu.wpi.first.math.
Matrix
Constructs a new matrix with the storage of the supplied matrix.
Matrix(Nat<R>, Nat<C>)
- Constructor for class edu.wpi.first.math.
Matrix
Constructs an empty zero matrix of the given dimensions.
Matrix(Nat<R>, Nat<C>, double[])
- Constructor for class edu.wpi.first.math.
Matrix
Constructs a new
Matrix
with the given storage.
Matrix(SimpleMatrix)
- Constructor for class edu.wpi.first.math.
Matrix
Constructs a new
Matrix
with the given storage.
MatrixProto
<
R
extends
Num
,
C
extends
Num
> - Class in
edu.wpi.first.math.proto
MatrixProto(Nat<R>, Nat<C>)
- Constructor for class edu.wpi.first.math.proto.
MatrixProto
Constructs the
Protobuf
implementation.
MatrixStruct
<
R
extends
Num
,
C
extends
Num
> - Class in
edu.wpi.first.math.struct
MatrixStruct(Nat<R>, Nat<C>)
- Constructor for class edu.wpi.first.math.struct.
MatrixStruct
Constructs the
Struct
implementation.
max
- Variable in class edu.wpi.first.hal.
PWMConfigDataResult
The maximum PWM value in microseconds.
max()
- Method in class edu.wpi.first.math.
Matrix
Returns the largest element of this matrix.
max(Measure<U>...)
- Static method in interface edu.wpi.first.units.
Measure
Returns the measure with the absolute value closest to positive infinity.
maxAbs()
- Method in class edu.wpi.first.math.
Matrix
Returns the absolute value of the element in this matrix with the largest absolute value.
maxAcceleration
- Variable in class edu.wpi.first.math.trajectory.
TrapezoidProfile.Constraints
Maximum acceleration.
maxAccelerationMetersPerSecondSq
- Variable in class edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint.MinMax
The maximum acceleration.
maxAchievableAcceleration(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the maximum achievable acceleration given a maximum voltage supply and a velocity.
maxAchievableAcceleration(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the maximum achievable acceleration given a maximum voltage supply and a velocity.
maxAchievableAcceleration(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the maximum achievable acceleration given a maximum voltage supply, a position, and
 a velocity.
maxAchievableVelocity(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the maximum achievable velocity given a maximum voltage supply and an acceleration.
maxAchievableVelocity(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the maximum achievable velocity given a maximum voltage supply and an acceleration.
maxAchievableVelocity(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the maximum achievable velocity given a maximum voltage supply, a position, and an
 acceleration.
maxInput
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
Maximum unsigned input voltage.
maxLineFitMSE
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
When fitting lines to the contours, the maximum mean squared error allowed.
maxNumMaxima
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
How many corner candidates to consider when segmenting a group of pixels into a quad.
maxVelocity
- Variable in class edu.wpi.first.math.trajectory.
TrapezoidProfile.Constraints
Maximum velocity.
maxVelocity()
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile.Constraints
Computes the max achievable velocity for an Exponential Profile.
MaxVelocityConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
Represents a constraint that enforces a max velocity.
MaxVelocityConstraint(double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
MaxVelocityConstraint
Constructs a new MaxVelocityConstraint.
mean()
- Method in class edu.wpi.first.math.
Matrix
Calculates the mean of the elements in this matrix.
Measure
<
U
extends
Unit
> - Interface in
edu.wpi.first.units
A measure holds the magnitude and unit of some dimension, such as distance, time, or speed.
MecanumControllerCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that uses two PID controllers (
PIDController
) and a ProfiledPIDController
 (
ProfiledPIDController
) to follow a trajectory
Trajectory
with a mecanum drive.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, SimpleMotorFeedforward, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, double, PIDController, PIDController, PIDController, PIDController, Supplier<MecanumDriveWheelSpeeds>, MecanumControllerCommand.MecanumVoltagesConsumer, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Constructs a new MecanumControllerCommand that when executed will follow the provided
 trajectory.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, SimpleMotorFeedforward, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, double, PIDController, PIDController, PIDController, PIDController, Supplier<MecanumDriveWheelSpeeds>, Consumer<MecanumDriveMotorVoltages>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Deprecated, for removal: This API element is subject to removal in a future version.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, SimpleMotorFeedforward, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, Supplier<Rotation2d>, double, PIDController, PIDController, PIDController, PIDController, Supplier<MecanumDriveWheelSpeeds>, MecanumControllerCommand.MecanumVoltagesConsumer, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Constructs a new MecanumControllerCommand that when executed will follow the provided
 trajectory.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, SimpleMotorFeedforward, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, Supplier<Rotation2d>, double, PIDController, PIDController, PIDController, PIDController, Supplier<MecanumDriveWheelSpeeds>, Consumer<MecanumDriveMotorVoltages>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Deprecated, for removal: This API element is subject to removal in a future version.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, double, Consumer<MecanumDriveWheelSpeeds>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Constructs a new MecanumControllerCommand that when executed will follow the provided
 trajectory.
MecanumControllerCommand(Trajectory, Supplier<Pose2d>, MecanumDriveKinematics, PIDController, PIDController, ProfiledPIDController, Supplier<Rotation2d>, double, Consumer<MecanumDriveWheelSpeeds>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
MecanumControllerCommand
Constructs a new MecanumControllerCommand that when executed will follow the provided
 trajectory.
MecanumControllerCommand.MecanumVoltagesConsumer
- Interface in
edu.wpi.first.wpilibj2.command
A consumer to represent an operation on the voltages of a mecanum drive.
MecanumDrive
- Class in
edu.wpi.first.wpilibj.drive
A class for driving Mecanum drive platforms.
MecanumDrive(MotorController, MotorController, MotorController, MotorController)
- Constructor for class edu.wpi.first.wpilibj.drive.
MecanumDrive
Construct a MecanumDrive.
MecanumDrive(DoubleConsumer, DoubleConsumer, DoubleConsumer, DoubleConsumer)
- Constructor for class edu.wpi.first.wpilibj.drive.
MecanumDrive
Construct a MecanumDrive.
MecanumDrive.WheelSpeeds
- Class in
edu.wpi.first.wpilibj.drive
Wheel speeds for a mecanum drive.
MecanumDriveKinematics
- Class in
edu.wpi.first.math.kinematics
Helper class that converts a chassis velocity (dx, dy, and dtheta components) into individual
 wheel speeds.
MecanumDriveKinematics(Translation2d, Translation2d, Translation2d, Translation2d)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Constructs a mecanum drive kinematics object.
MecanumDriveKinematicsConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
A class that enforces constraints on the mecanum drive kinematics.
MecanumDriveKinematicsConstraint(MecanumDriveKinematics, double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
MecanumDriveKinematicsConstraint
Constructs a mecanum drive kinematics constraint.
MecanumDriveKinematicsProto
- Class in
edu.wpi.first.math.kinematics.proto
MecanumDriveKinematicsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
MecanumDriveKinematicsStruct
- Class in
edu.wpi.first.math.kinematics.struct
MecanumDriveKinematicsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
MecanumDriveMotorVoltages
- Class in
edu.wpi.first.math.kinematics
Deprecated, for removal: This API element is subject to removal in a future version.
MecanumDriveMotorVoltages()
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Constructs a MecanumDriveMotorVoltages with zeros for all member fields.
MecanumDriveMotorVoltages(double, double, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Constructs a MecanumDriveMotorVoltages.
MecanumDriveOdometry
- Class in
edu.wpi.first.math.kinematics
Class for mecanum drive odometry.
MecanumDriveOdometry(MecanumDriveKinematics, Rotation2d, MecanumDriveWheelPositions)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveOdometry
Constructs a MecanumDriveOdometry object with the default pose at the origin.
MecanumDriveOdometry(MecanumDriveKinematics, Rotation2d, MecanumDriveWheelPositions, Pose2d)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveOdometry
Constructs a MecanumDriveOdometry object.
MecanumDriveOdometry3d
- Class in
edu.wpi.first.math.kinematics
Class for mecanum drive odometry.
MecanumDriveOdometry3d(MecanumDriveKinematics, Rotation3d, MecanumDriveWheelPositions)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveOdometry3d
Constructs a MecanumDriveOdometry3d object with the default pose at the origin.
MecanumDriveOdometry3d(MecanumDriveKinematics, Rotation3d, MecanumDriveWheelPositions, Pose3d)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveOdometry3d
Constructs a MecanumDriveOdometry3d object.
MecanumDrivePoseEstimator
- Class in
edu.wpi.first.math.estimator
This class wraps
Mecanum Drive Odometry
to fuse latency-compensated
 vision measurements with mecanum drive encoder distance measurements.
MecanumDrivePoseEstimator(MecanumDriveKinematics, Rotation2d, MecanumDriveWheelPositions, Pose2d)
- Constructor for class edu.wpi.first.math.estimator.
MecanumDrivePoseEstimator
Constructs a MecanumDrivePoseEstimator with default standard deviations for the model and
 vision measurements.
MecanumDrivePoseEstimator(MecanumDriveKinematics, Rotation2d, MecanumDriveWheelPositions, Pose2d, Matrix<N3, N1>, Matrix<N3, N1>)
- Constructor for class edu.wpi.first.math.estimator.
MecanumDrivePoseEstimator
Constructs a MecanumDrivePoseEstimator.
MecanumDrivePoseEstimator3d
- Class in
edu.wpi.first.math.estimator
This class wraps
Mecanum Drive Odometry
to fuse
 latency-compensated vision measurements with mecanum drive encoder distance measurements.
MecanumDrivePoseEstimator3d(MecanumDriveKinematics, Rotation3d, MecanumDriveWheelPositions, Pose3d)
- Constructor for class edu.wpi.first.math.estimator.
MecanumDrivePoseEstimator3d
Constructs a MecanumDrivePoseEstimator3d with default standard deviations for the model and
 vision measurements.
MecanumDrivePoseEstimator3d(MecanumDriveKinematics, Rotation3d, MecanumDriveWheelPositions, Pose3d, Matrix<N4, N1>, Matrix<N4, N1>)
- Constructor for class edu.wpi.first.math.estimator.
MecanumDrivePoseEstimator3d
Constructs a MecanumDrivePoseEstimator3d.
MecanumDriveWheelPositions
- Class in
edu.wpi.first.math.kinematics
Represents the wheel positions for a mecanum drive drivetrain.
MecanumDriveWheelPositions()
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Constructs a MecanumDriveWheelPositions with zeros for all member fields.
MecanumDriveWheelPositions(double, double, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Constructs a MecanumDriveWheelPositions.
MecanumDriveWheelPositions(Distance, Distance, Distance, Distance)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Constructs a MecanumDriveWheelPositions.
MecanumDriveWheelPositionsProto
- Class in
edu.wpi.first.math.kinematics.proto
MecanumDriveWheelPositionsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
MecanumDriveWheelPositionsStruct
- Class in
edu.wpi.first.math.kinematics.struct
MecanumDriveWheelPositionsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
MecanumDriveWheelSpeeds
- Class in
edu.wpi.first.math.kinematics
Represents the wheel speeds for a mecanum drive drivetrain.
MecanumDriveWheelSpeeds()
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Constructs a MecanumDriveWheelSpeeds with zeros for all member fields.
MecanumDriveWheelSpeeds(double, double, double, double)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Constructs a MecanumDriveWheelSpeeds.
MecanumDriveWheelSpeeds(LinearVelocity, LinearVelocity, LinearVelocity, LinearVelocity)
- Constructor for class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Constructs a MecanumDriveWheelSpeeds.
MecanumDriveWheelSpeedsProto
- Class in
edu.wpi.first.math.kinematics.proto
MecanumDriveWheelSpeedsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
MecanumDriveWheelSpeedsStruct
- Class in
edu.wpi.first.math.kinematics.struct
MecanumDriveWheelSpeedsStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
Mechanism(Consumer<Voltage>, Consumer<SysIdRoutineLog>, Subsystem)
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
Create a new mechanism specification for a SysId routine.
Mechanism(Consumer<Voltage>, Consumer<SysIdRoutineLog>, Subsystem, String)
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Mechanism
Create a new mechanism specification for a SysId routine.
Mechanism2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
Visual 2D representation of arms, elevators, and general mechanisms through a node-based API.
Mechanism2d(double, double)
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
Create a new Mechanism2d with the given dimensions and default color (dark blue).
Mechanism2d(double, double, Color8Bit)
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
Create a new Mechanism2d with the given dimensions.
MechanismLigament2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
Ligament node on a Mechanism2d.
MechanismLigament2d(String, double, double)
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Create a new ligament with the default color (orange) and thickness (6).
MechanismLigament2d(String, double, double, double, Color8Bit)
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Create a new ligament.
MechanismObject2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
Common base class for all Mechanism2d node types.
MechanismObject2d(String)
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
MechanismObject2d
Create a new Mechanism node object.
MechanismRoot2d
- Class in
edu.wpi.first.wpilibj.smartdashboard
Root Mechanism2d node.
MedianFilter
- Class in
edu.wpi.first.math.filter
A class that implements a moving-window median filter.
MedianFilter(int)
- Constructor for class edu.wpi.first.math.filter.
MedianFilter
Creates a new MedianFilter.
mergeFrom(Controller.ProtobufArmFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
mergeFrom(Controller.ProtobufDifferentialDriveFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
mergeFrom(Controller.ProtobufDifferentialDriveWheelVoltages)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
mergeFrom(Controller.ProtobufElevatorFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
mergeFrom(Controller.ProtobufSimpleMotorFeedforward)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
mergeFrom(Geometry2D.ProtobufEllipse2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
mergeFrom(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
mergeFrom(Geometry2D.ProtobufRectangle2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
mergeFrom(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
mergeFrom(Geometry2D.ProtobufTransform2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
mergeFrom(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
mergeFrom(Geometry2D.ProtobufTwist2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
mergeFrom(Geometry3D.ProtobufPose3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
mergeFrom(Geometry3D.ProtobufQuaternion)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
mergeFrom(Geometry3D.ProtobufRotation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
mergeFrom(Geometry3D.ProtobufTransform3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
mergeFrom(Geometry3D.ProtobufTranslation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
mergeFrom(Geometry3D.ProtobufTwist3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
mergeFrom(Kinematics.ProtobufChassisSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
mergeFrom(Kinematics.ProtobufDifferentialDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
mergeFrom(Kinematics.ProtobufDifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
mergeFrom(Kinematics.ProtobufDifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
mergeFrom(Kinematics.ProtobufMecanumDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
mergeFrom(Kinematics.ProtobufMecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
mergeFrom(Kinematics.ProtobufMecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
mergeFrom(Kinematics.ProtobufSwerveDriveKinematics)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
mergeFrom(Kinematics.ProtobufSwerveModulePosition)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
mergeFrom(Kinematics.ProtobufSwerveModuleState)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
mergeFrom(Plant.ProtobufDCMotor)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
mergeFrom(Spline.ProtobufCubicHermiteSpline)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
mergeFrom(Spline.ProtobufQuinticHermiteSpline)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
mergeFrom(System.ProtobufLinearSystem)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
mergeFrom(Trajectory.ProtobufTrajectory)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
mergeFrom(Trajectory.ProtobufTrajectoryState)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
mergeFrom(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
mergeFrom(Wpimath.ProtobufVector)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
mergeFrom(JsonSource)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
mergeFrom(ProtoSource)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
MerweScaledSigmaPoints
<
S
extends
Num
> - Class in
edu.wpi.first.math.estimator
Generates sigma points and weights according to Van der Merwe's 2004 dissertation[1] for the
 UnscentedKalmanFilter class.
MerweScaledSigmaPoints(Nat<S>)
- Constructor for class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Constructs a generator for Van der Merwe scaled sigma points with default values for alpha,
 beta, and kappa.
MerweScaledSigmaPoints(Nat<S>, double, double, int)
- Constructor for class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Constructs a generator for Van der Merwe scaled sigma points.
message
- Variable in class edu.wpi.first.networktables.
LogMessage
The message.
messageID
- Variable in class edu.wpi.first.hal.
CANStreamMessage
The message ID.
metadata
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.MetadataRecordData
New metadata for the entry.
metadata
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.StartRecordData
Initial metadata.
Meter
- Static variable in class edu.wpi.first.units.
Units
The base unit of distance.
Meters
- Static variable in class edu.wpi.first.units.
Units
The base unit of distance.
MetersPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of linear velocity, equivalent to travelling at a rate of one
Meter
per
Units.Second
.
MetersPerSecondPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of linear acceleration, equivalent to accelerating at a rate of one
Meter
per
Units.Second
every second.
metersToFeet(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given meters to feet.
metersToInches(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given meters to inches.
Micro(U)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a millionth of the base unit, eg Microseconds = Micro(Units.Seconds).
Micro(U, String, String)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a millionth of the base unit, eg
Microseconds =
 Micro(Units.Seconds, "Microseconds", 'us")
.
Microsecond
- Static variable in class edu.wpi.first.units.
Units
Alias for
Units.Microseconds
to make combined unit definitions read more smoothly.
Microseconds
- Static variable in class edu.wpi.first.units.
Units
1/1,000,000 of a
Second
.
Milli(U)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a thousandth of the base unit, eg Milliseconds = Milli(Units.Seconds).
Milli(U, String, String)
- Static method in class edu.wpi.first.units.
Units
Creates a unit equal to a thousandth of the base unit, eg Milliseconds = Milli(Units.Seconds).
Milliamp
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of an
Units.Amp
.
Milliamps
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of an
Units.Amp
.
Millihertz
- Static variable in class edu.wpi.first.units.
Units
1/1000th of a
Units.Hertz
.
Millijoule
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Joule
.
Millijoules
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Joule
.
Millimeter
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Meter
.
Millimeters
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Meter
.
MilliOhm
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Ohm
.
MilliOhms
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Ohm
.
Millisecond
- Static variable in class edu.wpi.first.units.
Units
Alias for
Units.Milliseconds
to make combined unit definitions read more smoothly.
Milliseconds
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Second
.
millisecondsToSeconds(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given milliseconds to seconds.
Millivolt
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Volt
.
Millivolts
- Static variable in class edu.wpi.first.units.
Units
1/1000 of a
Units.Volt
.
Milliwatt
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Watt
.
Milliwatts
- Static variable in class edu.wpi.first.units.
Units
A unit equal to 1/1000 of a
Units.Watt
.
min
- Variable in class edu.wpi.first.hal.
PWMConfigDataResult
The minimum PWM value in microseconds.
min(Measure<U>...)
- Static method in interface edu.wpi.first.units.
Measure
Returns the measure with the absolute value closest to negative infinity.
minAccelerationMetersPerSecondSq
- Variable in class edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint.MinMax
The minimum acceleration.
minAchievableAcceleration(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the minimum achievable acceleration given a maximum voltage supply and a velocity.
minAchievableAcceleration(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the minimum achievable acceleration given a maximum voltage supply and a velocity.
minAchievableAcceleration(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the minimum achievable acceleration given a maximum voltage supply, a position, and
 a velocity.
minAchievableVelocity(double, double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Calculates the minimum achievable velocity given a maximum voltage supply and an acceleration.
minAchievableVelocity(double, double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Calculates the minimum achievable velocity given a maximum voltage supply and an acceleration.
minAchievableVelocity(double, double, double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Calculates the minimum achievable velocity given a maximum voltage supply, a position, and an
 acceleration.
minClusterPixels
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
Threshold used to reject quads containing too few pixels.
minimumImportance
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The minimum importance level of data to be logged.
minInternal()
- Method in class edu.wpi.first.math.
Matrix
Returns the smallest element of this matrix.
MinMax()
- Constructor for class edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint.MinMax
Constructs a MinMax with default values.
MinMax(double, double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
TrajectoryConstraint.MinMax
Constructs a MinMax.
minus(double)
- Method in class edu.wpi.first.math.
Matrix
Subtracts the given value from all the elements of this matrix.
minus(Pose2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the Transform2d that maps the one pose to another.
minus(Pose3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the Transform3d that maps the one pose to another.
minus(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Subtracts another quaternion from this quaternion entrywise.
minus(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Subtracts the new rotation from the current rotation and returns the new rotation.
minus(Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Subtracts the new rotation from the current rotation and returns the new rotation.
minus(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the difference between two translations.
minus(Translation3d)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the difference between two translations.
minus(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Subtracts the other ChassisSpeeds from the current ChassisSpeeds and returns the difference.
minus(DifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Subtracts the other DifferentialDriveWheelSpeeds from the current DifferentialDriveWheelSpeeds
 and returns the difference.
minus(MecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Subtracts the other MecanumDriveWheelSpeeds from the current MecanumDriveWheelSpeeds and
 returns the difference.
minus(Matrix<R, C>)
- Method in class edu.wpi.first.math.
Matrix
Subtracts the given matrix from this matrix.
minus(Vector<R>)
- Method in class edu.wpi.first.math.
Vector
Subtracts the given vector to this vector.
minus(Measure<? extends AccelerationUnit<D>>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
minus(Measure<? extends AngleUnit>)
- Method in interface edu.wpi.first.units.measure.
Angle
minus(Measure<? extends AngularAccelerationUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
minus(Measure<? extends AngularMomentumUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
minus(Measure<? extends AngularVelocityUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
minus(Measure<? extends CurrentUnit>)
- Method in interface edu.wpi.first.units.measure.
Current
minus(Measure<? extends DimensionlessUnit>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
minus(Measure<? extends DistanceUnit>)
- Method in interface edu.wpi.first.units.measure.
Distance
minus(Measure<? extends EnergyUnit>)
- Method in interface edu.wpi.first.units.measure.
Energy
minus(Measure<? extends ForceUnit>)
- Method in interface edu.wpi.first.units.measure.
Force
minus(Measure<? extends FrequencyUnit>)
- Method in interface edu.wpi.first.units.measure.
Frequency
minus(Measure<? extends LinearAccelerationUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
minus(Measure<? extends LinearMomentumUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
minus(Measure<? extends LinearVelocityUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
minus(Measure<? extends MassUnit>)
- Method in interface edu.wpi.first.units.measure.
Mass
minus(Measure<? extends MomentOfInertiaUnit>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
minus(Measure<? extends MultUnit<A, B>>)
- Method in interface edu.wpi.first.units.measure.
Mult
minus(Measure<? extends PerUnit<Dividend, Divisor>>)
- Method in interface edu.wpi.first.units.measure.
Per
minus(Measure<? extends PowerUnit>)
- Method in interface edu.wpi.first.units.measure.
Power
minus(Measure<? extends ResistanceUnit>)
- Method in interface edu.wpi.first.units.measure.
Resistance
minus(Measure<? extends TemperatureUnit>)
- Method in interface edu.wpi.first.units.measure.
Temperature
minus(Measure<? extends TimeUnit>)
- Method in interface edu.wpi.first.units.measure.
Time
minus(Measure<? extends TorqueUnit>)
- Method in interface edu.wpi.first.units.measure.
Torque
minus(Measure<? extends VelocityUnit<D>>)
- Method in interface edu.wpi.first.units.measure.
Velocity
minus(Measure<? extends VoltageUnit>)
- Method in interface edu.wpi.first.units.measure.
Voltage
minus(Measure<? extends U>)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
minus(Measure<? extends U>)
- Method in interface edu.wpi.first.units.
Measure
Subtracts another measure of the same unit type from this one.
minus(Measure<? extends U>)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
Minute
- Static variable in class edu.wpi.first.units.
Units
Alias for
Units.Minutes
to make combined unit definitions read more smoothly.
Minutes
- Static variable in class edu.wpi.first.units.
Units
60
Units.Seconds
.
minWhiteBlackDiff
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
Minimum brightness offset.
MjpegServer
- Class in
edu.wpi.first.cscore
A sink that acts as a MJPEG-over-HTTP network server.
MjpegServer(String, int)
- Constructor for class edu.wpi.first.cscore.
MjpegServer
Create a MJPEG-over-HTTP server sink.
MjpegServer(String, String, int)
- Constructor for class edu.wpi.first.cscore.
MjpegServer
Create a MJPEG-over-HTTP server sink.
mode
- Variable in class edu.wpi.first.cscore.
VideoEvent
New source video mode.
MomentOfInertia
- Interface in
edu.wpi.first.units.measure
MomentOfInertiaUnit
- Class in
edu.wpi.first.units
A unit of moment of inertia, like
Units.KilogramSquareMeters
.
motor(String)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog
Log data from a motor during a SysId routine.
MotorController
- Interface in
edu.wpi.first.wpilibj.motorcontrol
Interface for motor controlling devices.
MotorControllerGroup
- Class in
edu.wpi.first.wpilibj.motorcontrol
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PWMMotorController.addFollower(PWMMotorController)
or if using CAN motor
     controllers, use their method of following.
MotorControllerGroup(MotorController[])
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
Create a new MotorControllerGroup with the provided MotorControllers.
MotorControllerGroup(MotorController, MotorController...)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
Create a new MotorControllerGroup with the provided MotorControllers.
MotorSafety
- Class in
edu.wpi.first.wpilibj
The Motor Safety feature acts as a watchdog timer for an individual motor.
MotorSafety()
- Constructor for class edu.wpi.first.wpilibj.
MotorSafety
MotorSafety constructor.
movingAverage(int)
- Static method in class edu.wpi.first.math.filter.
LinearFilter
Creates a K-tap FIR moving average filter of the form: y[n] = 1/k (x[k] + x[k-1] + ...
MsvcRuntimeException
- Exception in
edu.wpi.first.util
Exception thrown due to a bad MSVC Runtime.
MsvcRuntimeException(int, int, int, int, String)
- Constructor for exception edu.wpi.first.util.
MsvcRuntimeException
Constructs a runtime exception.
MsvcRuntimeException(String)
- Constructor for exception edu.wpi.first.util.
MsvcRuntimeException
Constructs a runtime exception.
mult(double)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = k * f(x).
mult(D)
- Method in class edu.wpi.first.units.
PerUnit
Multiplies this unit by a unit of its denominator.
mult(AngularVelocityUnit)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
Multiplies this angular momentum by an angular velocity to yield a unit of moment of inertia.
mult(CurrentUnit, String, String)
- Method in class edu.wpi.first.units.
VoltageUnit
Constructs a unit of power equivalent to this unit of voltage multiplied by another unit of
 electrical current.
mult(DistanceUnit)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
Multiplies this unit by distance to form a unit of angular momentum.
mult(LinearAccelerationUnit)
- Method in class edu.wpi.first.units.
MassUnit
Multiplies this mass unit by a unit of linear acceleration to form a combined unit of force.
mult(LinearVelocityUnit)
- Method in class edu.wpi.first.units.
MassUnit
Multiplies this mass unit by a unit of linear velocity to form a combined unit of linear
 momentum.
mult(UnaryFunction)
- Method in interface edu.wpi.first.units.
UnaryFunction
Creates a composite function h(x) such that h(x) = f(x) * g(x).
mult(VoltageUnit, String, String)
- Method in class edu.wpi.first.units.
CurrentUnit
Constructs a unit of power equivalent to this unit of electrical current multiplied by another
 unit of voltage.
Mult
<
A
extends
Unit
,
B
extends
Unit
> - Interface in
edu.wpi.first.units.measure
multAsTorque(DistanceUnit)
- Method in class edu.wpi.first.units.
ForceUnit
Multiplies this force unit by a unit of distance to create a unit of torque.
multAsTorque(ForceUnit)
- Method in class edu.wpi.first.units.
DistanceUnit
Multiplies this distance unit by a unit of force to create a unit of torque.
multi(EpilogueBackend...)
- Static method in interface edu.wpi.first.epilogue.logging.
EpilogueBackend
Creates a backend that logs to multiple backends at once.
MultiBackend
- Class in
edu.wpi.first.epilogue.logging
A backend implementation that delegates to other backends.
MulticastServiceAnnouncer
- Class in
edu.wpi.first.net
Class to announce over mDNS that a service is available.
MulticastServiceAnnouncer(String, String, int)
- Constructor for class edu.wpi.first.net.
MulticastServiceAnnouncer
Creates a MulticastServiceAnnouncer.
MulticastServiceAnnouncer(String, String, int, Map<String, String>)
- Constructor for class edu.wpi.first.net.
MulticastServiceAnnouncer
Creates a MulticastServiceAnnouncer.
MulticastServiceResolver
- Class in
edu.wpi.first.net
Class to resolve a service over mDNS.
MulticastServiceResolver(String)
- Constructor for class edu.wpi.first.net.
MulticastServiceResolver
Creates a MulticastServiceResolver.
MultiSubscriber
- Class in
edu.wpi.first.networktables
Subscribe to multiple topics based on one or more topic name prefixes.
MultiSubscriber(NetworkTableInstance, String[], PubSubOption...)
- Constructor for class edu.wpi.first.networktables.
MultiSubscriber
Create a multiple subscriber.
MultUnit
<
A
extends
Unit
,
B
extends
Unit
> - Class in
edu.wpi.first.units
A combinatory unit type that is equivalent to the product of two other others.
MultUnit(MultUnit<A, B>, A, B)
- Constructor for class edu.wpi.first.units.
MultUnit
Creates a new product unit.
mut_acc(double)
- Method in interface edu.wpi.first.units.
MutableMeasure
Increments the current magnitude of the measure by the given value.
mut_acc(Base)
- Method in interface edu.wpi.first.units.
MutableMeasure
Increments the current magnitude of the measure by the amount of the given measure.
mut_divide(double)
- Method in interface edu.wpi.first.units.
MutableMeasure
Divides this measurement by some constant value.
mut_divide(Dimensionless)
- Method in interface edu.wpi.first.units.
MutableMeasure
Divides this measurement by some constant value.
mut_minus(double, U)
- Method in interface edu.wpi.first.units.
MutableMeasure
Subtracts another measurement from this one.
mut_minus(Base)
- Method in interface edu.wpi.first.units.
MutableMeasure
Subtracts another measurement to this one.
mut_plus(double, U)
- Method in interface edu.wpi.first.units.
MutableMeasure
Adds another measurement to this one.
mut_plus(Base)
- Method in interface edu.wpi.first.units.
MutableMeasure
Adds another measurement to this one.
mut_replace(double, U)
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
mut_replace(double, U)
- Method in interface edu.wpi.first.units.
MutableMeasure
Overwrites the state of this measure with new values.
mut_replace(Base)
- Method in interface edu.wpi.first.units.
MutableMeasure
Overwrites the state of this measure and replaces it completely with values from the given one.
mut_setBaseUnitMagnitude(double)
- Method in interface edu.wpi.first.units.
MutableMeasure
Sets the new magnitude of the measurement.
mut_setMagnitude(double)
- Method in interface edu.wpi.first.units.
MutableMeasure
Sets the new magnitude of the measurement.
mut_times(double)
- Method in interface edu.wpi.first.units.
MutableMeasure
Multiplies this measurement by some constant value.
mut_times(Dimensionless)
- Method in interface edu.wpi.first.units.
MutableMeasure
Multiplies this measurement by some constant value.
mutable(double)
- Method in class edu.wpi.first.units.
AccelerationUnit
mutable(double)
- Method in class edu.wpi.first.units.
AngleUnit
mutable(double)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
mutable(double)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
mutable(double)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
mutable(double)
- Method in class edu.wpi.first.units.
CurrentUnit
mutable(double)
- Method in class edu.wpi.first.units.
DimensionlessUnit
mutable(double)
- Method in class edu.wpi.first.units.
DistanceUnit
mutable(double)
- Method in class edu.wpi.first.units.
EnergyUnit
mutable(double)
- Method in class edu.wpi.first.units.
ForceUnit
mutable(double)
- Method in class edu.wpi.first.units.
FrequencyUnit
mutable(double)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
mutable(double)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
mutable(double)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
mutable(double)
- Method in class edu.wpi.first.units.
MassUnit
mutable(double)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
mutable(double)
- Method in class edu.wpi.first.units.
MultUnit
mutable(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit.
mutable(double)
- Method in class edu.wpi.first.units.
PowerUnit
mutable(double)
- Method in class edu.wpi.first.units.
ResistanceUnit
mutable(double)
- Method in class edu.wpi.first.units.
TemperatureUnit
mutable(double)
- Method in class edu.wpi.first.units.
TimeUnit
mutable(double)
- Method in class edu.wpi.first.units.
TorqueUnit
mutable(double)
- Method in class edu.wpi.first.units.
Unit
Creates a new mutable measurement that is initialized to the given magnitude in terms of this
 unit.
mutable(double)
- Method in class edu.wpi.first.units.
VelocityUnit
mutable(double)
- Method in class edu.wpi.first.units.
VoltageUnit
mutableCopy()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Acceleration
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Angle
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Current
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Distance
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Energy
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Force
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Frequency
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Mass
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Mult
mutableCopy()
- Method in interface edu.wpi.first.units.
Measure
Returns a mutable copy of this measure.
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Per
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Power
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Resistance
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Temperature
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Time
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Torque
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Velocity
mutableCopy()
- Method in interface edu.wpi.first.units.measure.
Voltage
mutableCopy()
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
MutableMeasure
<
U
extends
Unit
,
Base
extends
Measure
<
U
>,
MutSelf
extends
MutableMeasure
<
U
,
Base
,
MutSelf
>> - Interface in
edu.wpi.first.units
A mutable measurement can be used to keep a single object allocation and reference whose state is
 mutated or changed as it is used.
MutableMeasureBase
<
U
extends
Unit
,
Base
extends
Measure
<
U
>,
MutSelf
extends
MutableMeasure
<
U
,
Base
,
MutSelf
>> - Class in
edu.wpi.first.units.mutable
A partial implementation of
MutableMeasure
to handle most of the state and Java object-
 related implementations.
MutableMeasureBase(double, double, U)
- Constructor for class edu.wpi.first.units.mutable.
MutableMeasureBase
Initializes the mutable measure with initial conditions.
mutableNative(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new mutable measurement of the given magnitude in terms of the ratio unit.
MutAcceleration
<
D
extends
Unit
> - Class in
edu.wpi.first.units.measure
MutAcceleration(double, double, AccelerationUnit<D>)
- Constructor for class edu.wpi.first.units.measure.
MutAcceleration
MutAngle
- Class in
edu.wpi.first.units.measure
MutAngle(double, double, AngleUnit)
- Constructor for class edu.wpi.first.units.measure.
MutAngle
MutAngularAcceleration
- Class in
edu.wpi.first.units.measure
MutAngularAcceleration(double, double, AngularAccelerationUnit)
- Constructor for class edu.wpi.first.units.measure.
MutAngularAcceleration
MutAngularMomentum
- Class in
edu.wpi.first.units.measure
MutAngularMomentum(double, double, AngularMomentumUnit)
- Constructor for class edu.wpi.first.units.measure.
MutAngularMomentum
MutAngularVelocity
- Class in
edu.wpi.first.units.measure
MutAngularVelocity(double, double, AngularVelocityUnit)
- Constructor for class edu.wpi.first.units.measure.
MutAngularVelocity
MutCurrent
- Class in
edu.wpi.first.units.measure
MutCurrent(double, double, CurrentUnit)
- Constructor for class edu.wpi.first.units.measure.
MutCurrent
MutDimensionless
- Class in
edu.wpi.first.units.measure
MutDimensionless(double, double, DimensionlessUnit)
- Constructor for class edu.wpi.first.units.measure.
MutDimensionless
MutDistance
- Class in
edu.wpi.first.units.measure
MutDistance(double, double, DistanceUnit)
- Constructor for class edu.wpi.first.units.measure.
MutDistance
MutEnergy
- Class in
edu.wpi.first.units.measure
MutEnergy(double, double, EnergyUnit)
- Constructor for class edu.wpi.first.units.measure.
MutEnergy
MutForce
- Class in
edu.wpi.first.units.measure
MutForce(double, double, ForceUnit)
- Constructor for class edu.wpi.first.units.measure.
MutForce
MutFrequency
- Class in
edu.wpi.first.units.measure
MutFrequency(double, double, FrequencyUnit)
- Constructor for class edu.wpi.first.units.measure.
MutFrequency
MutLinearAcceleration
- Class in
edu.wpi.first.units.measure
MutLinearAcceleration(double, double, LinearAccelerationUnit)
- Constructor for class edu.wpi.first.units.measure.
MutLinearAcceleration
MutLinearMomentum
- Class in
edu.wpi.first.units.measure
MutLinearMomentum(double, double, LinearMomentumUnit)
- Constructor for class edu.wpi.first.units.measure.
MutLinearMomentum
MutLinearVelocity
- Class in
edu.wpi.first.units.measure
MutLinearVelocity(double, double, LinearVelocityUnit)
- Constructor for class edu.wpi.first.units.measure.
MutLinearVelocity
MutMass
- Class in
edu.wpi.first.units.measure
MutMass(double, double, MassUnit)
- Constructor for class edu.wpi.first.units.measure.
MutMass
MutMomentOfInertia
- Class in
edu.wpi.first.units.measure
MutMomentOfInertia(double, double, MomentOfInertiaUnit)
- Constructor for class edu.wpi.first.units.measure.
MutMomentOfInertia
MutMult
<
A
extends
Unit
,
B
extends
Unit
> - Class in
edu.wpi.first.units.measure
MutMult(double, double, MultUnit<A, B>)
- Constructor for class edu.wpi.first.units.measure.
MutMult
MutPer
<
Dividend
extends
Unit
,
Divisor
extends
Unit
> - Class in
edu.wpi.first.units.measure
MutPer(double, double, PerUnit<Dividend, Divisor>)
- Constructor for class edu.wpi.first.units.measure.
MutPer
MutPower
- Class in
edu.wpi.first.units.measure
MutPower(double, double, PowerUnit)
- Constructor for class edu.wpi.first.units.measure.
MutPower
MutResistance
- Class in
edu.wpi.first.units.measure
MutResistance(double, double, ResistanceUnit)
- Constructor for class edu.wpi.first.units.measure.
MutResistance
MutTemperature
- Class in
edu.wpi.first.units.measure
MutTemperature(double, double, TemperatureUnit)
- Constructor for class edu.wpi.first.units.measure.
MutTemperature
MutTime
- Class in
edu.wpi.first.units.measure
MutTime(double, double, TimeUnit)
- Constructor for class edu.wpi.first.units.measure.
MutTime
MutTorque
- Class in
edu.wpi.first.units.measure
MutTorque(double, double, TorqueUnit)
- Constructor for class edu.wpi.first.units.measure.
MutTorque
MutVelocity
<
D
extends
Unit
> - Class in
edu.wpi.first.units.measure
MutVelocity(double, double, VelocityUnit<D>)
- Constructor for class edu.wpi.first.units.measure.
MutVelocity
MutVoltage
- Class in
edu.wpi.first.units.measure
MutVoltage(double, double, VoltageUnit)
- Constructor for class edu.wpi.first.units.measure.
MutVoltage
MXP_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
MXP (roboRIO MXP) SPI bus port.
N
N()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to +X in the NWU coordinate system.
N0
- Class in
edu.wpi.first.math.numbers
A class representing the number 0.
N0()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 0.
N1
- Class in
edu.wpi.first.math.numbers
A class representing the number 1.
N1()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 1.
N10
- Class in
edu.wpi.first.math.numbers
A class representing the number 10.
N10()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 10.
N11
- Class in
edu.wpi.first.math.numbers
A class representing the number 11.
N11()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 11.
N12
- Class in
edu.wpi.first.math.numbers
A class representing the number 12.
N12()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 12.
N13
- Class in
edu.wpi.first.math.numbers
A class representing the number 13.
N13()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 13.
N14
- Class in
edu.wpi.first.math.numbers
A class representing the number 14.
N14()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 14.
N15
- Class in
edu.wpi.first.math.numbers
A class representing the number 15.
N15()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 15.
N16
- Class in
edu.wpi.first.math.numbers
A class representing the number 16.
N16()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 16.
N17
- Class in
edu.wpi.first.math.numbers
A class representing the number 17.
N17()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 17.
N18
- Class in
edu.wpi.first.math.numbers
A class representing the number 18.
N18()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 18.
N19
- Class in
edu.wpi.first.math.numbers
A class representing the number 19.
N19()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 19.
N2
- Class in
edu.wpi.first.math.numbers
A class representing the number 2.
N2()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 2.
N20
- Class in
edu.wpi.first.math.numbers
A class representing the number 20.
N20()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 20.
N3
- Class in
edu.wpi.first.math.numbers
A class representing the number 3.
N3()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 3.
N4
- Class in
edu.wpi.first.math.numbers
A class representing the number 4.
N4()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 4.
N5
- Class in
edu.wpi.first.math.numbers
A class representing the number 5.
N5()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 5.
N6
- Class in
edu.wpi.first.math.numbers
A class representing the number 6.
N6()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 6.
N7
- Class in
edu.wpi.first.math.numbers
A class representing the number 7.
N7()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 7.
N8
- Class in
edu.wpi.first.math.numbers
A class representing the number 8.
N8()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 8.
N9
- Class in
edu.wpi.first.math.numbers
A class representing the number 9.
N9()
- Static method in interface edu.wpi.first.math.
Nat
Returns the Nat instance for 9.
name
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
Vendor/model name of the camera as provided by the USB driver.
name
- Variable in class edu.wpi.first.cscore.
VideoEvent
Source/sink/property name.
name
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimDeviceInfo
name
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimValueInfo
name
- Variable in class edu.wpi.first.networktables.
TopicInfo
Topic name.
name
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.StartRecordData
Entry name.
name
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Name.
name
- Variable in class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Name.
name
- Variable in enum class edu.wpi.first.util.struct.
StructFieldType
The name of the data type.
name()
- Element in annotation interface edu.wpi.first.epilogue.
Logged
The name for the annotated element to be logged as.
name()
- Method in class edu.wpi.first.units.
Unit
Gets the name of this unit.
named(String)
- Method in class edu.wpi.first.units.
UnitBuilder
Sets the name of the new unit.
Nat
<
T
extends
Num
> - Interface in
edu.wpi.first.math
A natural number expressed as a java class.
nativeGetControlWord()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Gets the current control word of the driver station.
nearest(double, double, double, double, double, double, double, double[])
- Static method in class edu.wpi.first.math.jni.
Ellipse2dJNI
Returns the nearest point that is contained within the ellipse.
nearest(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Returns the nearest point that is contained within the ellipse.
nearest(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Returns the nearest point that is contained within the rectangle.
nearest(List<Pose2d>)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the nearest Pose2d from a list of poses.
nearest(List<Translation2d>)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the nearest Translation2d from a list of translations.
NED()
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Returns an instance of the North-East-Down (NED) coordinate system.
negate()
- Method in interface edu.wpi.first.units.measure.
Acceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Angle
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Current
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Distance
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Energy
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Force
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Frequency
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Mass
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Mult
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.
Measure
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib
     classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Per
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Power
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Resistance
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Temperature
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Time
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Torque
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Velocity
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in interface edu.wpi.first.units.measure.
Voltage
Deprecated, for removal: This API element is subject to removal in a future version.
use unaryMinus() instead. This was renamed for consistency with other WPILib classes like Rotation2d
negate()
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new event that is active when this event is inactive.
negate()
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Creates a new trigger that is active when this trigger is inactive, i.e.
NestedBackend
- Class in
edu.wpi.first.epilogue.logging
A backend that logs to an underlying backend, prepending all logged data with a specific prefix.
NestedBackend(String, EpilogueBackend)
- Constructor for class edu.wpi.first.epilogue.logging.
NestedBackend
Creates a new nested backed underneath another backend.
NetworkBooleanEvent
- Class in
edu.wpi.first.wpilibj.event
This class provides an easy way to link NetworkTables boolean topics to callback actions.
NetworkBooleanEvent(EventLoop, BooleanSubscriber)
- Constructor for class edu.wpi.first.wpilibj.event.
NetworkBooleanEvent
Creates a new event with the given boolean subscriber determining whether it is active.
NetworkBooleanEvent(EventLoop, BooleanTopic)
- Constructor for class edu.wpi.first.wpilibj.event.
NetworkBooleanEvent
Creates a new event with the given boolean topic determining whether it is active.
NetworkBooleanEvent(EventLoop, NetworkTableInstance, String, String)
- Constructor for class edu.wpi.first.wpilibj.event.
NetworkBooleanEvent
Creates a new event with the given boolean topic determining whether it is active.
NetworkBooleanEvent(EventLoop, NetworkTable, String)
- Constructor for class edu.wpi.first.wpilibj.event.
NetworkBooleanEvent
Creates a new event with the given boolean topic determining whether it is active.
NetworkBooleanEvent(EventLoop, String, String)
- Constructor for class edu.wpi.first.wpilibj.event.
NetworkBooleanEvent
Creates a new event with the given boolean topic determining whether it is active.
NetworkButton
- Class in
edu.wpi.first.wpilibj2.command.button
A
Trigger
that uses a
NetworkTable
boolean field.
NetworkButton(BooleanSubscriber)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
NetworkButton
Creates a NetworkButton that commands can be bound to.
NetworkButton(BooleanTopic)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
NetworkButton
Creates a NetworkButton that commands can be bound to.
NetworkButton(NetworkTableInstance, String, String)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
NetworkButton
Creates a NetworkButton that commands can be bound to.
NetworkButton(NetworkTable, String)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
NetworkButton
Creates a NetworkButton that commands can be bound to.
NetworkButton(String, String)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
NetworkButton
Creates a NetworkButton that commands can be bound to.
NetworkTable
- Class in
edu.wpi.first.networktables
A network table that knows its subtable path.
NetworkTable.SubTableListener
- Interface in
edu.wpi.first.networktables
A listener that listens to new tables in a
NetworkTable
.
NetworkTable.TableEventListener
- Interface in
edu.wpi.first.networktables
A listener that listens to events on topics in a
NetworkTable
.
NetworkTableEntry
- Class in
edu.wpi.first.networktables
NetworkTables Entry.
NetworkTableEntry(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
NetworkTableEntry
Construct from native handle.
NetworkTableEntry(Topic, int)
- Constructor for class edu.wpi.first.networktables.
NetworkTableEntry
Construct from native handle.
NetworkTableEvent
- Class in
edu.wpi.first.networktables
NetworkTables event.
NetworkTableEvent(NetworkTableInstance, int, int, ConnectionInfo, TopicInfo, ValueEventData, LogMessage, TimeSyncEventData)
- Constructor for class edu.wpi.first.networktables.
NetworkTableEvent
Constructor.
NetworkTableEvent.Kind
- Enum Class in
edu.wpi.first.networktables
NetworkTable event kind.
NetworkTableInstance
- Class in
edu.wpi.first.networktables
NetworkTables Instance.
NetworkTableInstance.NetworkMode
- Enum Class in
edu.wpi.first.networktables
Client/server mode flag values (as returned by
NetworkTableInstance.getNetworkMode()
).
NetworkTableListener
- Class in
edu.wpi.first.networktables
Event listener.
NetworkTableListenerPoller
- Class in
edu.wpi.first.networktables
Event listener poller.
NetworkTableListenerPoller(NetworkTableInstance)
- Constructor for class edu.wpi.first.networktables.
NetworkTableListenerPoller
Construct a topic listener poller.
NetworkTablesJNI
- Class in
edu.wpi.first.networktables
NetworkTables JNI.
NetworkTablesJNI.Helper
- Class in
edu.wpi.first.networktables
Sets whether JNI should be loaded in the static block.
NetworkTableType
- Enum Class in
edu.wpi.first.networktables
Network table data types.
NetworkTableValue
- Class in
edu.wpi.first.networktables
A network table entry value.
newInstance()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
newInstance()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
newInstance()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
newInstance()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
newInstance()
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
newInstance()
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
newInstance()
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
newInstance()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
newInstance()
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
newInstance()
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
newInstance()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
newInstance()
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
newInstance()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
newInstance()
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
Newton
- Static variable in class edu.wpi.first.units.
Units
The standard unit of force, equivalent to the standard force of gravity applied to a one
Units.Kilogram
mass.
NewtonMeter
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit for torque.
NewtonMeters
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit for torque.
Newtons
- Static variable in class edu.wpi.first.units.
Units
The standard unit of force, equivalent to accelerating a mass of one
Units.Kilogram
at a
 rate of one
meter per second per second
.
next()
- Method in class edu.wpi.first.util.datalog.
DataLogIterator
NidecBrushless
- Class in
edu.wpi.first.wpilibj.motorcontrol
Nidec Brushless Motor.
NidecBrushless(int, int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Constructor.
NIRioStatus
- Class in
edu.wpi.first.hal.communication
NI RIO status.
NIRioStatus()
- Constructor for class edu.wpi.first.hal.communication.
NIRioStatus
Default constructor.
NO_AVAILABLE_RESOURCES
- Static variable in class edu.wpi.first.hal.
HALUtil
No available resources to allocate.
nominalVoltageVolts
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Voltage at which the motor constants were measured.
none()
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that does nothing, finishing immediately.
None
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
None.
norm()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Calculates the L2 norm of the quaternion.
norm()
- Method in class edu.wpi.first.math.
Vector
Returns the norm of this vector.
normalize()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Normalizes the quaternion.
normalize(double[])
- Static method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Normalize all wheel speeds if the magnitude of any wheel is greater than 1.0.
normalizeKey(String)
- Static method in class edu.wpi.first.networktables.
NetworkTable
Normalizes a network table key to start with exactly one leading slash ("/") and contain no
 consecutive slashes.
normalizeKey(String, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTable
Normalizes an network table key to contain no consecutive slashes and optionally start with a
 leading slash.
normF()
- Method in class edu.wpi.first.math.
Matrix
Computes the Frobenius normal of the matrix.
normIndP1()
- Method in class edu.wpi.first.math.
Matrix
Computes the induced p = 1 matrix norm.
Notifier
- Class in
edu.wpi.first.wpilibj
Notifiers run a user-provided callback function on a separate thread.
Notifier(Runnable)
- Constructor for class edu.wpi.first.wpilibj.
Notifier
Create a Notifier with the given callback.
NotifierCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that starts a notifier to run the given runnable periodically in a separate thread.
NotifierCommand(Runnable, double, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
NotifierCommand
Creates a new NotifierCommand.
NotifierDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for notifier data.
NotifierJNI
- Class in
edu.wpi.first.hal
The NotifierJNI class directly wraps the C++ HAL Notifier.
NotifierSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control simulated notifiers.
NotifyCallback
- Interface in
edu.wpi.first.hal.simulation
notifyError(String)
- Method in class edu.wpi.first.cscore.
ImageSource
Signal sinks that an error has occurred.
notifyNewData()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
notifyNewData()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Updates DriverStation data so that new values are visible to the user program.
notifyNewData()
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Updates joystick data so that new values are visible to the user program.
notifySourceError(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Notify source error.
NotLogged
- Annotation Interface in
edu.wpi.first.epilogue
A field or method annotated as
@NotLogged
will be ignored by Epilogue when determining
 the data to log.
now()
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns the current timestamp in microseconds.
now()
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Returns the time.
NTEpilogueBackend
- Class in
edu.wpi.first.epilogue.logging
A backend implementation that sends data over network tables.
NTEpilogueBackend(NetworkTableInstance)
- Constructor for class edu.wpi.first.epilogue.logging.
NTEpilogueBackend
Creates a logging backend that sends information to NetworkTables.
NTSendable
- Interface in
edu.wpi.first.networktables
Interface for NetworkTable Sendable objects.
NTSendableBuilder
- Interface in
edu.wpi.first.networktables
Helper class for building Sendable dashboard representations for NetworkTables.
NULL_PARAMETER
- Static variable in class edu.wpi.first.hal.
HALUtil
A pointer parameter to a method is NULL.
NullBackend
- Class in
edu.wpi.first.epilogue.logging
Null backend implementation that logs nothing.
NullBackend()
- Constructor for class edu.wpi.first.epilogue.logging.
NullBackend
Default constructor.
Num
- Class in
edu.wpi.first.math
A number expressed as a java class.
Num()
- Constructor for class edu.wpi.first.math.
Num
Default constructor.
numerator()
- Method in class edu.wpi.first.units.
PerUnit
Gets the numerator unit.
NumericalIntegration
- Class in
edu.wpi.first.math.system
Numerical integration utilities.
numericalJacobian(Nat<Rows>, Nat<Cols>, Function<Matrix<Cols, N1>, Matrix<States, N1>>, Matrix<Cols, N1>)
- Static method in class edu.wpi.first.math.system.
NumericalJacobian
Computes the numerical Jacobian with respect to x for f(x).
NumericalJacobian
- Class in
edu.wpi.first.math.system
Numerical Jacobian utilities.
numericalJacobianU(Nat<Rows>, Nat<Inputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, Matrix<States, N1>, Matrix<Inputs, N1>)
- Static method in class edu.wpi.first.math.system.
NumericalJacobian
Returns the numerical Jacobian with respect to u for f(x, u).
numericalJacobianX(Nat<Rows>, Nat<States>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Outputs, N1>>, Matrix<States, N1>, Matrix<Inputs, N1>)
- Static method in class edu.wpi.first.math.system.
NumericalJacobian
Returns numerical Jacobian with respect to x for f(x, u, ...).
numThreads
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
How many threads should be used for computation.
NWU()
- Static method in class edu.wpi.first.math.geometry.
CoordinateSystem
Returns an instance of the North-West-Up (NWU) coordinate system.
O
objectToRobotPose(Pose3d, Transform3d, Transform3d)
- Static method in class edu.wpi.first.math.
ComputerVisionUtil
Returns the robot's pose in the field coordinate system given an object's field-relative pose,
 the transformation from the camera's pose to the object's pose (obtained via computer vision),
 and the transformation from the robot's pose to the camera's pose.
observeUserProgramAutonomous()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sets the autonomous enabled flag in the DS.
observeUserProgramDisabled()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sets the disabled flag in the DS.
observeUserProgramStarting()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sets the program starting flag in the DS.
observeUserProgramTeleop()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sets the teleoperated enabled flag in the DS.
observeUserProgramTest()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sets the test mode flag in the DS.
Odometry
<
T
> - Class in
edu.wpi.first.math.kinematics
Class for odometry.
Odometry(Kinematics<?, T>, Rotation2d, T, Pose2d)
- Constructor for class edu.wpi.first.math.kinematics.
Odometry
Constructs an Odometry object.
Odometry3d
<
T
> - Class in
edu.wpi.first.math.kinematics
Class for odometry.
Odometry3d(Kinematics<?, T>, Rotation3d, T, Pose3d)
- Constructor for class edu.wpi.first.math.kinematics.
Odometry3d
Constructs an Odometry3d object.
of(double)
- Method in class edu.wpi.first.units.
AccelerationUnit
of(double)
- Method in class edu.wpi.first.units.
AngleUnit
of(double)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
of(double)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
of(double)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
of(double)
- Method in class edu.wpi.first.units.
CurrentUnit
of(double)
- Method in class edu.wpi.first.units.
DimensionlessUnit
of(double)
- Method in class edu.wpi.first.units.
DistanceUnit
of(double)
- Method in class edu.wpi.first.units.
EnergyUnit
of(double)
- Method in class edu.wpi.first.units.
ForceUnit
of(double)
- Method in class edu.wpi.first.units.
FrequencyUnit
of(double)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
of(double)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
of(double)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
of(double)
- Method in class edu.wpi.first.units.
MassUnit
of(double)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
of(double)
- Method in class edu.wpi.first.units.
MultUnit
Creates a new immutable measurement of the given magnitude in terms of this unit.
of(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new immutable measurement of the given magnitude in terms of this unit.
of(double)
- Method in class edu.wpi.first.units.
PowerUnit
of(double)
- Method in class edu.wpi.first.units.
ResistanceUnit
of(double)
- Method in class edu.wpi.first.units.
TemperatureUnit
of(double)
- Method in class edu.wpi.first.units.
TimeUnit
of(double)
- Method in class edu.wpi.first.units.
TorqueUnit
of(double)
- Method in class edu.wpi.first.units.
Unit
Creates a new immutable measurement of the given magnitude in terms of this unit.
of(double)
- Method in class edu.wpi.first.units.
VelocityUnit
of(double)
- Method in class edu.wpi.first.units.
VoltageUnit
of(int)
- Static method in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
Creates an HIDType with the given value.
of(A, B)
- Static method in class edu.wpi.first.math.
Pair
Returns a pair comprised of the two given objects.
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
AccelerationUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
AngleUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
CurrentUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
DimensionlessUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
DistanceUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
EnergyUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
ForceUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
FrequencyUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
MassUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
MultUnit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
PowerUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
ResistanceUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
TemperatureUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
TimeUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
TorqueUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
Unit
Creates a new immutable measurement of the given magnitude in terms of this unit's base unit.
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
VelocityUnit
ofBaseUnits(double)
- Method in class edu.wpi.first.units.
VoltageUnit
ofBaseUnits(double, AccelerationUnit<D>)
- Static method in interface edu.wpi.first.units.measure.
Acceleration
ofBaseUnits(double, AngleUnit)
- Static method in interface edu.wpi.first.units.measure.
Angle
ofBaseUnits(double, AngularAccelerationUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularAcceleration
ofBaseUnits(double, AngularMomentumUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularMomentum
ofBaseUnits(double, AngularVelocityUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularVelocity
ofBaseUnits(double, CurrentUnit)
- Static method in interface edu.wpi.first.units.measure.
Current
ofBaseUnits(double, DimensionlessUnit)
- Static method in interface edu.wpi.first.units.measure.
Dimensionless
ofBaseUnits(double, DistanceUnit)
- Static method in interface edu.wpi.first.units.measure.
Distance
ofBaseUnits(double, EnergyUnit)
- Static method in interface edu.wpi.first.units.measure.
Energy
ofBaseUnits(double, ForceUnit)
- Static method in interface edu.wpi.first.units.measure.
Force
ofBaseUnits(double, FrequencyUnit)
- Static method in interface edu.wpi.first.units.measure.
Frequency
ofBaseUnits(double, LinearAccelerationUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearAcceleration
ofBaseUnits(double, LinearMomentumUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearMomentum
ofBaseUnits(double, LinearVelocityUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearVelocity
ofBaseUnits(double, MassUnit)
- Static method in interface edu.wpi.first.units.measure.
Mass
ofBaseUnits(double, MomentOfInertiaUnit)
- Static method in interface edu.wpi.first.units.measure.
MomentOfInertia
ofBaseUnits(double, MultUnit<A, B>)
- Static method in interface edu.wpi.first.units.measure.
Mult
ofBaseUnits(double, PerUnit<Dividend, Divisor>)
- Static method in interface edu.wpi.first.units.measure.
Per
ofBaseUnits(double, PowerUnit)
- Static method in interface edu.wpi.first.units.measure.
Power
ofBaseUnits(double, ResistanceUnit)
- Static method in interface edu.wpi.first.units.measure.
Resistance
ofBaseUnits(double, TemperatureUnit)
- Static method in interface edu.wpi.first.units.measure.
Temperature
ofBaseUnits(double, TimeUnit)
- Static method in interface edu.wpi.first.units.measure.
Time
ofBaseUnits(double, TorqueUnit)
- Static method in interface edu.wpi.first.units.measure.
Torque
ofBaseUnits(double, VelocityUnit<D>)
- Static method in interface edu.wpi.first.units.measure.
Velocity
ofBaseUnits(double, VoltageUnit)
- Static method in interface edu.wpi.first.units.measure.
Voltage
ofBaseUnits(double, U)
- Static method in record class edu.wpi.first.units.
ImmutableMeasure
Creates a new measure in the given unit with a magnitude equal to the given one in base units.
ofEntries(Map.Entry<Double, Double>...)
- Static method in class edu.wpi.first.math.interpolation.
InterpolatingDoubleTreeMap
Creates an
InterpolatingDoubleTreeMap
from the given entries.
offset(double)
- Method in class edu.wpi.first.units.
UnitBuilder
Sets the unit conversions based on a simple offset.
offsetBy(int)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that plays this one, but offset by a certain number of LEDs.
ofNative(double)
- Method in class edu.wpi.first.units.
MultUnit
Creates a new immutable measurement of the given magnitude in terms of this unit.
ofNative(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new immutable measurement of the given magnitude in terms of the ratio unit.
ofNativeBaseUnits(double)
- Method in class edu.wpi.first.units.
MultUnit
Creates a new immutable measurement of the given magnitude in terms of the unit's base unit.
ofNativeBaseUnits(double)
- Method in class edu.wpi.first.units.
PerUnit
Creates a new immutable measurement of the given magnitude in terms of the ratio unit's base
 unit.
ofRelativeUnits(double, AccelerationUnit<D>)
- Static method in interface edu.wpi.first.units.measure.
Acceleration
ofRelativeUnits(double, AngleUnit)
- Static method in interface edu.wpi.first.units.measure.
Angle
ofRelativeUnits(double, AngularAccelerationUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularAcceleration
ofRelativeUnits(double, AngularMomentumUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularMomentum
ofRelativeUnits(double, AngularVelocityUnit)
- Static method in interface edu.wpi.first.units.measure.
AngularVelocity
ofRelativeUnits(double, CurrentUnit)
- Static method in interface edu.wpi.first.units.measure.
Current
ofRelativeUnits(double, DimensionlessUnit)
- Static method in interface edu.wpi.first.units.measure.
Dimensionless
ofRelativeUnits(double, DistanceUnit)
- Static method in interface edu.wpi.first.units.measure.
Distance
ofRelativeUnits(double, EnergyUnit)
- Static method in interface edu.wpi.first.units.measure.
Energy
ofRelativeUnits(double, ForceUnit)
- Static method in interface edu.wpi.first.units.measure.
Force
ofRelativeUnits(double, FrequencyUnit)
- Static method in interface edu.wpi.first.units.measure.
Frequency
ofRelativeUnits(double, LinearAccelerationUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearAcceleration
ofRelativeUnits(double, LinearMomentumUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearMomentum
ofRelativeUnits(double, LinearVelocityUnit)
- Static method in interface edu.wpi.first.units.measure.
LinearVelocity
ofRelativeUnits(double, MassUnit)
- Static method in interface edu.wpi.first.units.measure.
Mass
ofRelativeUnits(double, MomentOfInertiaUnit)
- Static method in interface edu.wpi.first.units.measure.
MomentOfInertia
ofRelativeUnits(double, MultUnit<A, B>)
- Static method in interface edu.wpi.first.units.measure.
Mult
ofRelativeUnits(double, PerUnit<Dividend, Divisor>)
- Static method in interface edu.wpi.first.units.measure.
Per
ofRelativeUnits(double, PowerUnit)
- Static method in interface edu.wpi.first.units.measure.
Power
ofRelativeUnits(double, ResistanceUnit)
- Static method in interface edu.wpi.first.units.measure.
Resistance
ofRelativeUnits(double, TemperatureUnit)
- Static method in interface edu.wpi.first.units.measure.
Temperature
ofRelativeUnits(double, TimeUnit)
- Static method in interface edu.wpi.first.units.measure.
Time
ofRelativeUnits(double, TorqueUnit)
- Static method in interface edu.wpi.first.units.measure.
Torque
ofRelativeUnits(double, VelocityUnit<D>)
- Static method in interface edu.wpi.first.units.measure.
Velocity
ofRelativeUnits(double, VoltageUnit)
- Static method in interface edu.wpi.first.units.measure.
Voltage
ofRelativeUnits(double, U)
- Static method in record class edu.wpi.first.units.
ImmutableMeasure
Creates a new measure in the given unit with a magnitude in terms of that unit.
Ohm
- Static variable in class edu.wpi.first.units.
Units
The base unit of resistance.
Ohms
- Static variable in class edu.wpi.first.units.
Units
The base unit of resistance.
omegaRadiansPerSecond
- Variable in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Represents the angular velocity of the robot frame.
ONBOARD_CS0_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
Onboard SPI bus port CS0.
ONBOARD_CS1_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
Onboard SPI bus port CS1.
ONBOARD_CS2_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
Onboard SPI bus port CS2.
ONBOARD_CS3_PORT
- Static variable in class edu.wpi.first.hal.
SPIJNI
Onboard SPI bus port CS3.
OnBoardIO
- Class in
edu.wpi.first.wpilibj.romi
This class represents the onboard IO of the Romi reference robot.
OnBoardIO(OnBoardIO.ChannelMode, OnBoardIO.ChannelMode)
- Constructor for class edu.wpi.first.wpilibj.romi.
OnBoardIO
Constructor.
OnBoardIO.ChannelMode
- Enum Class in
edu.wpi.first.wpilibj.romi
Mode for Romi onboard IO channel.
onChange(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Starts the command when the condition changes.
onChange(Consumer<V>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
Bind a listener that's called when the selected value changes.
onCommandExecute(Consumer<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Adds an action to perform on the execution of any command by the scheduler.
onCommandFinish(Consumer<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Adds an action to perform on the finishing of any command by the scheduler.
onCommandInitialize(Consumer<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Adds an action to perform on the initialization of any command by the scheduler.
onCommandInterrupt(BiConsumer<Command, Optional<Command>>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Adds an action to perform on the interruption of any command by the scheduler.
onCommandInterrupt(Consumer<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Adds an action to perform on the interruption of any command by the scheduler.
one()
- Method in class edu.wpi.first.units.
AccelerationUnit
one()
- Method in class edu.wpi.first.units.
AngleUnit
one()
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
one()
- Method in class edu.wpi.first.units.
AngularMomentumUnit
one()
- Method in class edu.wpi.first.units.
AngularVelocityUnit
one()
- Method in class edu.wpi.first.units.
CurrentUnit
one()
- Method in class edu.wpi.first.units.
DimensionlessUnit
one()
- Method in class edu.wpi.first.units.
DistanceUnit
one()
- Method in class edu.wpi.first.units.
EnergyUnit
one()
- Method in class edu.wpi.first.units.
ForceUnit
one()
- Method in class edu.wpi.first.units.
FrequencyUnit
one()
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
one()
- Method in class edu.wpi.first.units.
LinearMomentumUnit
one()
- Method in class edu.wpi.first.units.
LinearVelocityUnit
one()
- Method in class edu.wpi.first.units.
MassUnit
one()
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
one()
- Method in class edu.wpi.first.units.
MultUnit
one()
- Method in class edu.wpi.first.units.
PerUnit
one()
- Method in class edu.wpi.first.units.
PowerUnit
one()
- Method in class edu.wpi.first.units.
ResistanceUnit
one()
- Method in class edu.wpi.first.units.
TemperatureUnit
one()
- Method in class edu.wpi.first.units.
TimeUnit
one()
- Method in class edu.wpi.first.units.
TorqueUnit
one()
- Method in class edu.wpi.first.units.
Unit
Gets a measure with a magnitude of 1.0 in terms of this unit.
one()
- Method in class edu.wpi.first.units.
VelocityUnit
one()
- Method in class edu.wpi.first.units.
VoltageUnit
onFalse(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Starts the given command whenever the condition changes from `true` to `false`.
onlyIf(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to only run if this condition is met.
onlyWhile(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a run condition.
onTrue(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Starts the given command whenever the condition changes from `false` to `true`.
openCANStreamSession(int, int, int)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Opens a new CAN stream session for receiving CAN messages with specified filters.
OpenCvLoader
- Class in
edu.wpi.first.cscore
OpenCV Native Loader.
OpenCvLoader.Helper
- Class in
edu.wpi.first.cscore
Sets whether JNI should be loaded in the static block.
OPT_IN
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Strategy
Log only fields and methods tagged with an
Logged
annotation.
OPT_OUT
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Strategy
Log everything except for those elements explicitly opted out of with the skip = true
 attribute.
optimize(Rotation2d)
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
Minimize the change in heading this swerve module state would require by potentially reversing
 the direction the wheel spins.
optimize(SwerveModuleState, Rotation2d)
- Static method in class edu.wpi.first.math.kinematics.
SwerveModuleState
Deprecated.
Use the instance method instead.
optimizeCurvature(QuinticHermiteSpline[])
- Static method in class edu.wpi.first.math.spline.
SplineHelper
Optimizes the curvature of 2 or more quintic splines at knot points.
options()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the options button's digital signal.
options()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the options button's digital signal.
options(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the options button's digital signal.
options(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the options button's digital signal.
options(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the options button's digital signal.
options(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the options button's digital signal.
or(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Composes this event with another event, returning a new event that is active when either event
 is active.
or(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Composes two triggers with logical OR.
otherPaths
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
Other path aliases to device (e.g.
Ounce
- Static variable in class edu.wpi.first.units.
Units
1/16 of a
Units.Pound
.
OunceForce
- Static variable in class edu.wpi.first.units.
Units
1/16th of
Units.PoundsForce
, equivalent to the standard force of gravity applied to a one
Units.Ounce
mass.
OunceInch
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
ounce of force
applied to an object one
Units.Inch
away from its center of rotation.
OunceInches
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
ounce of force
applied to an object one
Units.Inch
away from its center of rotation.
Ounces
- Static variable in class edu.wpi.first.units.
Units
1/16 of a
Units.Pound
.
OuncesForce
- Static variable in class edu.wpi.first.units.
Units
1/16th of
Units.PoundsForce
, equivalent to the standard force of gravity applied to a one
Units.Ounce
mass.
OUTPUT
- Enum constant in enum class edu.wpi.first.wpilibj.romi.
OnBoardIO.ChannelMode
Output.
overlayOn(LEDPattern)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that plays this pattern overlaid on another.
P
pack(Controller.ProtobufArmFeedforward, ArmFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
pack(Controller.ProtobufDifferentialDriveFeedforward, DifferentialDriveFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
pack(Controller.ProtobufDifferentialDriveWheelVoltages, DifferentialDriveWheelVoltages)
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
pack(Controller.ProtobufElevatorFeedforward, ElevatorFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
pack(Controller.ProtobufSimpleMotorFeedforward, SimpleMotorFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
pack(Geometry2D.ProtobufEllipse2d, Ellipse2d)
- Method in class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
pack(Geometry2D.ProtobufPose2d, Pose2d)
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
pack(Geometry2D.ProtobufRectangle2d, Rectangle2d)
- Method in class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
pack(Geometry2D.ProtobufRotation2d, Rotation2d)
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
pack(Geometry2D.ProtobufTransform2d, Transform2d)
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
pack(Geometry2D.ProtobufTranslation2d, Translation2d)
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
pack(Geometry2D.ProtobufTwist2d, Twist2d)
- Method in class edu.wpi.first.math.geometry.proto.
Twist2dProto
pack(Geometry3D.ProtobufPose3d, Pose3d)
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
pack(Geometry3D.ProtobufQuaternion, Quaternion)
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
pack(Geometry3D.ProtobufRotation3d, Rotation3d)
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
pack(Geometry3D.ProtobufTransform3d, Transform3d)
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
pack(Geometry3D.ProtobufTranslation3d, Translation3d)
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
pack(Geometry3D.ProtobufTwist3d, Twist3d)
- Method in class edu.wpi.first.math.geometry.proto.
Twist3dProto
pack(Kinematics.ProtobufChassisSpeeds, ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
pack(Kinematics.ProtobufDifferentialDriveKinematics, DifferentialDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
pack(Kinematics.ProtobufDifferentialDriveWheelPositions, DifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
pack(Kinematics.ProtobufDifferentialDriveWheelSpeeds, DifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
pack(Kinematics.ProtobufMecanumDriveKinematics, MecanumDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
pack(Kinematics.ProtobufMecanumDriveWheelPositions, MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
pack(Kinematics.ProtobufMecanumDriveWheelSpeeds, MecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
pack(Kinematics.ProtobufSwerveDriveKinematics, SwerveDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
pack(Kinematics.ProtobufSwerveModulePosition, SwerveModulePosition)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
pack(Kinematics.ProtobufSwerveModuleState, SwerveModuleState)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
pack(Plant.ProtobufDCMotor, DCMotor)
- Method in class edu.wpi.first.math.system.plant.proto.
DCMotorProto
pack(Spline.ProtobufCubicHermiteSpline, CubicHermiteSpline)
- Method in class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
pack(Spline.ProtobufQuinticHermiteSpline, QuinticHermiteSpline)
- Method in class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
pack(System.ProtobufLinearSystem, LinearSystem<States, Inputs, Outputs>)
- Method in class edu.wpi.first.math.system.proto.
LinearSystemProto
pack(Trajectory.ProtobufTrajectory, Trajectory)
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
pack(Trajectory.ProtobufTrajectoryState, Trajectory.State)
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
pack(Wpimath.ProtobufMatrix, Matrix<R, C>)
- Method in class edu.wpi.first.math.proto.
MatrixProto
pack(Wpimath.ProtobufVector, Vector<R>)
- Method in class edu.wpi.first.math.proto.
VectorProto
pack(ByteBuffer, ArmFeedforward)
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
pack(ByteBuffer, DifferentialDriveFeedforward)
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
pack(ByteBuffer, DifferentialDriveWheelVoltages)
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
pack(ByteBuffer, ElevatorFeedforward)
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
pack(ByteBuffer, SimpleMotorFeedforward)
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
pack(ByteBuffer, Ellipse2d)
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
pack(ByteBuffer, Pose2d)
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
pack(ByteBuffer, Pose3d)
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
pack(ByteBuffer, Quaternion)
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
pack(ByteBuffer, Rectangle2d)
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
pack(ByteBuffer, Rotation2d)
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
pack(ByteBuffer, Rotation3d)
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
pack(ByteBuffer, Transform2d)
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
pack(ByteBuffer, Transform3d)
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
pack(ByteBuffer, Translation2d)
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
pack(ByteBuffer, Translation3d)
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
pack(ByteBuffer, Twist2d)
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
pack(ByteBuffer, Twist3d)
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
pack(ByteBuffer, ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
pack(ByteBuffer, DifferentialDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
pack(ByteBuffer, DifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
pack(ByteBuffer, DifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
pack(ByteBuffer, MecanumDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
pack(ByteBuffer, MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
pack(ByteBuffer, MecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
pack(ByteBuffer, SwerveDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
pack(ByteBuffer, SwerveModulePosition)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
pack(ByteBuffer, SwerveModuleState)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
pack(ByteBuffer, Matrix<R, C>)
- Method in class edu.wpi.first.math.struct.
MatrixStruct
pack(ByteBuffer, CubicHermiteSpline)
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
pack(ByteBuffer, QuinticHermiteSpline)
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
pack(ByteBuffer, LinearSystem<States, Inputs, Outputs>)
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
pack(ByteBuffer, DCMotor)
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
pack(ByteBuffer, Vector<R>)
- Method in class edu.wpi.first.math.struct.
VectorStruct
pack(ByteBuffer, T)
- Method in interface edu.wpi.first.util.struct.
Struct
Puts object contents to a ByteBuffer starting at the current position.
pack(MessageType, T)
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Copies the object contents into a protobuf message.
packArray(ByteBuffer, double[])
- Static method in interface edu.wpi.first.util.struct.
Struct
Puts array contents to a ByteBuffer starting at the current position.
packArray(ByteBuffer, T[], Struct<T>)
- Static method in interface edu.wpi.first.util.struct.
Struct
Puts array contents to a ByteBuffer starting at the current position.
packArray(RepeatedDouble, double[])
- Static method in interface edu.wpi.first.util.protobuf.
Protobuf
Pack a serialized protobuf double array message.
packArray(RepeatedMessage<MessageType>, T[], Protobuf<T, MessageType>)
- Static method in interface edu.wpi.first.util.protobuf.
Protobuf
Pack a serialized protobuf array message.
packRGB(int, int, int)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Packs 3 RGB values into a single 32-bit integer.
Pair
<
A
,
B
> - Class in
edu.wpi.first.math
Represents a pair of two objects.
Pair(A, B)
- Constructor for class edu.wpi.first.math.
Pair
Constructs a pair.
parallel(Command...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs a group of commands at the same time.
ParallelCommandGroup
- Class in
edu.wpi.first.wpilibj2.command
A command composition that runs a set of commands in parallel, ending when the last command ends.
ParallelCommandGroup(Command...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
Creates a new ParallelCommandGroup.
ParallelDeadlineGroup
- Class in
edu.wpi.first.wpilibj2.command
A command composition that runs a set of commands in parallel, ending only when a specific
 command (the "deadline") ends, interrupting all other commands that are still running at that
 point.
ParallelDeadlineGroup(Command, Command...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
Creates a new ParallelDeadlineGroup.
ParallelRaceGroup
- Class in
edu.wpi.first.wpilibj2.command
A composition that runs a set of commands in parallel, ending when any one of the commands ends
 and interrupting all the others.
ParallelRaceGroup(Command...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
Creates a new ParallelCommandRace.
PARAMETER_OUT_OF_RANGE
- Static variable in class edu.wpi.first.hal.
HALUtil
A parameter is out of range.
parameterize(Spline)
- Static method in class edu.wpi.first.math.spline.
SplineParameterizer
Parametrizes the spline.
parameterize(Spline, double, double)
- Static method in class edu.wpi.first.math.spline.
SplineParameterizer
Parametrizes the spline.
parent
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Parent sendable object.
parse()
- Method in class edu.wpi.first.util.struct.parser.
Parser
Parses the schema.
ParsedDeclaration
- Class in
edu.wpi.first.util.struct.parser
Raw struct schema declaration.
ParsedDeclaration()
- Constructor for class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Default constructor.
ParsedSchema
- Class in
edu.wpi.first.util.struct.parser
Raw struct schema.
ParsedSchema()
- Constructor for class edu.wpi.first.util.struct.parser.
ParsedSchema
Default constructor.
ParseException
- Exception in
edu.wpi.first.util.struct.parser
Exception for parsing errors.
ParseException(int, String)
- Constructor for exception edu.wpi.first.util.struct.parser.
ParseException
Constructs a ParseException.
ParseException(int, String, Throwable)
- Constructor for exception edu.wpi.first.util.struct.parser.
ParseException
Constructs a ParseException.
ParseException(int, Throwable)
- Constructor for exception edu.wpi.first.util.struct.parser.
ParseException
Constructs a ParseException.
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
parseFrom(byte[])
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
parseFrom(JsonSource)
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
parseFrom(ProtoSource)
- Static method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
Parser
- Class in
edu.wpi.first.util.struct.parser
Raw struct schema parser.
Parser(String)
- Constructor for class edu.wpi.first.util.struct.parser.
Parser
Construct a raw struct schema parser.
path
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
Path to device if available (e.g.
PATH_SEPARATOR
- Static variable in class edu.wpi.first.networktables.
NetworkTable
The path separator for sub-tables and keys.
pause()
- Method in class edu.wpi.first.util.datalog.
DataLog
Pauses appending of data records to the log.
pauseTiming()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
pauseTiming()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Pause the simulator time.
PDPSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated Power Distribution Panel (PDP).
PDPSim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
PDPSim
Constructs for the default PDP.
PDPSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PDPSim
Constructs from a PDP module number (CAN ID).
PDPSim(PowerDistribution)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PDPSim
Constructs from a PowerDistribution object.
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Current
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Force
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an acceleration unit and returns the result in the most appropriate
 unit.
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Per
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Power
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Time
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(AccelerationUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(AngleUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angle unit and returns the result in the most appropriate unit.
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(AngleUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular acceleration unit and returns the result in the most
 appropriate unit.
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(AngularAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular momentum unit and returns the result in the most appropriate
 unit.
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(AngularMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an angular velocity unit and returns the result in the most appropriate
 unit.
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(AngularVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(CurrentUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a unit of electric current and returns the result in the most
 appropriate unit.
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(CurrentUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(CurrentUnit)
- Method in class edu.wpi.first.units.
VoltageUnit
Combines this unit of voltage with a unit of current to form a unit of resistance.
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(DistanceUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a distance unit and returns the result in the most appropriate unit.
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(DistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(EnergyUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by an energy unit and returns the result in the most appropriate unit.
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(EnergyUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(ForceUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a force unit and returns the result in the most appropriate unit.
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(ForceUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a frequency unit and returns the result in the most appropriate unit.
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(FrequencyUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear acceleration unit and returns the result in the most
 appropriate unit.
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(LinearAccelerationUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear momentum unit and returns the result in the most appropriate
 unit.
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(LinearMomentumUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a linear velocity unit and returns the result in the most appropriate
 unit.
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(LinearVelocityUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(MassUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a mass unit and returns the result in the most appropriate unit.
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(MassUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a moment of inertia unit and returns the result in the most appropriate
 unit.
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(MomentOfInertiaUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic compound unit and returns the result in the most appropriate
 unit.
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(MultUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a generic ratio unit and returns the result in the most appropriate
 unit.
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(PerUnit<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(PowerUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a power unit and returns the result in the most appropriate unit.
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(PowerUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a resistance unit and returns the result in the most appropriate unit.
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(ResistanceUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a temperature unit and returns the result in the most appropriate unit.
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(TemperatureUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(TimeUnit)
- Method in class edu.wpi.first.units.
AccelerationUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
AngleUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
CurrentUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
DimensionlessUnit
Creates a frequency unit as the ratio of this dimensionless unit to the period of time in which
 a single cycle is made.
per(TimeUnit)
- Method in class edu.wpi.first.units.
DistanceUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
EnergyUnit
Combines this unit of energy with a unit of time to create a unit of power.
per(TimeUnit)
- Method in class edu.wpi.first.units.
ForceUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
FrequencyUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
Combines this velocity with a time period of change to form a unit of acceleration.
per(TimeUnit)
- Method in class edu.wpi.first.units.
MassUnit
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(TimeUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a time period and returns the result in the most appropriate unit.
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(TimeUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(TimeUnit)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
MultUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
PerUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
PowerUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
TemperatureUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
TimeUnit
Creates a dimensionless unit corresponding to the scale factor between this and another unit of
 time.
per(TimeUnit)
- Method in class edu.wpi.first.units.
TorqueUnit
per(TimeUnit)
- Method in class edu.wpi.first.units.
Unit
Combines this unit with a unit of time.
per(TimeUnit)
- Method in class edu.wpi.first.units.
VelocityUnit
Combines this velocity unit with a unit of a period of change to create an acceleration unit.
per(TimeUnit)
- Method in class edu.wpi.first.units.
VoltageUnit
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(TorqueUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a torque unit and returns the result in the most appropriate unit.
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(TorqueUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Current
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Force
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a velocity unit and returns the result in the most appropriate unit.
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Per
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Power
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Time
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(VelocityUnit<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Acceleration
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Angle
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Current
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Distance
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Energy
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Force
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Frequency
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Mass
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Mult
per(VoltageUnit)
- Method in interface edu.wpi.first.units.
Measure
Divides this measure by a voltage unit and returns the result in the most appropriate unit.
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Per
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Power
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Resistance
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Temperature
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Time
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Torque
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Velocity
per(VoltageUnit)
- Method in interface edu.wpi.first.units.measure.
Voltage
per(U)
- Method in class edu.wpi.first.units.
AccelerationUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
AngleUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
AngularMomentumUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
AngularVelocityUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
CurrentUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
DimensionlessUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
DistanceUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
EnergyUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
ForceUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
FrequencyUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
LinearMomentumUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
LinearVelocityUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
MassUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
PowerUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
ResistanceUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
TemperatureUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
TimeUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
TorqueUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
VelocityUnit
Creates a ratio unit between this unit and an arbitrary other unit.
per(U)
- Method in class edu.wpi.first.units.
VoltageUnit
Creates a generic ratio unit of this voltage to a different unit type.
Per
<
Dividend
extends
Unit
,
Divisor
extends
Unit
> - Interface in
edu.wpi.first.units.measure
Percent
- Static variable in class edu.wpi.first.units.
Units
A dimensionless unit equal to to 1/100th of a
Units.Value
.
percentBusUtilization
- Variable in class edu.wpi.first.hal.can.
CANStatus
The utilization of the CAN Bus.
periodic
- Variable in class edu.wpi.first.networktables.
PubSubOptions
How frequently changes will be sent over the network, in seconds.
periodic()
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
periodic()
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
periodic()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
This method is called periodically by the
CommandScheduler
.
periodic()
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
periodic(double)
- Static method in class edu.wpi.first.networktables.
PubSubOption
How frequently changes will be sent over the network.
PerUnit
<
N
extends
Unit
,
D
extends
Unit
> - Class in
edu.wpi.first.units
Generic combinatory unit type that represents the proportion of one unit to another, such as
 Meters per Second or Radians per Celsius.
PerUnit(PerUnit<N, D>, N, D)
- Constructor for class edu.wpi.first.units.
PerUnit
Creates a new proportional unit derived from the ratio of one unit to another.
PIDCommand
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a PIDController instead
PIDCommand(PIDController, DoubleSupplier, double, DoubleConsumer, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a PIDController.
PIDCommand(PIDController, DoubleSupplier, DoubleSupplier, DoubleConsumer, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
PIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a PIDController.
PIDController
- Class in
edu.wpi.first.math.controller
Implements a PID control loop.
PIDController(double, double, double)
- Constructor for class edu.wpi.first.math.controller.
PIDController
Allocates a PIDController with the given constants for kp, ki, and kd and a default period of
 0.02 seconds.
PIDController(double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
PIDController
Allocates a PIDController with the given constants for kp, ki, and kd.
PIDSubsystem
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a PIDController instead
PIDSubsystem(PIDController)
- Constructor for class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Creates a new PIDSubsystem.
PIDSubsystem(PIDController, double)
- Constructor for class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Creates a new PIDSubsystem.
ping()
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Single ping to ultrasonic sensor.
pipeTo(UnaryFunction)
- Method in interface edu.wpi.first.units.
UnaryFunction
Constructs a new function that first calls this function, then passes the result to another as
 input.
pixelFormat
- Variable in class edu.wpi.first.cscore.
VideoMode
Pixel format.
PixelFormat
- Enum Class in
edu.wpi.first.util
Image pixel format.
Plant
- Class in
edu.wpi.first.math.proto
Plant()
- Constructor for class edu.wpi.first.math.proto.
Plant
Plant.ProtobufDCMotor
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufDCMotor
plus(double)
- Method in class edu.wpi.first.math.
Matrix
Adds the given value to all the elements of this matrix.
plus(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Adds another quaternion to this quaternion entrywise.
plus(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Adds two rotations together, with the result being bounded between -π and π.
plus(Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Adds two rotations together.
plus(Transform2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Transforms the pose by the given transformation and returns the new transformed pose.
plus(Transform2d)
- Method in class edu.wpi.first.math.geometry.
Transform2d
Composes two transformations.
plus(Transform3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Transforms the pose by the given transformation and returns the new transformed pose.
plus(Transform3d)
- Method in class edu.wpi.first.math.geometry.
Transform3d
Composes two transformations.
plus(Translation2d)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the sum of two translations in 2D space.
plus(Translation3d)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the sum of two translations in 3D space.
plus(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Adds two ChassisSpeeds and returns the sum.
plus(DifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Adds two DifferentialDriveWheelSpeeds and returns the sum.
plus(MecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Adds two MecanumDriveWheelSpeeds and returns the sum.
plus(Matrix<R, C>)
- Method in class edu.wpi.first.math.
Matrix
Adds the given matrix to this matrix.
plus(Vector<R>)
- Method in class edu.wpi.first.math.
Vector
Adds the given vector to this vector.
plus(Measure<? extends AccelerationUnit<D>>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
plus(Measure<? extends AngleUnit>)
- Method in interface edu.wpi.first.units.measure.
Angle
plus(Measure<? extends AngularAccelerationUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
plus(Measure<? extends AngularMomentumUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
plus(Measure<? extends AngularVelocityUnit>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
plus(Measure<? extends CurrentUnit>)
- Method in interface edu.wpi.first.units.measure.
Current
plus(Measure<? extends DimensionlessUnit>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
plus(Measure<? extends DistanceUnit>)
- Method in interface edu.wpi.first.units.measure.
Distance
plus(Measure<? extends EnergyUnit>)
- Method in interface edu.wpi.first.units.measure.
Energy
plus(Measure<? extends ForceUnit>)
- Method in interface edu.wpi.first.units.measure.
Force
plus(Measure<? extends FrequencyUnit>)
- Method in interface edu.wpi.first.units.measure.
Frequency
plus(Measure<? extends LinearAccelerationUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
plus(Measure<? extends LinearMomentumUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
plus(Measure<? extends LinearVelocityUnit>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
plus(Measure<? extends MassUnit>)
- Method in interface edu.wpi.first.units.measure.
Mass
plus(Measure<? extends MomentOfInertiaUnit>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
plus(Measure<? extends MultUnit<A, B>>)
- Method in interface edu.wpi.first.units.measure.
Mult
plus(Measure<? extends PerUnit<Dividend, Divisor>>)
- Method in interface edu.wpi.first.units.measure.
Per
plus(Measure<? extends PowerUnit>)
- Method in interface edu.wpi.first.units.measure.
Power
plus(Measure<? extends ResistanceUnit>)
- Method in interface edu.wpi.first.units.measure.
Resistance
plus(Measure<? extends TemperatureUnit>)
- Method in interface edu.wpi.first.units.measure.
Temperature
plus(Measure<? extends TimeUnit>)
- Method in interface edu.wpi.first.units.measure.
Time
plus(Measure<? extends TorqueUnit>)
- Method in interface edu.wpi.first.units.measure.
Torque
plus(Measure<? extends VelocityUnit<D>>)
- Method in interface edu.wpi.first.units.measure.
Velocity
plus(Measure<? extends VoltageUnit>)
- Method in interface edu.wpi.first.units.measure.
Voltage
plus(Measure<? extends U>)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
plus(Measure<? extends U>)
- Method in interface edu.wpi.first.units.
Measure
Adds another measure of the same unit type to this one.
plus(Measure<? extends U>)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
PneumaticHub
- Class in
edu.wpi.first.wpilibj
Module class for controlling a REV Robotics Pneumatic Hub.
PneumaticHub()
- Constructor for class edu.wpi.first.wpilibj.
PneumaticHub
Constructs a PneumaticHub with the default ID (1).
PneumaticHub(int)
- Constructor for class edu.wpi.first.wpilibj.
PneumaticHub
Constructs a PneumaticHub.
PneumaticsBase
- Interface in
edu.wpi.first.wpilibj
Interface for pneumatics devices.
PneumaticsBaseSim
- Class in
edu.wpi.first.wpilibj.simulation
Common base class for pneumatics module simulation classes.
PneumaticsBaseSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Constructs a PneumaticsBaseSim with the given index.
PneumaticsBaseSim(PneumaticsBase)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Constructs a PneumaticsBaseSim for the given module.
PneumaticsControlModule
- Class in
edu.wpi.first.wpilibj
Module class for controlling a Cross The Road Electronics Pneumatics Control Module.
PneumaticsControlModule()
- Constructor for class edu.wpi.first.wpilibj.
PneumaticsControlModule
Constructs a PneumaticsControlModule with the default ID (0).
PneumaticsControlModule(int)
- Constructor for class edu.wpi.first.wpilibj.
PneumaticsControlModule
Constructs a PneumaticsControlModule.
PneumaticsModuleType
- Enum Class in
edu.wpi.first.wpilibj
Pneumatics module type.
poll()
- Method in class edu.wpi.first.wpilibj.event.
EventLoop
Poll all bindings.
pollListener(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Polls listener.
pollListenerTimeout(int, double)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Polls listener with timeout.
pollStorage
- Variable in class edu.wpi.first.networktables.
PubSubOptions
Polling storage size for a subscription.
pollStorage(int)
- Static method in class edu.wpi.first.networktables.
PubSubOption
Polling storage for subscription.
PortForwarder
- Class in
edu.wpi.first.net
Forward ports to another host.
PortsJNI
- Class in
edu.wpi.first.hal
Ports HAL JNI functions.
pose
- Variable in class edu.wpi.first.apriltag.
AprilTag
The tag's pose.
pose1
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Pose 1.
pose2
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimate
Pose 2.
Pose2d
- Class in
edu.wpi.first.math.geometry
Represents a 2D pose containing translational and rotational elements.
Pose2d()
- Constructor for class edu.wpi.first.math.geometry.
Pose2d
Constructs a pose at the origin facing toward the positive X axis.
Pose2d(double, double, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Pose2d
Constructs a pose with x and y translations instead of a separate Translation2d.
Pose2d(Translation2d, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Pose2d
Constructs a pose with the specified translation and rotation.
Pose2d(Matrix<N3, N3>)
- Constructor for class edu.wpi.first.math.geometry.
Pose2d
Constructs a pose with the specified affine transformation matrix.
Pose2d(Distance, Distance, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Pose2d
Constructs a pose with x and y translations instead of a separate Translation2d.
Pose2dProto
- Class in
edu.wpi.first.math.geometry.proto
Pose2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Pose2dProto
Pose2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Pose2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Pose2dStruct
Pose3d
- Class in
edu.wpi.first.math.geometry
Represents a 3D pose containing translational and rotational elements.
Pose3d()
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a pose at the origin facing toward the positive X axis.
Pose3d(double, double, double, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a pose with x, y, and z translations instead of a separate Translation3d.
Pose3d(Pose2d)
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a 3D pose from a 2D pose in the X-Y plane.
Pose3d(Translation3d, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a pose with the specified translation and rotation.
Pose3d(Matrix<N4, N4>)
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a pose with the specified affine transformation matrix.
Pose3d(Distance, Distance, Distance, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Pose3d
Constructs a pose with x, y, and z translations instead of a separate Translation3d.
Pose3dJNI
- Class in
edu.wpi.first.math.jni
Pose3d JNI.
Pose3dProto
- Class in
edu.wpi.first.math.geometry.proto
Pose3dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Pose3dProto
Pose3dStruct
- Class in
edu.wpi.first.math.geometry.struct
Pose3dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Pose3dStruct
PoseEstimator
<
T
> - Class in
edu.wpi.first.math.estimator
This class wraps
Odometry
to fuse latency-compensated vision measurements with encoder
 measurements.
PoseEstimator(Kinematics<?, T>, Odometry<T>, Matrix<N3, N1>, Matrix<N3, N1>)
- Constructor for class edu.wpi.first.math.estimator.
PoseEstimator
Constructs a PoseEstimator.
PoseEstimator3d
<
T
> - Class in
edu.wpi.first.math.estimator
This class wraps
Odometry3d
to fuse latency-compensated vision measurements with encoder
 measurements.
PoseEstimator3d(Kinematics<?, T>, Odometry3d<T>, Matrix<N4, N1>, Matrix<N4, N1>)
- Constructor for class edu.wpi.first.math.estimator.
PoseEstimator3d
Constructs a PoseEstimator3d.
poseMeters
- Variable in class edu.wpi.first.math.spline.
PoseWithCurvature
Represents the pose.
poseMeters
- Variable in class edu.wpi.first.math.trajectory.
Trajectory.State
The pose at that point of the trajectory.
poseTo3dVector(Pose2d)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Deprecated, for removal: This API element is subject to removal in a future version.
Create the vector manually instead. If you were using this as an intermediate step
     for constructing affine transformations, use
Pose2d.toMatrix()
instead.
poseTo4dVector(Pose2d)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Deprecated, for removal: This API element is subject to removal in a future version.
Create the vector manually instead. If you were using this as an intermediate step
     for constructing affine transformations, use
Pose2d.toMatrix()
instead.
poseToVector(Pose2d)
- Static method in class edu.wpi.first.math.
StateSpaceUtil
Deprecated, for removal: This API element is subject to removal in a future version.
Create the vector manually instead. If you were using this as an intermediate step
     for constructing affine transformations, use
Pose2d.toMatrix()
instead.
PoseWithCurvature
- Class in
edu.wpi.first.math.spline
Represents a pair of a pose and a curvature.
PoseWithCurvature()
- Constructor for class edu.wpi.first.math.spline.
PoseWithCurvature
Constructs a PoseWithCurvature with default values.
PoseWithCurvature(Pose2d, double)
- Constructor for class edu.wpi.first.math.spline.
PoseWithCurvature
Constructs a PoseWithCurvature.
position
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.State
The position at this state.
position
- Variable in class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
The position at this state.
postListenerTask(Runnable)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Posts a task from a listener to the ListenerExecutor, so that it can be run synchronously from
 the main loop on the next call to
SmartDashboard.updateValues()
.
Pound
- Static variable in class edu.wpi.first.units.
Units
A unit of mass equivalent to approximately 453
Units.Grams
.
PoundFeet
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
pound of force
applied to an object one
Units.Foot
away from its center of rotation.
PoundFoot
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
pound of force
applied to an object one
Units.Foot
away from its center of rotation.
PoundForce
- Static variable in class edu.wpi.first.units.
Units
The standard Imperial unit of force, equivalent to the standard force of gravity applied to a
 one
Units.Pound
mass.
PoundInch
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
pound of force
applied to an object one
Units.Inch
away from its center of rotation.
PoundInches
- Static variable in class edu.wpi.first.units.
Units
The equivalent of one
pound of force
applied to an object one
Units.Inch
away from its center of rotation.
Pounds
- Static variable in class edu.wpi.first.units.
Units
A unit of mass equivalent to approximately 453
Units.Grams
.
PoundsForce
- Static variable in class edu.wpi.first.units.
Units
The standard Imperial unit of force, equivalent to the standard force of gravity applied to a
 one
Units.Pound
mass.
pov(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around this angle of the default (index 0) POV on the HID,
 attached to
the default command scheduler button
 loop
.
pov(int, int, EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around this angle of a POV on the HID.
pov(int, int, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around this angle of a POV on the HID.
pov(int, EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around this angle of a POV on the HID.
POVButton
- Class in
edu.wpi.first.wpilibj2.command.button
A
Trigger
that gets its state from a POV on a
GenericHID
.
POVButton(GenericHID, int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
POVButton
Creates a POV button for triggering commands.
POVButton(GenericHID, int, int)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
POVButton
Creates a POV button for triggering commands.
povCenter()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the center (not pressed) position of the default
 (index 0) POV on the HID, attached to
the
 default command scheduler button loop
.
povCenter(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the center (not pressed) of the default (index
 0) POV on the HID.
povDown()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 180 degree angle (down) of the default (index 0)
 POV on the HID, attached to
the default command
 scheduler button loop
.
povDown(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 180 degree angle (down) of the default
 (index 0) POV on the HID.
povDownLeft()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 225 degree angle (down left) of the default
 (index 0) POV on the HID, attached to
the
 default command scheduler button loop
.
povDownLeft(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 225 degree angle (down left) of the default
 (index 0) POV on the HID.
povDownRight()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 135 degree angle (right down) of the default
 (index 0) POV on the HID, attached to
the
 default command scheduler button loop
.
povDownRight(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 135 degree angle (right down) of the
 default (index 0) POV on the HID.
povLeft()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 270 degree angle (left) of the default (index 0)
 POV on the HID, attached to
the default command
 scheduler button loop
.
povLeft(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 270 degree angle (left) of the default
 (index 0) POV on the HID.
povRight()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 90 degree angle (right) of the default (index 0)
 POV on the HID, attached to
the default command
 scheduler button loop
.
povRight(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 90 degree angle (right) of the default
 (index 0) POV on the HID.
povUp()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 0 degree angle (up) of the default (index 0) POV
 on the HID, attached to
the default command
 scheduler button loop
.
povUp(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 0 degree angle (up) of the default (index
 0) POV on the HID.
povUpLeft()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 315 degree angle (left up) of the default (index
 0) POV on the HID, attached to
the default
 command scheduler button loop
.
povUpLeft(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 315 degree angle (left up) of the default
 (index 0) POV on the HID.
povUpRight()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Constructs a Trigger instance based around the 45 degree angle (right up) of the default (index
 0) POV on the HID, attached to
the default
 command scheduler button loop
.
povUpRight(EventLoop)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Constructs a BooleanEvent instance based around the 45 degree angle (right up) of the default
 (index 0) POV on the HID.
pow(double)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Rational power of a quaternion.
pow(double)
- Method in class edu.wpi.first.math.
Matrix
Computes the matrix power using Eigen's solver.
pow(double[], int, double, double[])
- Static method in class edu.wpi.first.math.jni.
EigenJNI
Computes the matrix pow.
Power
- Interface in
edu.wpi.first.units.measure
PowerDistribution
- Class in
edu.wpi.first.wpilibj
Class for getting voltage, current, temperature, power and energy from the CTRE Power
 Distribution Panel (PDP) or REV Power Distribution Hub (PDH) over CAN.
PowerDistribution()
- Constructor for class edu.wpi.first.wpilibj.
PowerDistribution
Constructs a PowerDistribution object.
PowerDistribution(int, PowerDistribution.ModuleType)
- Constructor for class edu.wpi.first.wpilibj.
PowerDistribution
Constructs a PowerDistribution object.
PowerDistribution.ModuleType
- Enum Class in
edu.wpi.first.wpilibj
Power distribution module type.
PowerDistributionDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for power distribution data.
PowerDistributionFaults
- Class in
edu.wpi.first.hal
Faults for a PowerDistribution device.
PowerDistributionFaults(int)
- Constructor for class edu.wpi.first.hal.
PowerDistributionFaults
Constructs from a bitfield.
PowerDistributionJNI
- Class in
edu.wpi.first.hal
Power Distribution JNI Functions.
PowerDistributionStickyFaults
- Class in
edu.wpi.first.hal
Sticky faults for a PowerDistribution device.
PowerDistributionStickyFaults(int)
- Constructor for class edu.wpi.first.hal.
PowerDistributionStickyFaults
Constructs from a bitfield.
PowerDistributionVersion
- Class in
edu.wpi.first.hal
Power distribution version.
PowerDistributionVersion(int, int, int, int, int, int)
- Constructor for class edu.wpi.first.hal.
PowerDistributionVersion
Constructs a power distribution version (Called from the HAL).
PowerJNI
- Class in
edu.wpi.first.hal
Power HAL JNI Functions.
PowerUnit
- Class in
edu.wpi.first.units
Unit of power dimension.
Practice
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
Practice.
predict(double)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Sets new controller output, projects model forward, and runs observer prediction.
predict(Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Project the model into the future with a new control input u.
predict(Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Project the model into the future with a new control input u.
predict(Matrix<Inputs, N1>, double)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Project the model into the future with a new control input u.
predict(Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Project the model into the future with a new control input u.
predict(Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Project the model into the future with a new control input u.
predict(Matrix<Inputs, N1>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, double)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Project the model into the future with a new control input u.
Preferences
- Class in
edu.wpi.first.wpilibj
The preferences class provides a relatively simple way to save important values to the roboRIO to
 access the next time the roboRIO is booted.
prefixMatch
- Variable in class edu.wpi.first.networktables.
PubSubOptions
Perform prefix match on subscriber topic names.
preload(BufferedReader)
- Static method in class edu.wpi.first.util.
ClassPreloader
Loads classes from a buffered reader.
preload(InputStream)
- Static method in class edu.wpi.first.util.
ClassPreloader
Loads classes from an input stream.
preload(Iterable<String>)
- Static method in class edu.wpi.first.util.
ClassPreloader
Loads classes from an iterable.
preload(String...)
- Static method in class edu.wpi.first.util.
ClassPreloader
Loads classes.
preloadFile(String)
- Static method in class edu.wpi.first.util.
ClassPreloader
Loads classes from a file.
print(String)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that prints a message and finishes.
PrintCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that prints a string when initialized.
PrintCommand(String)
- Constructor for class edu.wpi.first.wpilibj2.command.
PrintCommand
Creates a new a PrintCommand.
printEpochs()
- Method in class edu.wpi.first.wpilibj.
Tracer
Prints list of epochs added so far and their times to the DriverStation.
printEpochs()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Prints list of epochs added so far and their times.
printEpochs(Consumer<String>)
- Method in class edu.wpi.first.wpilibj.
Tracer
Prints list of epochs added so far and their times to the entered String consumer.
printErrorMessages()
- Static method in interface edu.wpi.first.epilogue.logging.errors.
ErrorHandler
Creates an error handler that will print error messages to the console output, but otherwise
 allow logging to continue in the future.
printWatchdogEpochs()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Prints list of epochs added so far and their times.
printWatchdogEpochs()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Prints list of epochs added so far and their times.
process(Mat)
- Method in interface edu.wpi.first.vision.
VisionPipeline
Processes the image input and sets the result objects.
productId
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
USB product id.
ProfiledPIDCommand
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a ProfiledPIDController instead
ProfiledPIDCommand(ProfiledPIDController, DoubleSupplier, double, BiConsumer<Double, TrapezoidProfile.State>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a ProfiledPIDController.
ProfiledPIDCommand(ProfiledPIDController, DoubleSupplier, TrapezoidProfile.State, BiConsumer<Double, TrapezoidProfile.State>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a ProfiledPIDController.
ProfiledPIDCommand(ProfiledPIDController, DoubleSupplier, DoubleSupplier, BiConsumer<Double, TrapezoidProfile.State>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a ProfiledPIDController.
ProfiledPIDCommand(ProfiledPIDController, DoubleSupplier, Supplier<TrapezoidProfile.State>, BiConsumer<Double, TrapezoidProfile.State>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDCommand
Deprecated.
Creates a new PIDCommand, which controls the given output with a ProfiledPIDController.
ProfiledPIDController
- Class in
edu.wpi.first.math.controller
Implements a PID control loop whose setpoint is constrained by a trapezoid profile.
ProfiledPIDController(double, double, double, TrapezoidProfile.Constraints)
- Constructor for class edu.wpi.first.math.controller.
ProfiledPIDController
Allocates a ProfiledPIDController with the given constants for Kp, Ki, and Kd.
ProfiledPIDController(double, double, double, TrapezoidProfile.Constraints, double)
- Constructor for class edu.wpi.first.math.controller.
ProfiledPIDController
Allocates a ProfiledPIDController with the given constants for Kp, Ki, and Kd.
ProfiledPIDSubsystem
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a ProfiledPIDController instead
ProfiledPIDSubsystem(ProfiledPIDController)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Creates a new ProfiledPIDSubsystem.
ProfiledPIDSubsystem(ProfiledPIDController, double)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Creates a new ProfiledPIDSubsystem.
ProfileTiming(double, double)
- Constructor for class edu.wpi.first.math.trajectory.
ExponentialProfile.ProfileTiming
Constructs a ProfileTiming.
progressMaskLayer(DoubleSupplier)
- Static method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that works as a mask layer for
LEDPattern.mask(LEDPattern)
that illuminates
 only the portion of the LED strip corresponding with some progress.
projection(Vector<R>)
- Method in class edu.wpi.first.math.
Vector
Returns the projection of this vector along another.
propertyHandle
- Variable in class edu.wpi.first.cscore.
VideoEvent
Source property handle.
propertyKind
- Variable in class edu.wpi.first.cscore.
VideoEvent
Source property kind.
proto
- Static variable in class edu.wpi.first.math.controller.
ArmFeedforward
Arm feedforward protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
DifferentialDriveFeedforward protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
DifferentialDriveWheelVoltages protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.controller.
ElevatorFeedforward
ElevatorFeedforward protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
SimpleMotorFeedforward protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Ellipse2d
Ellipse2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Pose2d
Pose2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Pose3d
Pose3d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Quaternion
Quaternion protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Rectangle2d
Rectangle2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
Rotation2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Rotation3d
Rotation3d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Transform2d
Transform2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Transform3d
Transform3d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Translation2d
Translation2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Translation3d
Translation3d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Twist2d
Twist2d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.geometry.
Twist3d
Twist3d protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
ChassisSpeeds
ChassisSpeeds protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
DifferentialDriveKinematics protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
DifferentialDriveWheelPositions struct for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
DifferentialDriveWheelSpeeds protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
MecanumDriveKinematics protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
MecanumDriveWheelPositions protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
MecanumDriveWheelSpeeds protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
SwerveDriveKinematics protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
SwerveModulePosition
SwerveModulePosition protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.kinematics.
SwerveModuleState
SwerveModuleState protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
CubicHermiteSpline struct for serialization.
proto
- Static variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
QuinticHermiteSpline struct for serialization.
proto
- Static variable in class edu.wpi.first.math.system.plant.
DCMotor
DCMotor protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.trajectory.
Trajectory
Trajectory protobuf for serialization.
proto
- Static variable in class edu.wpi.first.math.trajectory.
Trajectory.State
Trajectory.State protobuf for serialization.
Protobuf
<
T
,
MessageType
extends us.hebi.quickbuf.ProtoMessage<?>> - Interface in
edu.wpi.first.util.protobuf
Interface for Protobuf serialization.
ProtobufBuffer
<
T
,
MessageType
extends us.hebi.quickbuf.ProtoMessage<?>> - Class in
edu.wpi.first.util.protobuf
Reusable buffer for serialization/deserialization to/from a protobuf.
ProtobufEntry
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables protobuf-encoded value entry.
ProtobufLogEntry
<
T
> - Class in
edu.wpi.first.util.datalog
Log protobuf-encoded values.
ProtobufPublisher
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables protobuf-encoded value publisher.
ProtobufSerializable
- Interface in
edu.wpi.first.util.protobuf
Marker interface to indicate a class is serializable using Protobuf serialization.
ProtobufSubscriber
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables protobuf-encoded value subscriber.
ProtobufTopic
<
T
> - Class in
edu.wpi.first.networktables
NetworkTables protobuf-encoded value topic.
protocol_version
- Variable in class edu.wpi.first.networktables.
ConnectionInfo
The protocol version being used for this connection.
provideNewDataEventHandle(int)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Adds an event handle to be signalled when new data arrives.
provideRefreshedDataEventHandle(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Registers the given handle for DS data refresh notifications.
ProxyCommand
- Class in
edu.wpi.first.wpilibj2.command
Schedules a given command when this command is initialized and ends when it ends, but does not
 directly run it.
ProxyCommand(Command)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProxyCommand
Creates a new ProxyCommand that schedules the given command when initialized, and ends when it
 is no longer scheduled.
ProxyCommand(Supplier<Command>)
- Constructor for class edu.wpi.first.wpilibj2.command.
ProxyCommand
Deprecated, for removal: This API element is subject to removal in a future version.
This constructor's similarity to
DeferredCommand
is confusing and opens
     potential footguns for users who do not fully understand the semantics and implications of
     proxying, but who simply want runtime construction. Users who do know what they are doing
     and need a supplier-constructed proxied command should instead defer a proxy command.
PS()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the PlayStation button's digital signal.
PS()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the PlayStation button's digital signal.
PS(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the PlayStation button's digital signal.
PS(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the PlayStation button's digital signal.
PS(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the PlayStation button's digital signal.
PS(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the PlayStation button's digital signal.
PS4Controller
- Class in
edu.wpi.first.wpilibj
Handle input from PS4 controllers connected to the Driver Station.
PS4Controller(int)
- Constructor for class edu.wpi.first.wpilibj.
PS4Controller
Construct an instance of a controller.
PS4Controller.Axis
- Enum Class in
edu.wpi.first.wpilibj
Represents an axis on an PS4Controller.
PS4Controller.Button
- Enum Class in
edu.wpi.first.wpilibj
Represents a digital button on a PS4Controller.
PS4ControllerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated PS4 controller.
PS4ControllerSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Constructs from a joystick port number.
PS4ControllerSim(PS4Controller)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Constructs from a PS4Controller object.
PS5Controller
- Class in
edu.wpi.first.wpilibj
Handle input from PS5 controllers connected to the Driver Station.
PS5Controller(int)
- Constructor for class edu.wpi.first.wpilibj.
PS5Controller
Construct an instance of a controller.
PS5Controller.Axis
- Enum Class in
edu.wpi.first.wpilibj
Represents an axis on an PS5Controller.
PS5Controller.Button
- Enum Class in
edu.wpi.first.wpilibj
Represents a digital button on a PS5Controller.
PS5ControllerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated PS5 controller.
PS5ControllerSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Constructs from a joystick port number.
PS5ControllerSim(PS5Controller)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Constructs from a PS5Controller object.
publish(int, int, String, PubSubOption...)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Publishes topic.
publish(int, int, String, PubSubOptions)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Publishes topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
ProtobufTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructArrayTopic
Create a new publisher to the topic.
publish(PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructTopic
Create a new publisher to the topic.
publish(Sendable, SendableBuilder)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Publishes an object in the registry to a builder.
publish(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
RawTopic
Create a new publisher to the topic.
publishConstBoolean(String, boolean)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstBoolean(String, boolean)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant boolean property.
publishConstBoolean(String, boolean)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstBooleanArray(String, boolean[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstBooleanArray(String, boolean[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant boolean array property.
publishConstBooleanArray(String, boolean[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstDouble(String, double)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstDouble(String, double)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant double property.
publishConstDouble(String, double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstDoubleArray(String, double[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstDoubleArray(String, double[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant double array property.
publishConstDoubleArray(String, double[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstFloat(String, float)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstFloat(String, float)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant float property.
publishConstFloat(String, float)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstFloatArray(String, float[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstFloatArray(String, float[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant float array property.
publishConstFloatArray(String, float[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstInteger(String, long)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstInteger(String, long)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant integer property.
publishConstInteger(String, long)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstIntegerArray(String, long[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstIntegerArray(String, long[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant integer property.
publishConstIntegerArray(String, long[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstRaw(String, String, byte[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstRaw(String, String, byte[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant raw property.
publishConstRaw(String, String, byte[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstString(String, String)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstString(String, String)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant string property.
publishConstString(String, String)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
publishConstStringArray(String, String[])
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
publishConstStringArray(String, String[])
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Add a constant string array property.
publishConstStringArray(String, String[])
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Publisher
- Interface in
edu.wpi.first.networktables
NetworkTables publisher.
publishEx(int, int, String, String, PubSubOption...)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Publishes topic.
publishEx(int, int, String, String, PubSubOptions)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Publishes topic.
publishEx(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
ProtobufTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
RawTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new publisher to the topic, with type string and initial properties.
publishEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new publisher to the topic, with type string and initial properties.
PubSub
- Interface in
edu.wpi.first.networktables
NetworkTables publisher or subscriber.
PubSubOption
- Class in
edu.wpi.first.networktables
NetworkTables publish/subscribe option.
PubSubOptions
- Class in
edu.wpi.first.networktables
NetworkTables publish/subscribe options.
PubSubOptions(PubSubOption...)
- Constructor for class edu.wpi.first.networktables.
PubSubOptions
Construct from a list of options.
pulse(double)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Output a single pulse on the digital output line.
pulse(int, double)
- Static method in class edu.wpi.first.hal.
DIOJNI
Generates a single digital pulse.
PULSE_LENGTH
- Static variable in class edu.wpi.first.hal.
CounterJNI
Pulse length mode.
pulseMultiple(long, double)
- Static method in class edu.wpi.first.hal.
DIOJNI
Generates a single digital pulse on multiple channels.
put(long, V)
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Puts a value
value
corresponding to key
key
in the map.
put(K, Matrix<R, C>)
- Method in class edu.wpi.first.math.
InterpolatingMatrixTreeMap
Inserts a key-value pair.
put(K, V)
- Method in class edu.wpi.first.math.interpolation.
InterpolatingTreeMap
Inserts a key-value pair.
putBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a boolean in the table.
putBooleanArray(String, boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a boolean array in the table.
putBooleanArray(String, Boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a boolean array in the table.
putData(Sendable)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Maps the specified key (where the key is the name of the
Sendable
) to the specified
 value in this table.
putData(String, Sendable)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Maps the specified key to the specified value in this table.
putFrame(long, int, int, int, int, PixelFormat)
- Method in class edu.wpi.first.cscore.raw.
RawSource
Put a raw image and notify sinks.
putFrame(RawFrame)
- Method in class edu.wpi.first.cscore.raw.
RawSource
Put a raw image and notify sinks.
putFrame(ByteBuffer, int, int, int, PixelFormat)
- Method in class edu.wpi.first.cscore.raw.
RawSource
Put a raw image and notify sinks.
putFrame(Mat)
- Method in class edu.wpi.first.cscore.
CvSource
Put an OpenCV image and notify sinks
putFrame(Mat, PixelFormat, boolean)
- Method in class edu.wpi.first.cscore.
CvSource
Put an OpenCV image and notify sinks.
putNumber(String, double)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a number in the table.
putNumberArray(String, double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a number array in the table.
putNumberArray(String, Double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a number array in the table.
putRaw(String, byte[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a raw value (byte array) in the table.
putRawSourceFrame(int, long)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Puts raw frame into source.
putRawSourceFrameBB(int, ByteBuffer, int, int, int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Puts raw frame into source.
putRawSourceFrameData(int, long, int, int, int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Puts raw frame into source.
putString(String, String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a string in the table.
putStringArray(String, String[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Put a string array in the table.
putValue(String, NetworkTableValue)
- Method in class edu.wpi.first.networktables.
NetworkTable
Put a value in the table.
putVideo(String, int, int)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Create a MJPEG stream with OpenCV input.
PWM
- Class in
edu.wpi.first.wpilibj
Class implements the PWM generation in the FPGA.
PWM(int)
- Constructor for class edu.wpi.first.wpilibj.
PWM
Allocate a PWM given a channel.
PWM(int, boolean)
- Constructor for class edu.wpi.first.wpilibj.
PWM
Allocate a PWM given a channel.
PWM.PeriodMultiplier
- Enum Class in
edu.wpi.first.wpilibj
Represents the amount to multiply the minimum servo-pulse pwm period by.
PWMConfigDataResult
- Class in
edu.wpi.first.hal
Structure for holding the config data result for PWM.
PWMDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for PWM data.
PWMJNI
- Class in
edu.wpi.first.hal
PWM JNI Functions.
PWMMotorController
- Class in
edu.wpi.first.wpilibj.motorcontrol
Common base class for all PWM Motor Controllers.
PWMMotorController(String, int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Constructor.
PWMSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated PWM output.
PWMSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PWMSim
Constructs from a PWM channel number.
PWMSim(PWMMotorController)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PWMSim
Constructs from a PWMMotorController object.
PWMSim(PWM)
- Constructor for class edu.wpi.first.wpilibj.simulation.
PWMSim
Constructs from a PWM object.
PWMSparkFlex
- Class in
edu.wpi.first.wpilibj.motorcontrol
REV Robotics SPARK Flex Motor Controller.
PWMSparkFlex(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMSparkFlex
Constructor.
PWMSparkMax
- Class in
edu.wpi.first.wpilibj.motorcontrol
REV Robotics SPARK MAX Motor Controller.
PWMSparkMax(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMSparkMax
Constructor.
PWMTalonFX
- Class in
edu.wpi.first.wpilibj.motorcontrol
Cross the Road Electronics (CTRE) Talon FX Motor Controller.
PWMTalonFX(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMTalonFX
Constructor.
PWMTalonSRX
- Class in
edu.wpi.first.wpilibj.motorcontrol
Cross the Road Electronics (CTRE) Talon SRX Motor Controller.
PWMTalonSRX(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMTalonSRX
Constructor.
PWMVenom
- Class in
edu.wpi.first.wpilibj.motorcontrol
Playing with Fusion Venom Motor Controller.
PWMVenom(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMVenom
Constructor.
PWMVictorSPX
- Class in
edu.wpi.first.wpilibj.motorcontrol
Cross the Road Electronics (CTRE) Victor SPX Motor Controller.
PWMVictorSPX(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
PWMVictorSPX
Constructor.
Q
quadDecimate
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
Quad decimation.
quadSigma
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
What Gaussian blur should be applied to the segmented image (used for quad detection).
QuadThresholdParameters()
- Constructor for class edu.wpi.first.apriltag.
AprilTagDetector.QuadThresholdParameters
Default constructor.
Qualification
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
Qualification.
quasistatic(SysIdRoutine.Direction)
- Method in class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine
Returns a command to run a quasistatic test in the specified direction.
Quaternion
- Class in
edu.wpi.first.math.geometry
Represents a quaternion.
Quaternion()
- Constructor for class edu.wpi.first.math.geometry.
Quaternion
Constructs a quaternion with a default angle of 0 degrees.
Quaternion(double, double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Quaternion
Constructs a quaternion with the given components.
QuaternionProto
- Class in
edu.wpi.first.math.geometry.proto
QuaternionProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
QuaternionProto
QuaternionStruct
- Class in
edu.wpi.first.math.geometry.struct
QuaternionStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
QuaternionStruct
QuinticHermiteSpline
- Class in
edu.wpi.first.math.spline
Represents a hermite spline of degree 5.
QuinticHermiteSpline(double[], double[], double[], double[])
- Constructor for class edu.wpi.first.math.spline.
QuinticHermiteSpline
Constructs a quintic hermite spline with the specified control vectors.
QuinticHermiteSplineProto
- Class in
edu.wpi.first.math.spline.proto
QuinticHermiteSplineProto()
- Constructor for class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
QuinticHermiteSplineStruct
- Class in
edu.wpi.first.math.spline.struct
QuinticHermiteSplineStruct()
- Constructor for class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
R
R1()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the right trigger 1 button's digital signal.
R1()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the right trigger 1 button's digital signal.
R1(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the right trigger 1 button's digital signal.
R1(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the right trigger 1 button's digital signal.
R1(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the right trigger 1 button's digital signal.
R1(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the right trigger 1 button's digital signal.
R2()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the right trigger 2 button's digital signal.
R2()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the right trigger 2 button's digital signal.
R2(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the right trigger 2 button's digital signal.
R2(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the right trigger 2 button's digital signal.
R2(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the right trigger 2 button's digital signal.
R2(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the right trigger 2 button's digital signal.
R3()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the R3 (right stick) button's digital signal.
R3()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the R3 (right stick) button's digital signal.
R3(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the R3 (right stick) button's digital signal.
R3(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the R3 (right stick) button's digital signal.
R3(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the R3 (right stick) button's digital signal.
R3(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the R3 (right stick) button's digital signal.
race(Command...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs a group of commands at the same time.
raceWith(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a set of commands to run parallel to it, ending when the first
 command ends.
Radian
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of angle, represented by the distance that the radius of a unit circle can
 wrap around its circumference.
Radians
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of angle, represented by the distance that the radius of a unit circle can
 wrap around its circumference.
RadiansPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of angular velocity, equivalent to spinning at a rate of one
Radian
per
Units.Second
.
RadiansPerSecondPerSecond
- Static variable in class edu.wpi.first.units.
Units
The standard SI unit of angular acceleration, equivalent to accelerating at a rate of one
Radian
per
Units.Second
every second.
radiansPerSecondToRotationsPerMinute(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts radians per second to rotations per minute.
radiansToDegrees(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given radians to degrees.
radiansToRotations(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given radians to rotations.
RADIO_LED_STATE_GREEN
- Static variable in class edu.wpi.first.hal.
LEDJNI
LED Green state.
RADIO_LED_STATE_OFF
- Static variable in class edu.wpi.first.hal.
LEDJNI
LED Off state.
RADIO_LED_STATE_ORANGE
- Static variable in class edu.wpi.first.hal.
LEDJNI
LED Orange state.
RADIO_LED_STATE_RED
- Static variable in class edu.wpi.first.hal.
LEDJNI
LED Red state.
rainbow(int, int)
- Static method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates an LED pattern that displays a rainbow across the color wheel.
RamseteCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that uses a RAMSETE controller (
RamseteController
) to follow a trajectory
Trajectory
with a differential drive.
RamseteCommand(Trajectory, Supplier<Pose2d>, RamseteController, SimpleMotorFeedforward, DifferentialDriveKinematics, Supplier<DifferentialDriveWheelSpeeds>, PIDController, PIDController, BiConsumer<Double, Double>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
RamseteCommand
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
RamseteCommand(Trajectory, Supplier<Pose2d>, RamseteController, DifferentialDriveKinematics, BiConsumer<Double, Double>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
RamseteCommand
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
RamseteController
- Class in
edu.wpi.first.math.controller
Ramsete is a nonlinear time-varying feedback controller for unicycle models that drives the model
 to a desired pose along a two-dimensional trajectory.
RamseteController()
- Constructor for class edu.wpi.first.math.controller.
RamseteController
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
RamseteController(double, double)
- Constructor for class edu.wpi.first.math.controller.
RamseteController
Deprecated, for removal: This API element is subject to removal in a future version.
Use LTVUnicycleController instead.
rankUpdate(double[], int, double[], double, boolean)
- Static method in class edu.wpi.first.math.jni.
EigenJNI
Performs an inplace rank one update (or downdate) of an upper triangular Cholesky decomposition
 matrix.
rankUpdate(Matrix<R, N1>, double, boolean)
- Method in class edu.wpi.first.math.
Matrix
Performs an inplace Cholesky rank update (or downdate).
RawEntry
- Interface in
edu.wpi.first.networktables
NetworkTables Raw entry.
RawFrame
- Class in
edu.wpi.first.util
Class for storing raw frame data between image read call.
RawFrame()
- Constructor for class edu.wpi.first.util.
RawFrame
Construct a new empty RawFrame.
RawLogEntry
- Class in
edu.wpi.first.util.datalog
Log raw byte array values.
RawLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawLogEntry(DataLog, String, String, String)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawLogEntry(DataLog, String, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
RawLogEntry
Constructs a raw log entry.
RawPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables Raw publisher.
RawSink
- Class in
edu.wpi.first.cscore.raw
A sink for user code to accept video frames as raw bytes.
RawSink(String)
- Constructor for class edu.wpi.first.cscore.raw.
RawSink
Create a sink for accepting raw images.
RawSource
- Class in
edu.wpi.first.cscore.raw
A source for user code to provide video frames as raw bytes.
RawSource(String, VideoMode)
- Constructor for class edu.wpi.first.cscore.raw.
RawSource
Create a raw frame source.
RawSource(String, PixelFormat, int, int, int)
- Constructor for class edu.wpi.first.cscore.raw.
RawSource
Create a raw frame source.
RawSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables Raw subscriber.
RawTopic
- Class in
edu.wpi.first.networktables
NetworkTables Raw topic.
RawTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
RawTopic
Constructor; use NetworkTableInstance.getRawTopic() instead.
RawTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
RawTopic
Construct from a generic topic.
read(boolean, byte[], int)
- Method in class edu.wpi.first.wpilibj.
SPI
Read a word from the receive FIFO.
read(boolean, ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
SPI
Read a word from the receive FIFO.
read(byte[])
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a byte array, creating a new object.
read(byte[])
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a byte array, creating a new object.
read(byte[], int, int)
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a byte array, creating a new object.
read(byte[], int, int)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a byte array, creating a new object.
read(int)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Read raw bytes out of the buffer.
read(int, int, byte[])
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a read transaction with the device.
read(int, int, ByteBuffer)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a read transaction with the device.
read(ByteBuffer)
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a ByteBuffer, creating a new object.
read(ByteBuffer)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a ByteBuffer, creating a new object.
readArray(byte[])
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes an array of values from a byte array, creating an array of new objects.
readArray(byte[], int, int)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes an array of values from a byte array, creating an array of new objects.
readArray(ByteBuffer)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes an array of values from a ByteBuffer, creating an array of new objects.
readAutoReceivedData(int[], int, double)
- Method in class edu.wpi.first.wpilibj.
SPI
Read data that has been transferred by the automatic SPI transfer engine.
readAutoReceivedData(ByteBuffer, int, double)
- Method in class edu.wpi.first.wpilibj.
SPI
Read data that has been transferred by the automatic SPI transfer engine.
readCANPacketLatest(int, int, CANData)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Reads a CAN packet.
readCANPacketNew(int, int, CANData)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Reads a new CAN packet.
readCANPacketTimeout(int, int, int, CANData)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Reads a CAN packet.
readCANStreamSession(int, CANStreamMessage[], int)
- Static method in class edu.wpi.first.hal.can.
CANJNI
Reads messages from a CAN stream session.
readDMA(int, double, int[], int[])
- Static method in class edu.wpi.first.hal.
DMAJNI
Reads a DMA sample from the queue.
readInterruptFallingTimestamp(int)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Returns the timestamp for the falling interrupt that occurred most recently.
readInterruptRisingTimestamp(int)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Returns the timestamp for the rising interrupt that occurred most recently.
readInto(T, byte[])
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a byte array into a mutable object.
readInto(T, byte[])
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a byte array into a mutable object.
readInto(T, byte[], int, int)
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a byte array into a mutable object.
readInto(T, byte[], int, int)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a byte array into a mutable object.
readInto(T, ByteBuffer)
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Deserializes a value from a ByteBuffer into a mutable object.
readInto(T, ByteBuffer)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Deserializes a value from a ByteBuffer into a mutable object.
readListenerQueue(NetworkTableInstance, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns NT events from listener queue.
readOnly(byte[], int)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a read only transaction with the device.
readOnly(ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a read only transaction with the device.
ReadOnlyPrimitiveLongSet
- Class in
edu.wpi.first.units.collections
A read-only set of unique primitive
long
values.
ReadOnlyPrimitiveLongSet(long...)
- Constructor for class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Creates a new set from the given values.
readPacketLatest(int, CANData)
- Method in class edu.wpi.first.wpilibj.
CAN
Read a CAN packet.
readPacketNew(int, CANData)
- Method in class edu.wpi.first.wpilibj.
CAN
Read a new CAN packet.
readPacketTimeout(int, int, CANData)
- Method in class edu.wpi.first.wpilibj.
CAN
Read a CAN packet.
readQueue()
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
GenericSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Read topic notifications.
readQueue()
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get an array of all valid value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get an array of all value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get an array of all valid value changes since the last call to readQueue.
readQueue()
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get an array of all valid value changes since the last call to readQueue.
readQueueBoolean(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueBooleanArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueDouble(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueDoubleArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueFloat(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueFloatArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueInteger(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueIntegerArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueRaw(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueString(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueStringArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued timestamped topic values.
readQueueValue(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued subentry values.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
BooleanArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
BooleanSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
DoubleArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
DoubleSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
FloatArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
FloatSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
IntegerArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
IntegerSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
ProtobufSubscriber
Get an array of all valid value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
RawSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
StringArraySubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
StringSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
StructArraySubscriber
Get an array of all valid value changes since the last call to readQueue.
readQueueValues()
- Method in interface edu.wpi.first.networktables.
StructSubscriber
Get an array of all value changes since the last call to readQueue.
readQueueValuesBoolean(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesBooleanArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesDouble(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesDoubleArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesFloat(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesFloatArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesInteger(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesIntegerArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesRaw(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesString(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readQueueValuesStringArray(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Returns queued topic values.
readString()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Read a string out of the buffer.
readString(int)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Read a string out of the buffer.
rearLeft
- Variable in class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Rear-left wheel speed.
rearLeftMeters
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Distance measured by the rear left wheel.
rearLeftMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Speed of the rear left wheel.
rearLeftVoltage
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Voltage of the rear left motor.
rearRight
- Variable in class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Rear-right wheel speed.
rearRightMeters
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
Distance measured by the rear right wheel.
rearRightMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Speed of the rear right wheel.
rearRightVoltage
- Variable in class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
Voltage of the rear right motor.
receiveErrorCount
- Variable in class edu.wpi.first.hal.can.
CANStatus
The CAN Bus receive error count.
reciprocal()
- Method in interface edu.wpi.first.units.measure.
Per
reciprocal()
- Method in class edu.wpi.first.units.
PerUnit
Returns the reciprocal of this PerUnit.
recordState(SysIdRoutineLog.State)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog
Records the current state of the SysId test routine.
Rectangle2d
- Class in
edu.wpi.first.math.geometry
Represents a 2d rectangular space containing translational, rotational, and scaling components.
Rectangle2d(Pose2d, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Rectangle2d
Constructs a rectangle at the specified position with the specified width and height.
Rectangle2d(Pose2d, Distance, Distance)
- Constructor for class edu.wpi.first.math.geometry.
Rectangle2d
Constructs a rectangle at the specified position with the specified width and height.
Rectangle2d(Translation2d, Translation2d)
- Constructor for class edu.wpi.first.math.geometry.
Rectangle2d
Creates an unrotated rectangle from the given corners.
Rectangle2dProto
- Class in
edu.wpi.first.math.geometry.proto
Rectangle2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
Rectangle2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Rectangle2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
RectangularRegionConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
Enforces a particular constraint only within a rectangular region.
RectangularRegionConstraint(Rectangle2d, TrajectoryConstraint)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
RectangularRegionConstraint
Constructs a new RectangularRegionConstraint.
RectangularRegionConstraint(Translation2d, Translation2d, TrajectoryConstraint)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
RectangularRegionConstraint
Deprecated, for removal: This API element is subject to removal in a future version.
Use constructor taking Rectangle2d instead.
red
- Variable in class edu.wpi.first.wpilibj.util.
Color
Red component (0-1).
red
- Variable in class edu.wpi.first.wpilibj.util.
Color8Bit
Red component (0-255).
Red
- Enum constant in enum class edu.wpi.first.wpilibj.
DriverStation.Alliance
Red alliance.
Red1
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Red 1.
Red2
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Red 2.
Red3
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Red 3.
reenable()
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Reenables this logger after being disabled.
refineEdges
- Variable in class edu.wpi.first.apriltag.
AprilTagDetector.Config
When true, the edges of the each quad are adjusted to "snap to" strong gradients nearby.
reflectionCleanup(Class<? extends ReflectionCleanup>)
- Method in interface edu.wpi.first.util.cleanup.
ReflectionCleanup
Default implementation that uses reflection to find all AutoCloseable fields not marked
 SkipCleanup and call close() on them.
ReflectionCleanup
- Interface in
edu.wpi.first.util.cleanup
Implement this interface to have access to a `reflectionCleanup` method that can be called from
 your `close` method, that will use reflection to find all `AutoCloseable` instance members and
 close them.
refresh()
- Method in class edu.wpi.first.wpilibj.
DSControlWord
Update internal Driver Station control word.
refreshControlWordFromCache(ControlWord)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Refresh the passed in control word to contain the current control word cache.
refreshData()
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Copy data from the DS task for the user.
refreshDSData()
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Refresh the DS control word.
register()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Registers this subsystem with the
CommandScheduler
, allowing its
Subsystem.periodic()
method to be called when the scheduler runs.
register(Object, Runnable)
- Static method in class edu.wpi.first.util.
WPICleaner
Register an object with the cleaner.
register(T)
- Method in class edu.wpi.first.util.cleanup.
CleanupPool
Registers an object in the object stack for cleanup.
registerAccumulatorCenterCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAccumulatorCenterCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the accumulator center.
registerAccumulatorCountCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAccumulatorCountCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the accumulator count.
registerAccumulatorDeadbandCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAccumulatorDeadbandCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the accumulator deadband.
registerAccumulatorInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAccumulatorInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on whether the accumulator is initialized.
registerAccumulatorValueCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAccumulatorValueCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the accumulator value.
registerActiveCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
Register a callback to be run when this accelerometer activates.
registerActiveCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
registerActiveCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Register a callback to be run when this accelerometer activates.
registerActiveCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Register a callback to be run when this accelerometer activates.
registerAllCallbacks(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerAllianceStationIdCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerAllianceStationIdCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on the alliance station ID.
registerAllNonSolenoidCallbacks(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerAllNonSolenoidCallbacks(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerAllSolenoidCallbacks(int, int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerAllSolenoidCallbacks(int, int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerAngleCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
registerAngleCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Register a callback on the angle.
registerAutonomousCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerAutonomousCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on whether the DS is in autonomous mode.
registerAverageBitsCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerAverageBitsCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the number of average bits.
registerBrownoutVoltageCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerBrownoutVoltageCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the Brownout voltage changes.
registerClosedLoopEnabledCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerClosedLoopEnabledCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Register a callback to be run whenever the closed loop state changes.
registerComposedCommands(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Register commands as composed.
registerCompressorConfigTypeCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerCompressorConfigTypeCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
Register a callback to be run whenever the closed loop state changes.
registerCompressorCurrentCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerCompressorCurrentCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerCompressorCurrentCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
registerCompressorCurrentCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Register a callback to be run whenever the compressor current changes.
registerCompressorCurrentCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
registerCompressorOnCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerCompressorOnCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerCompressorOnCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
registerCompressorOnCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Register a callback to be run when the compressor activates.
registerCompressorOnCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
registerCountCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerCountCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the count property of the encoder.
registerCPUTempCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerCPUTempCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the cpu temp changes.
registerCurrentCallback(int, int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
registerCurrentCallback(int, NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Register a callback to be run whenever the current of a specific channel changes.
registerDataCallback(int, ConstBufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
registerDataCallback(ConstBufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Register a callback on the LED data.
registerDeviceCreatedCallback(String, SimDeviceCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Register a callback to be run every time a new
SimDevice
is created.
registerDeviceFreedCallback(String, SimDeviceCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Register a callback to be run every time a
SimDevice
is
 freed/destroyed.
registerDirectionCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerDirectionCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the direction of the encoder.
registerDistancePerPulseCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerDistancePerPulseCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the distance per pulse value of this encoder.
registerDsAttachedCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerDsAttachedCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on whether the DS is connected.
registerDutyCycleCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
registerDutyCycleCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Register a callback to be run whenever the duty cycle value changes.
registerEnabledCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerEnabledCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on whether the DS is enabled.
registerEStopCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerEStopCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on the eStop state.
registerFilterIndexCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
registerFilterIndexCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Register a callback to be run whenever the filter index changes.
registerFmsAttachedCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerFmsAttachedCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on whether the FMS is connected.
registerForwardCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
registerForwardCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Register a callback to be run when the forward direction changes state.
registerFPGAButtonCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerFPGAButtonCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run when the FPGA button state changes.
registerFrequencyCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
registerFrequencyCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Register a callback to be run whenever the frequency changes.
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerInitializedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Register a callback on the Initialized property.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Register a callback on whether the gyro is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on whether the analog input is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Register a callback to be run when this analog output is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Register a callback on whether the analog trigger is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Register a callback to be run when this PWM output is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Register a callback to be run when this DIO is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Register a callback to be run when this duty cycle input is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the Initialized property of the encoder.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Register a callback to be run when this I2C device is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Register a callback to be run when the PDP is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Register a callback to be run when the PCM/PH is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM is initialized.
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
registerInitializedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Register a callback to be run when this device is initialized.
registerInitializedForwardCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
registerInitializedForwardCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Register a callback to be run when the forward direction is initialized.
registerInitializedReverseCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
registerInitializedReverseCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Register a callback to be run when the reverse direction is initialized.
registerIsInputCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
registerIsInputCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Register a callback to be run whenever this DIO changes to be an input.
registerLengthCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
registerLengthCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Register a callback on the length.
registerMatchTimeCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerMatchTimeCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on match time.
registerMaxPeriodCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerMaxPeriodCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback to be run whenever the max period of the encoder is changed.
registerOutputCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
registerOutputCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Register a callback to be run whenever the output changes.
registerOutputCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Register a callback to be run when the output of this solenoid has changed.
registerOutputPortCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
registerOutputPortCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Register a callback on the output port.
registerOversampleBitsCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerOversampleBitsCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the amount of oversampling bits.
registerPeriodCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerPeriodCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the period of the encoder.
registerPeriodScaleCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerPeriodScaleCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM period scale changes.
registerPinCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
registerPinCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Register a callback to be run whenever the pin changes.
registerPositionCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerPositionCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM position changes.
registerPressureSwitchCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerPressureSwitchCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerPressureSwitchCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
registerPressureSwitchCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Register a callback to be run whenever the pressure switch value changes.
registerPressureSwitchCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
registerPulseLengthCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
registerPulseLengthCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Register a callback to be run whenever the pulse length changes.
registerPulseMicrosecondCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerPulseMicrosecondCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM raw value changes.
registerRadioLEDStateCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerRadioLEDStateCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the Radio led state changes.
registerRangeCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
registerRangeCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
registerRangeCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Register a callback to be run whenever the range changes.
registerRangeCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Register a callback to be run whenever the range changes.
registerRateCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
registerRateCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Register a callback on the rate.
registerReadAutoReceiveBufferCallback(int, SpiReadAutoReceiveBufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
registerReadAutoReceiveBufferCallback(SpiReadAutoReceiveBufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Register a callback to be run whenever an auto receive buffer is received.
registerReadCallback(int, BufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
registerReadCallback(int, BufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
registerReadCallback(BufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Register a callback to be run whenever a `read` operation is done.
registerReadCallback(BufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Register a callback to be run whenever a `read` operation is executed.
registerResetCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerResetCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback to be called whenever the encoder is reset.
registerReverseCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
registerReverseCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Register a callback to be run when the reverse direction changes state.
registerReverseDirectionCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerReverseDirectionCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the reverse direction.
registerRunningCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
registerRunningCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Register a callback on whether the LEDs are running.
registerSamplesToAverageCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
registerSamplesToAverageCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Register a callback on the samples-to-average value of this encoder.
registerSimDeviceCreatedCallback(String, SimDeviceCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
registerSimDeviceFreedCallback(String, SimDeviceCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
registerSimPeriodicAfterCallback(Runnable)
- Static method in class edu.wpi.first.hal.
HAL
Registers a callback to be run by IterativeRobotBase after the user's simulationPeriodic code.
registerSimPeriodicBeforeCallback(Runnable)
- Static method in class edu.wpi.first.hal.
HAL
Registers a callback to be run by IterativeRobotBase prior to the user's simulationPeriodic
 code.
registerSimValueChangedCallback(int, SimValueCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
registerSimValueCreatedCallback(int, SimValueCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
registerSimValueResetCallback(int, SimValueCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
Register a callback for SimDeviceJNI.resetSimValue().
registerSolenoidOutputCallback(int, int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
registerSolenoidOutputCallback(int, int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
registerSolenoidOutputCallback(int, NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
registerSolenoidOutputCallback(int, NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Register a callback to be run when the solenoid output on a channel changes.
registerSolenoidOutputCallback(int, NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
registerSpeedCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerSpeedCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM speed changes.
registerSubsystem(Subsystem...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Registers subsystems with the scheduler.
registerTeamNumberCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerTeamNumberCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the team number changes.
registerTemperatureCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
registerTemperatureCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Register a callback to be run whenever the PDP temperature changes.
registerTestCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
registerTestCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Register a callback on whether the DS is in test mode.
registerTriggerLowerBoundCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
registerTriggerLowerBoundCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Register a callback on the lower bound.
registerTriggerUpperBoundCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
registerTriggerUpperBoundCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Register a callback on the upper bound.
registerUserActive3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserActive3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 3.3V rail active state changes.
registerUserActive5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserActive5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 5V rail active state changes.
registerUserActive6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserActive6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 6V rail active state changes.
registerUserCurrent3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserCurrent3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 3.3V rail current changes.
registerUserCurrent5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserCurrent5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 5V rail current changes.
registerUserCurrent6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserCurrent6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 6V rail current changes.
registerUserFaults3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserFaults3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 3.3V rail number of faults changes.
registerUserFaults5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserFaults5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 5V rail number of faults changes.
registerUserFaults6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserFaults6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 6V rail number of faults changes.
registerUserVoltage3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserVoltage3V3Callback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 3.3V rail voltage changes.
registerUserVoltage5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserVoltage5VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 5V rail voltage changes.
registerUserVoltage6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerUserVoltage6VCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the 6V rail voltage changes.
registerValueCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
registerValueCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Register a callback to be run whenever the DIO value changes.
registerValueChangedCallback(SimValue, SimValueCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Register a callback to be run every time a value is changed on this device.
registerValueCreatedCallback(SimValueCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Register a callback to be run every time a new value is added to this device.
registerValueResetCallback(SimValue, SimValueCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Register a callback for SimDouble.reset() and similar functions.
registerVInCurrentCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerVInCurrentCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the Vin current changes.
registerVInVoltageCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
registerVInVoltageCallback(NotifyCallback, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Register a callback to be run whenever the Vin voltage changes.
registerVoltageCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
registerVoltageCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
registerVoltageCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
registerVoltageCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Register a callback on the voltage.
registerVoltageCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Register a callback to be run whenever the voltage changes.
registerVoltageCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Register a callback to be run whenever the PDP voltage changes.
registerWriteCallback(int, ConstBufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
registerWriteCallback(int, ConstBufferCallback)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
registerWriteCallback(ConstBufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Register a callback to be run whenever a `write` operation is done.
registerWriteCallback(ConstBufferCallback)
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Register a callback to be run whenever a `write` operation is executed.
registerXCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
registerXCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
registerXCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Register a callback to be run whenever the X axis value changes.
registerXCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Register a callback to be run whenever the X axis value changes.
registerYCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
registerYCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
registerYCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Register a callback to be run whenever the Y axis value changes.
registerYCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Register a callback to be run whenever the Y axis value changes.
registerZCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
registerZCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
registerZCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Register a callback to be run whenever the Z axis value changes.
registerZCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Register a callback to be run whenever the Z axis value changes.
registerZeroLatchCallback(int, NotifyCallback, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
registerZeroLatchCallback(NotifyCallback, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Register a callback to be run when the PWM zero latch state changes.
relativeTo(Pose2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns the current pose relative to the given pose.
relativeTo(Pose2d)
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Transforms all poses in the trajectory so that they are relative to the given pose.
relativeTo(Pose3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns the current pose relative to the given pose.
Relay
- Class in
edu.wpi.first.wpilibj
Class for VEX Robotics Spike style relay outputs.
Relay(int)
- Constructor for class edu.wpi.first.wpilibj.
Relay
Relay constructor given a channel, allowing both directions.
Relay(int, Relay.Direction)
- Constructor for class edu.wpi.first.wpilibj.
Relay
Relay constructor given a channel.
Relay.Direction
- Enum Class in
edu.wpi.first.wpilibj
The Direction(s) that a relay is configured to operate in.
Relay.InvalidValueException
- Exception in
edu.wpi.first.wpilibj
This class represents errors in trying to set relay values contradictory to the direction to
 which the relay is set.
Relay.Value
- Enum Class in
edu.wpi.first.wpilibj
The state to drive a Relay to.
RelayDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for relay data.
RelayJNI
- Class in
edu.wpi.first.hal
Relay Output HAL JNI Functions.
RelaySim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated relay.
RelaySim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
RelaySim
Constructs from a relay channel number.
RelaySim(Relay)
- Constructor for class edu.wpi.first.wpilibj.simulation.
RelaySim
Constructs from a Relay object.
release()
- Method in class edu.wpi.first.util.concurrent.
Semaphore
Releases 1 count of the semaphore.
release(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Releases pubsub entry.
release(int)
- Method in class edu.wpi.first.util.concurrent.
Semaphore
Releases N counts of the semaphore.
releaseEntry(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Releases NT entry.
releaseSemaphore(int, int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Releases N counts of a semaphore.
releaseSink(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Releases sink.
releaseSource(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Releases source.
releaseWaitingInterrupt(int)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Releases a waiting interrupt.
remote_id
- Variable in class edu.wpi.first.networktables.
ConnectionInfo
The remote identifier (as set on the remote node by
NetworkTableInstance.startClient4(String)
).
remote_ip
- Variable in class edu.wpi.first.networktables.
ConnectionInfo
The IP address of the remote node.
remote_port
- Variable in class edu.wpi.first.networktables.
ConnectionInfo
The port number of the remote node.
remove(int)
- Static method in class edu.wpi.first.net.
PortForwarder
Stop TCP forwarding on a port.
remove(int)
- Method in class edu.wpi.first.util.
EventVector
Removes an event from the event vector.
remove(long)
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Removes the value associated with the given key and returns it.
remove(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Removes an object from the registry.
remove(Counter)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Removes this filter from the given Counter.
remove(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Removes this filter from the given digital input.
remove(Encoder)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Removes this filter from the given Encoder.
remove(AutoCloseable)
- Method in class edu.wpi.first.util.cleanup.
CleanupPool
Removes an object from the cleanup stack.
remove(String)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Remove a preference.
removeAll()
- Static method in class edu.wpi.first.wpilibj.
Preferences
Remove all preferences.
removeCamera(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Removes a camera by name.
removeComposedCommand(Command)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Removes a single command from the list of composed commands, allowing it to be freely used
 again.
removeDefaultCommand()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Removes the default command for the subsystem.
removeDefaultCommand(Subsystem)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Removes the default command for a subsystem.
removeFamily(long, String)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Removes a family of tags from the detector.
removeFamily(String)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Removes a family of tags from the detector.
removeFirst()
- Method in class edu.wpi.first.util.
CircularBuffer
Pop value at front of buffer.
removeFirst()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Pop value at front of buffer.
removeLast()
- Method in class edu.wpi.first.util.
CircularBuffer
Pop value at back of buffer.
removeLast()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Pop value at back of buffer.
removeListener(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Removes listener.
removeListener(int)
- Method in class edu.wpi.first.networktables.
NetworkTable
Remove a listener.
removeListener(int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Remove a connection listener.
removeListener(int)
- Method in class edu.wpi.first.networktables.
NetworkTableListenerPoller
Remove a listener.
removeListener(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Removes listener.
removeNewDataEventHandle(int)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Removes the event handle from being signalled when new data arrives.
removePortForwarder(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Stop TCP forwarding on a port.
removeRefreshedDataEventHandle(int)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Unregisters the given handle from DS data refresh notifications.
removeServer(String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Removes a server by name.
RepeatCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that runs another command repeatedly, restarting it when it ends, until this command is
 interrupted.
RepeatCommand(Command)
- Constructor for class edu.wpi.first.wpilibj2.command.
RepeatCommand
Creates a new RepeatCommand.
repeatedly()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to run repeatedly, restarting it when it ends, until this command is
 interrupted.
repeatingSequence(Command...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs a group of commands in series, one after the other.
replayNumber
- Variable in class edu.wpi.first.hal.
MatchInfoData
Stores the replay number.
report(int, int)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Report the usage of a resource of interest.
report(int, int)
- Static method in class edu.wpi.first.hal.
HAL
Report the usage of a resource of interest.
report(int, int, int)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Report the usage of a resource of interest.
report(int, int, int)
- Static method in class edu.wpi.first.hal.
HAL
Report the usage of a resource of interest.
report(int, int, int, String)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Report the usage of a resource of interest.
report(int, int, int, String)
- Static method in class edu.wpi.first.hal.
HAL
Report the usage of a resource of interest.
reportAxisCamera(int)
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
Report an axis camera usage.
reportDriverStationError(String)
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
Report an error to the driver station.
reportError(String, boolean)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Report error to Driver Station.
reportError(String, StackTraceElement[])
- Method in interface edu.wpi.first.math.
MathShared
Report an error.
reportError(String, StackTraceElement[])
- Static method in class edu.wpi.first.math.
MathSharedStore
Report an error.
reportError(String, StackTraceElement[])
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Report error to Driver Station.
reportUsage(MathUsageId, int)
- Method in interface edu.wpi.first.math.
MathShared
Report usage.
reportUsage(MathUsageId, int)
- Static method in class edu.wpi.first.math.
MathSharedStore
Report usage.
reportUsbCamera(int)
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
Report a usb camera usage.
reportVideoServer(int)
- Method in interface edu.wpi.first.cameraserver.
CameraServerShared
Report an video server usage.
reportWarning(String, boolean)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Report warning to Driver Station.
reportWarning(String, StackTraceElement[])
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Report warning to Driver Station.
requestInterrupts(int, int, int)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Requests interrupts on a specific digital source.
requireNonNullParam(T, String, String)
- Static method in class edu.wpi.first.util.
ErrorMessages
Requires that a parameter of a method not be null; prints an error message with helpful
 debugging instructions if the parameter is null.
requireNotComposed(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Requires that the specified command hasn't already been added to a composition.
requireNotComposed(Collection<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Requires that the specified commands have not already been added to a composition.
requireNotComposedOrScheduled(Command)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Requires that the specified command hasn't already been added to a composition, and is not
 currently scheduled.
requireNotComposedOrScheduled(Collection<Command>)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Requires that the specified commands have not already been added to a composition, and are not
 currently scheduled.
requiring(Subsystem)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Returns the command currently requiring a given subsystem.
reserve(int)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Ensures sufficient buffer space is available for the given number of elements.
reserve(int)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Ensures sufficient buffer space is available for the given number of elements.
reserveCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
reserveCompressor()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Reserve the compressor.
reserveCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
reset()
- Method in class edu.wpi.first.epilogue.logging.errors.
LoggerDisabler
Resets all error counts and reenables all loggers.
reset()
- Method in class edu.wpi.first.hal.
SimDouble
Resets the simulated value to 0.
reset()
- Method in class edu.wpi.first.hal.
SimInt
Resets the simulated value to 0.
reset()
- Method in class edu.wpi.first.hal.
SimLong
Resets the simulated value to 0.
reset()
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Resets the feedforward with a zero initial state vector.
reset()
- Method in class edu.wpi.first.math.controller.
ImplicitModelFollower
Resets the controller.
reset()
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Resets the feedforward with a zero initial state vector.
reset()
- Method in class edu.wpi.first.math.controller.
LinearQuadraticRegulator
Resets the controller.
reset()
- Method in class edu.wpi.first.math.controller.
PIDController
Resets the previous error and the integral term.
reset()
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
reset()
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
reset()
- Method in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator
Clears the observer snapshot buffer.
reset()
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Resets the observer.
reset()
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Resets the observer.
reset()
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Resets the observer.
reset()
- Method in class edu.wpi.first.math.filter.
LinearFilter
Reset the filter state.
reset()
- Method in class edu.wpi.first.math.filter.
MedianFilter
Resets the filter, clearing the window of all elements.
reset()
- Method in class edu.wpi.first.util.concurrent.
Event
Sets the event to non-signaled state.
reset()
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Reset the gyro.
reset()
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Reset the gyro.
reset()
- Method in class edu.wpi.first.wpilibj.
ADXRS450_Gyro
Reset the gyro.
reset()
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Reset the gyro.
reset()
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
Resets the current count.
reset()
- Method in class edu.wpi.first.wpilibj.
Counter
Reset the Counter to zero.
reset()
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
Resets the current count.
reset()
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Reset the count to zero.
reset()
- Method in class edu.wpi.first.wpilibj.
Encoder
Reset the Encoder distance to zero.
reset()
- Method in class edu.wpi.first.wpilibj.romi.
RomiGyro
Reset the gyro angles to 0.
reset()
- Method in class edu.wpi.first.wpilibj.
SerialPort
Reset the serial port driver to a known state.
reset()
- Method in class edu.wpi.first.wpilibj.
Timer
Reset the timer by setting the time to 0.
reset()
- Method in class edu.wpi.first.wpilibj.
Watchdog
Resets the watchdog timer.
reset()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPGyro
Reset the gyro angles to 0.
reset(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Reset the previous error and the integral term.
reset(double)
- Method in class edu.wpi.first.math.filter.
SlewRateLimiter
Resets the slew rate limiter to the specified value; ignores the rate limit when doing so.
reset(double[], double[])
- Method in class edu.wpi.first.math.filter.
LinearFilter
Resets the filter state, initializing internal buffers to the provided values.
reset(double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Reset the previous error and the integral term.
reset(Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
ControlAffinePlantInversionFeedforward
Resets the feedforward with a specified initial state vector.
reset(Matrix<States, N1>)
- Method in class edu.wpi.first.math.controller.
LinearPlantInversionFeedforward
Resets the feedforward with a specified initial state vector.
reset(Matrix<States, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Zeroes reference r and controller output u.
reset(TrapezoidProfile.State)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Reset the previous error and the integral term.
resetAccumulator()
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Resets the accumulator to the initial value.
resetAccumulator()
- Method in class edu.wpi.first.wpilibj.
SPI
Resets the accumulator to zero.
resetAccumulator(int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Resets the accumulator to the initial value.
resetAnalogGyro(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Resets the analog gyro value to 0.
resetCounter(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Resets the Counter to zero.
resetData()
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
resetData()
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Reset all simulation data for this LED object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Reset all simulation data for this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Reset all simulation data for this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Reset all simulation data on this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Reset all simulation data for this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Reset all simulation data of this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Reset all simulation data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Reset all simulation data of this object.
resetData()
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Reset all simulation data for the Driver Station.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Reset all simulation data for the duty cycle output.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Resets all simulation data for this encoder.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Reset all I2C simulation data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Reset all PDP simulation data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Reset all simulation data for this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Reset all simulation data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Reset all simulation data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
resetData()
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Reset all simulation data.
resetData()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Reset all SimDevice data.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Reset all simulation data of this object.
resetData()
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Reset all simulation data.
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
resetData(int)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
resetEncoder(int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Reads the current encoder value.
resetEvent(int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Sets an event to non-signaled state.
resetHandles()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
resetHeadings(Rotation2d...)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Reset the internal swerve module headings.
resetPose(Pose2d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Resets the robot's pose.
resetPose(Pose2d)
- Method in class edu.wpi.first.math.kinematics.
Odometry
Resets the pose.
resetPose(Pose3d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Resets the robot's pose.
resetPose(Pose3d)
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Resets the pose.
resetPosition(Rotation2d, double, double, Pose2d)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator
Resets the robot's position on the field.
resetPosition(Rotation2d, double, double, Pose2d)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Resets the robot's position on the field.
resetPosition(Rotation2d, SwerveModulePosition[], Pose2d)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveOdometry
resetPosition(Rotation2d, Distance, Distance, Pose2d)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Resets the robot's position on the field.
resetPosition(Rotation2d, T, Pose2d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Resets the robot's position on the field.
resetPosition(Rotation2d, T, Pose2d)
- Method in class edu.wpi.first.math.kinematics.
Odometry
Resets the robot's position on the field.
resetPosition(Rotation3d, double, double, Pose3d)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator3d
Resets the robot's position on the field.
resetPosition(Rotation3d, double, double, Pose3d)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Resets the robot's position on the field.
resetPosition(Rotation3d, SwerveModulePosition[], Pose3d)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveOdometry3d
resetPosition(Rotation3d, Distance, Distance, Pose3d)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Resets the robot's position on the field.
resetPosition(Rotation3d, T, Pose3d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Resets the robot's position on the field.
resetPosition(Rotation3d, T, Pose3d)
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Resets the robot's position on the field.
resetRailFaultCounts()
- Static method in class edu.wpi.first.wpilibj.
RobotController
Reset the overcurrent fault counters for all user rails to 0.
resetRotation(Rotation2d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Resets the robot's rotation.
resetRotation(Rotation2d)
- Method in class edu.wpi.first.math.kinematics.
Odometry
Resets the rotation of the pose.
resetRotation(Rotation3d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Resets the robot's rotation.
resetRotation(Rotation3d)
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Resets the rotation of the pose.
resetSimDeviceData()
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
resetSimValue(int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Resets a simulated double or integral value to 0.
resetTimer()
- Method in class edu.wpi.first.wpilibj.
Tracer
Restarts the epoch timer.
resetTotalEnergy()
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Reset the total energy to 0 of the PDP.
resetTotalEnergy(int)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Resets the Power Distribution Panel accumulated energy.
resetTranslation(Translation2d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Resets the robot's translation.
resetTranslation(Translation2d)
- Method in class edu.wpi.first.math.kinematics.
Odometry
Resets the translation of the pose.
resetTranslation(Translation3d)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Resets the robot's translation.
resetTranslation(Translation3d)
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Resets the translation of the pose.
resetUserCurrentFaults()
- Static method in class edu.wpi.first.hal.
PowerJNI
Resets the overcurrent fault counters for all user rails to 0.
Resistance
- Interface in
edu.wpi.first.units.measure
ResistanceUnit
- Class in
edu.wpi.first.units
Unit of resistance dimension.
resize(int)
- Method in class edu.wpi.first.util.
CircularBuffer
Resizes internal buffer to given size.
resize(int)
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Resizes internal buffer to given size.
Resource
- Class in
edu.wpi.first.wpilibj
Deprecated, for removal: This API element is subject to removal in a future version.
Will be removed with no replacement.
Resource(int)
- Constructor for class edu.wpi.first.wpilibj.
Resource
Deprecated.
Allocate storage for a new instance of Resource.
restart()
- Method in class edu.wpi.first.wpilibj.
Timer
Restart the timer by stopping the timer, if it is not already stopped, resetting the
 accumulated time, then starting the timer again.
restartProgram()
- Static method in class edu.wpi.first.wpilibj.
Resource
Deprecated.
Clears all allocated resources.
restartTiming()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
restartTiming()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Restart the simulator time.
resume()
- Method in class edu.wpi.first.util.datalog.
DataLog
Resumes appending of data records to the log.
resume()
- Method in class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Resumes appending of data records to the log.
resumeTiming()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
resumeTiming()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Resume the simulator time.
REV_TYPE
- Static variable in class edu.wpi.first.hal.
PowerDistributionJNI
REV Power Distribution Hub (PDH).
reversed()
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
Creates a view that operates on the same range as this one, but goes in reverse order.
reversed()
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that displays this one in reverse.
Revolution
- Static variable in class edu.wpi.first.units.
Units
A single turn of an object around an external axis.
Revolutions
- Static variable in class edu.wpi.first.units.
Units
A single turn of an object around an external axis.
RevolutionsPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of angular velocity equivalent to spinning at a rate of one
Revolution
per
Units.Second
.
REVPH
- Enum constant in enum class edu.wpi.first.wpilibj.
PneumaticsModuleType
REV PH.
REVPHDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for REV PH data.
REVPHFaults
- Class in
edu.wpi.first.hal
Faults for a REV PH.
REVPHFaults(int)
- Constructor for class edu.wpi.first.hal.
REVPHFaults
Called from HAL to construct.
REVPHJNI
- Class in
edu.wpi.first.hal
REV Pneumatic Hub (PH) HAL JNI functions.
REVPHSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated PneumaticHub (PH).
REVPHSim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
REVPHSim
Constructs for the default PH.
REVPHSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
REVPHSim
Constructs from a PH module number (CAN ID).
REVPHSim(PneumaticHub)
- Constructor for class edu.wpi.first.wpilibj.simulation.
REVPHSim
Constructs from a PneumaticHum object.
REVPHStickyFaults
- Class in
edu.wpi.first.hal
Sticky faults for a REV PH.
REVPHStickyFaults(int)
- Constructor for class edu.wpi.first.hal.
REVPHStickyFaults
Called from HAL.
REVPHVersion
- Class in
edu.wpi.first.hal
Version and device data received from a REV PH.
REVPHVersion(int, int, int, int, int, int)
- Constructor for class edu.wpi.first.hal.
REVPHVersion
Constructs a revph version (Called from the HAL).
right
- Variable in class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
Right wheel voltage.
right
- Variable in class edu.wpi.first.wpilibj.drive.
DifferentialDrive.WheelSpeeds
Right wheel speed.
rightBumper()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right bumper button's digital signal.
rightBumper()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the right bumper button's digital signal.
rightBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the right bumper button's digital signal.
rightBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the right bumper button's digital signal.
rightBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right bumper button's digital signal.
rightBumper(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the right bumper button's digital signal.
rightMeters
- Variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
Distance measured by the right side.
rightMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Speed of the right side of the robot.
rightStick()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right stick button's digital signal.
rightStick()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the right stick button's digital signal.
rightStick(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the right stick button's digital signal.
rightStick(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the right stick button's digital signal.
rightStick(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right stick button's digital signal.
rightStick(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the right stick button's digital signal.
rightTrigger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right trigger button's digital signal.
rightTrigger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the right trigger.
rightTrigger(double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the right trigger.
rightTrigger(double, EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the axis value of the right trigger.
rightTrigger(double, EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the axis value of the right trigger.
rightTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the right trigger button's digital signal.
rightTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the axis value of the right trigger.
rightTrigger(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the right trigger button's digital signal.
rising
- Variable in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
True if triggering on rising edge.
rising()
- Method in class edu.wpi.first.wpilibj.event.
BooleanEvent
Creates a new event that triggers when this one changes from false to true.
rk4(BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, Matrix<States, N1>, Matrix<Inputs, N1>, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs 4th order Runge-Kutta integration of dx/dt = f(x, u) for dt.
rk4(BiFunction<Double, Matrix<Rows, Cols>, Matrix<Rows, Cols>>, double, Matrix<Rows, Cols>, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs 4th order Runge-Kutta integration of dx/dt = f(t, y) for dt.
rk4(DoubleBinaryOperator, double, double, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs Runge Kutta integration (4th order).
rk4(DoubleUnaryOperator, double, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs Runge Kutta integration (4th order).
rk4(UnaryOperator<Matrix<States, N1>>, Matrix<States, N1>, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs 4th order Runge-Kutta integration of dx/dt = f(x) for dt.
rkdp(BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, Matrix<States, N1>, Matrix<Inputs, N1>, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs adaptive Dormand-Prince integration of dx/dt = f(x, u) for dt.
rkdp(BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, Matrix<States, N1>, Matrix<Inputs, N1>, double, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs adaptive Dormand-Prince integration of dx/dt = f(x, u) for dt.
rkdp(BiFunction<Double, Matrix<Rows, Cols>, Matrix<Rows, Cols>>, double, Matrix<Rows, Cols>, double, double)
- Static method in class edu.wpi.first.math.system.
NumericalIntegration
Performs adaptive Dormand-Prince integration of dx/dt = f(t, y) for dt.
RoboRioDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for roboRIO data.
RoboRioSim
- Class in
edu.wpi.first.wpilibj.simulation
A utility class to control a simulated RoboRIO.
RobotBase
- Class in
edu.wpi.first.wpilibj
Implement a Robot Program framework.
RobotBase()
- Constructor for class edu.wpi.first.wpilibj.
RobotBase
Constructor for a generic robot program.
RobotController
- Class in
edu.wpi.first.wpilibj
Contains functions for roboRIO functionality.
RobotController.RadioLEDState
- Enum Class in
edu.wpi.first.wpilibj
State for the radio led.
RobotDriveBase
- Class in
edu.wpi.first.wpilibj.drive
Common base class for drive platforms.
RobotDriveBase()
- Constructor for class edu.wpi.first.wpilibj.drive.
RobotDriveBase
RobotDriveBase constructor.
RobotDriveBase.MotorType
- Enum Class in
edu.wpi.first.wpilibj.drive
The location of a motor on the robot for the purpose of driving.
robotInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Robot-wide initialization code should go here.
RobotModeTriggers
- Class in
edu.wpi.first.wpilibj2.command.button
A class containing static
Trigger
factories for running callbacks when the robot mode
 changes.
robotPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic code for all robot modes should go here.
RobotState
- Class in
edu.wpi.first.wpilibj
Robot state utility functions.
rOhms
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Motor internal resistance.
RomiGyro
- Class in
edu.wpi.first.wpilibj.romi
Use a rate gyro to return the robots heading relative to a starting position.
RomiGyro()
- Constructor for class edu.wpi.first.wpilibj.romi.
RomiGyro
Create a new RomiGyro.
RomiMotor
- Class in
edu.wpi.first.wpilibj.romi
RomiMotor.
RomiMotor(int)
- Constructor for class edu.wpi.first.wpilibj.romi.
RomiMotor
Constructor.
root
- Variable in class edu.wpi.first.epilogue.
EpilogueConfiguration
The root identifier to use for all logged data.
rotateAround(Translation2d, Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Rotates the current pose around a point in 2D space.
rotateAround(Translation2d, Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Rotates this translation around another translation in 2D space.
rotateAround(Translation3d, Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Rotates the current pose around a point in 3D space.
rotateAround(Translation3d, Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Rotates this translation around another translation in 3D space.
rotateBy(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Rotates the center of the ellipse and returns the new ellipse.
rotateBy(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Rotates the pose around the origin and returns the new pose.
rotateBy(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Rotates the center of the rectangle and returns the new rectangle.
rotateBy(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Adds the new rotation to the current rotation using a rotation matrix.
rotateBy(Rotation2d)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Applies a rotation to the translation in 2D space.
rotateBy(Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Rotates the pose around the origin and returns the new pose.
rotateBy(Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Adds the new rotation to the current rotation.
rotateBy(Rotation3d)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Applies a rotation to the translation in 3D space.
Rotation
- Static variable in class edu.wpi.first.units.
Units
A single turn of an object around an internal axis.
Rotation2d
- Class in
edu.wpi.first.math.geometry
A rotation in a 2D coordinate frame represented by a point on the unit circle (cosine and sine).
Rotation2d()
- Constructor for class edu.wpi.first.math.geometry.
Rotation2d
Constructs a Rotation2d with a default angle of 0 degrees.
Rotation2d(double)
- Constructor for class edu.wpi.first.math.geometry.
Rotation2d
Constructs a Rotation2d with the given radian value.
Rotation2d(double, double)
- Constructor for class edu.wpi.first.math.geometry.
Rotation2d
Constructs a Rotation2d with the given x and y (cosine and sine) components.
Rotation2d(Matrix<N2, N2>)
- Constructor for class edu.wpi.first.math.geometry.
Rotation2d
Constructs a Rotation2d from a rotation matrix.
Rotation2d(Angle)
- Constructor for class edu.wpi.first.math.geometry.
Rotation2d
Constructs a Rotation2d with the given angle.
Rotation2dProto
- Class in
edu.wpi.first.math.geometry.proto
Rotation2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Rotation2dProto
Rotation2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Rotation2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
Rotation3d
- Class in
edu.wpi.first.math.geometry
A rotation in a 3D coordinate frame represented by a quaternion.
Rotation3d()
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d representing no rotation.
Rotation3d(double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d from extrinsic roll, pitch, and yaw.
Rotation3d(Quaternion)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d from a quaternion.
Rotation3d(Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a 3D rotation from a 2D rotation in the X-Y plane.
Rotation3d(Matrix<N3, N3>)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d from a rotation matrix.
Rotation3d(Vector<N3>)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d with the given rotation vector representation.
Rotation3d(Vector<N3>, double)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d with the given axis-angle representation.
Rotation3d(Vector<N3>, Vector<N3>)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d that rotates the initial vector onto the final vector.
Rotation3d(Vector<N3>, Angle)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d with the given axis-angle representation.
Rotation3d(Angle, Angle, Angle)
- Constructor for class edu.wpi.first.math.geometry.
Rotation3d
Constructs a Rotation3d from extrinsic roll, pitch, and yaw.
Rotation3dProto
- Class in
edu.wpi.first.math.geometry.proto
Rotation3dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Rotation3dProto
Rotation3dStruct
- Class in
edu.wpi.first.math.geometry.struct
Rotation3dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
Rotations
- Static variable in class edu.wpi.first.units.
Units
A single turn of an object around an internal axis.
rotationsPerMinuteToRadiansPerSecond(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts rotations per minute to radians per second.
RotationsPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of angular velocity equivalent to spinning at a rate of one
Rotation
per
Units.Second
.
RotationsPerSecondPerSecond
- Static variable in class edu.wpi.first.units.
Units
A unit of angular acceleration equivalent to accelerating at a rate of one
Rotation
per
Units.Second
every second.
rotationsToDegrees(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given rotations to degrees.
rotationsToRadians(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given rotations to radians.
RPM
- Static variable in class edu.wpi.first.units.
Units
A unit of angular velocity equivalent to spinning at a rate of one
Rotation
per
Units.Minute
.
rtt2
- Variable in class edu.wpi.first.networktables.
TimeSyncEventData
Measured round trip time divided by 2, in microseconds.
run()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Runs a single iteration of the scheduler.
run(Runnable)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a command that runs an action every iteration until interrupted.
run(Runnable, Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that runs an action every iteration until interrupted.
RunCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that runs a Runnable continuously.
RunCommand(Runnable, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
RunCommand
Creates a new RunCommand.
runEnd(Runnable, Runnable)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a command that runs an action every iteration until interrupted, and then runs a
 second action.
runEnd(Runnable, Runnable, Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that runs an action every iteration until interrupted, and then runs a
 second action.
runForever()
- Method in class edu.wpi.first.vision.
VisionRunner
A convenience method that calls
VisionRunner.runOnce()
in an infinite loop.
runMain()
- Static method in class edu.wpi.first.hal.
HAL
Runs the main function provided to HAL_SetMain().
runMainRunLoop()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Runs main run loop.
runMainRunLoopTimeout(double)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Runs main run loop with timeout.
runOnce()
- Method in class edu.wpi.first.vision.
VisionRunner
Runs the pipeline one time, giving it the next image from the video source specified in the
 constructor.
runOnce(Runnable)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a command that runs an action once and finishes.
runOnce(Runnable, Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that runs an action once and finishes.
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Whether the given command should run when the robot is disabled.
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ConditionalCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelCommandGroup
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ParallelRaceGroup
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
PrintCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ProxyCommand
Whether the given command should run when the robot is disabled.
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
RepeatCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
ScheduleCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
SelectCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
WaitCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
WaitUntilCommand
runsWhenDisabled()
- Method in class edu.wpi.first.wpilibj2.command.
WrapperCommand
Whether the given command should run when the robot is disabled.
RUNTIME_ROBORIO
- Static variable in class edu.wpi.first.hal.
HALUtil
roboRIO 1.0.
RUNTIME_ROBORIO2
- Static variable in class edu.wpi.first.hal.
HALUtil
roboRIO 2.0.
RUNTIME_SIMULATION
- Static variable in class edu.wpi.first.hal.
HALUtil
Simulation runtime.
RuntimeDetector
- Class in
edu.wpi.first.util
Deprecated, for removal: This API element is subject to removal in a future version.
platform detection is brittle and may be removed in the future.
RuntimeLoader
- Class in
edu.wpi.first.util
Loads a native library at runtime.
RuntimeType
- Enum Class in
edu.wpi.first.wpilibj
Runtime type.
rx
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Rotation vector x component (radians).
ry
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Rotation vector y component (radians).
rz
- Variable in class edu.wpi.first.math.geometry.
Twist3d
Rotation vector z component (radians).
S
S()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to -X in the NWU coordinate system.
sample(double)
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Sample the trajectory at a point in time.
SAMPLE_RATE_TOO_HIGH
- Static variable in class edu.wpi.first.hal.
HALUtil
Analog module sample rate is too high.
sampleAt(double)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Return the pose at a given timestamp, if the buffer is not empty.
sampleAt(double)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Return the pose at a given timestamp, if the buffer is not empty.
scan()
- Method in class edu.wpi.first.util.struct.parser.
Lexer
Gets the next token.
schedule()
- Method in class edu.wpi.first.wpilibj2.command.
Command
Schedules this command.
schedule(Command...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Schedules multiple commands for execution.
schedule(Runnable, double)
- Method in class edu.wpi.first.wpilibj.
TimesliceRobot
Schedule a periodic function with the constructor's controller period and the given allocation.
ScheduleCommand
- Class in
edu.wpi.first.wpilibj2.command
Schedules the given commands when this command is initialized.
ScheduleCommand(Command...)
- Constructor for class edu.wpi.first.wpilibj2.command.
ScheduleCommand
Creates a new ScheduleCommand that schedules the given commands when initialized.
SchemaBuilder()
- Constructor for class edu.wpi.first.util.struct.
StructGenerator.SchemaBuilder
Creates a new schema builder.
scrollAtAbsoluteSpeed(LinearVelocity, Distance)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that plays this one scrolling up an LED strip.
scrollAtRelativeSpeed(Frequency)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that plays this one scrolling up the buffer.
SD540
- Class in
edu.wpi.first.wpilibj.motorcontrol
Mindsensors SD540 Motor Controller.
SD540(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
SD540
Constructor.
Second
- Static variable in class edu.wpi.first.units.
Units
Alias for
Units.Seconds
to make combined unit definitions read more smoothly.
Seconds
- Static variable in class edu.wpi.first.units.
Units
The base unit of time.
secondsToMilliseconds(double)
- Static method in class edu.wpi.first.math.util.
Units
Converts given seconds to milliseconds.
select(Map<K, Command>, Supplier<? extends K>)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs one of several commands, based on the selector function.
SelectCommand
<
K
> - Class in
edu.wpi.first.wpilibj2.command
A command composition that runs one of a selection of commands using a selector and a key to
 command mapping.
SelectCommand(Map<K, Command>, Supplier<? extends K>)
- Constructor for class edu.wpi.first.wpilibj2.command.
SelectCommand
Creates a new SelectCommand.
selectTab(int)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Selects the tab in the dashboard with the given index in the range [0..n-1], where
n
is
 the number of tabs in the dashboard at the time this method is called.
selectTab(String)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Selects the tab in the dashboard with the given title.
Semaphore
- Class in
edu.wpi.first.util.concurrent
A semaphore for synchronization.
Semaphore()
- Constructor for class edu.wpi.first.util.concurrent.
Semaphore
Constructor.
Semaphore(int)
- Constructor for class edu.wpi.first.util.concurrent.
Semaphore
Constructor.
Semaphore(int, int)
- Constructor for class edu.wpi.first.util.concurrent.
Semaphore
Constructor.
SEMI_PERIOD
- Static variable in class edu.wpi.first.hal.
CounterJNI
Semi-period mode.
sendable
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Sendable object.
Sendable
- Interface in
edu.wpi.first.util.sendable
The base interface for objects that can be sent over the network.
SendableBuilder
- Interface in
edu.wpi.first.util.sendable
Helper class for building Sendable dashboard representations.
SendableBuilder.BackendKind
- Enum Class in
edu.wpi.first.util.sendable
The backend kinds used for the sendable builder.
SendableBuilderImpl
- Class in
edu.wpi.first.wpilibj.smartdashboard
Implementation detail for SendableBuilder.
SendableBuilderImpl()
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Default constructor.
SendableCameraWrapper
- Class in
edu.wpi.first.wpilibj.shuffleboard
A wrapper to make video sources sendable and usable from Shuffleboard.
SendableChooser
<
V
> - Class in
edu.wpi.first.wpilibj.smartdashboard
The
SendableChooser
class is a useful tool for presenting a selection of options to the
SmartDashboard
.
SendableChooser()
- Constructor for class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
Instantiates a
SendableChooser
.
SendableChooserSim
- Class in
edu.wpi.first.wpilibj.simulation
Class that facilitates control of a SendableChooser's selected option in simulation.
SendableChooserSim(NetworkTableInstance, String)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SendableChooserSim
Constructs a SendableChooserSim.
SendableChooserSim(String)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SendableChooserSim
Constructs a SendableChooserSim.
SendableRegistry
- Class in
edu.wpi.first.util.sendable
The SendableRegistry class is the public interface for registering sensors and actuators for use
 on dashboards and LiveWindow.
SendableRegistry.CallbackData
- Class in
edu.wpi.first.util.sendable
Data passed to foreachLiveWindow() callback function.
sendAll
- Variable in class edu.wpi.first.networktables.
PubSubOptions
Send all value changes over the network.
sendAll(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
If enabled, sends all value changes over the network.
sendConsoleLine(String)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sends a line to the driver station console.
sendError(boolean, int, boolean, String, String, String, boolean)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Sends an error to the driver station.
SensorUtil
- Class in
edu.wpi.first.wpilibj
Stores most recent status information as well as containing utility functions for checking
 channels and error processing.
sequence(Command...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Runs a group of commands in series, one after the other.
SequentialCommandGroup
- Class in
edu.wpi.first.wpilibj2.command
A command composition that runs a list of commands in sequence.
SequentialCommandGroup(Command...)
- Constructor for class edu.wpi.first.wpilibj2.command.
SequentialCommandGroup
Creates a new SequentialCommandGroup.
serialClear(int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Clears the receive buffer of the serial port.
serialClose(int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Closes a serial port.
serialDisableTermination(int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Disables a termination character for reads.
serialEnableTermination(int, char)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the termination character that terminates a read.
serialFlush(int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Flushes the serial write buffer out to the port.
serialGetBytesReceived(int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Gets the number of bytes currently in the read buffer.
serialInitializePort(byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Initializes a serial port.
serialInitializePortDirect(byte, String)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Initializes a serial port with a direct name.
serialize(String)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Serializes a AprilTagFieldLayout to a JSON file.
serialize(Path)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Serializes a AprilTagFieldLayout to a JSON file.
serializeTrajectory(double[])
- Static method in class edu.wpi.first.math.jni.
TrajectoryUtilJNI
Serializes the trajectory into a JSON string.
serializeTrajectory(Trajectory)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryUtil
Serializes a Trajectory to PathWeaver-style JSON.
SerialPort
- Class in
edu.wpi.first.wpilibj
Driver for the serial ports (USB, MXP, Onboard) on the roboRIO.
SerialPort(int, SerialPort.Port)
- Constructor for class edu.wpi.first.wpilibj.
SerialPort
Create an instance of a Serial Port class.
SerialPort(int, SerialPort.Port, int)
- Constructor for class edu.wpi.first.wpilibj.
SerialPort
Create an instance of a Serial Port class.
SerialPort(int, SerialPort.Port, int, SerialPort.Parity)
- Constructor for class edu.wpi.first.wpilibj.
SerialPort
Create an instance of a Serial Port class.
SerialPort(int, SerialPort.Port, int, SerialPort.Parity, SerialPort.StopBits)
- Constructor for class edu.wpi.first.wpilibj.
SerialPort
Create an instance of a Serial Port class.
SerialPort.FlowControl
- Enum Class in
edu.wpi.first.wpilibj
Represents what type of flow control to use for serial communication.
SerialPort.Parity
- Enum Class in
edu.wpi.first.wpilibj
Represents the parity to use for serial communications.
SerialPort.Port
- Enum Class in
edu.wpi.first.wpilibj
Serial port.
SerialPort.StopBits
- Enum Class in
edu.wpi.first.wpilibj
Represents the number of stop bits to use for Serial Communication.
SerialPort.WriteBufferMode
- Enum Class in
edu.wpi.first.wpilibj
Represents which type of buffer mode to use when writing to a serial port.
SerialPortJNI
- Class in
edu.wpi.first.hal
Serial Port JNI HAL functions.
serialRead(int, byte[], int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Reads data from the serial port.
serialSetBaudRate(int, int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the baud rate of a serial port.
serialSetDataBits(int, byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the number of data bits on a serial port.
serialSetFlowControl(int, byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the flow control mode of a serial port.
serialSetParity(int, byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the number of parity bits on a serial port.
serialSetReadBufferSize(int, int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the size of the read buffer.
serialSetStopBits(int, byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the number of stop bits on a serial port.
serialSetTimeout(int, double)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the minimum serial read timeout of a port.
serialSetWriteBufferSize(int, int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the size of the write buffer.
serialSetWriteMode(int, byte)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Sets the write mode on a serial port.
serialWrite(int, byte[], int)
- Static method in class edu.wpi.first.hal.
SerialPortJNI
Writes data to the serial port.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedBoolean
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedBooleanArray
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedDouble
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedDoubleArray
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedFloat
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedFloatArray
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedInteger
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedIntegerArray
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedObject
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedRaw
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedString
Timestamp in server time base.
serverTime
- Variable in class edu.wpi.first.networktables.
TimestampedStringArray
Timestamp in server time base.
serverTimeOffset
- Variable in class edu.wpi.first.networktables.
TimeSyncEventData
Offset between local time and server time, in microseconds.
ServiceData
- Class in
edu.wpi.first.net
Service data for MulticastServiceResolver.
ServiceData(long, int, String, String, String[], String[])
- Constructor for class edu.wpi.first.net.
ServiceData
Constructs a ServiceData.
Servo
- Class in
edu.wpi.first.wpilibj
Standard hobby style servo.
Servo(int)
- Constructor for class edu.wpi.first.wpilibj.
Servo
Constructor.
set()
- Method in class edu.wpi.first.util.concurrent.
Event
Sets the event to signaled state.
set(boolean)
- Method in class edu.wpi.first.hal.
SimBoolean
Sets the simulated value.
set(boolean)
- Method in interface edu.wpi.first.networktables.
BooleanPublisher
Publish a new value using current NT time.
set(boolean)
- Method in class edu.wpi.first.wpilibj.
Alert
Sets whether the alert should currently be displayed.
set(boolean)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Set the value of a digital output.
set(boolean)
- Method in class edu.wpi.first.wpilibj.
Solenoid
Set the value of a solenoid.
set(boolean[])
- Method in interface edu.wpi.first.networktables.
BooleanArrayPublisher
Publish a new value using current NT time.
set(boolean[], long)
- Method in interface edu.wpi.first.networktables.
BooleanArrayPublisher
Publish a new value.
set(boolean, long)
- Method in interface edu.wpi.first.networktables.
BooleanPublisher
Publish a new value.
set(byte[])
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value using current NT time.
set(byte[], int, int)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value using current NT time.
set(byte[], int, int, long)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value.
set(byte[], long)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value.
set(double)
- Method in class edu.wpi.first.hal.
SimDouble
Sets the simulated value.
set(double)
- Method in interface edu.wpi.first.networktables.
DoublePublisher
Publish a new value using current NT time.
set(double)
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Common interface for setting the speed of a motor controller.
set(double)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
set(double)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Set the PWM value.
set(double)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
Set the PWM value.
set(double)
- Method in class edu.wpi.first.wpilibj.
Servo
Set the servo position.
set(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogEncoderSim
Set the position.
set(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Set the position.
set(double)
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
set(double[])
- Method in interface edu.wpi.first.networktables.
DoubleArrayPublisher
Publish a new value using current NT time.
set(double[], long)
- Method in interface edu.wpi.first.networktables.
DoubleArrayPublisher
Publish a new value.
set(double, long)
- Method in interface edu.wpi.first.networktables.
DoublePublisher
Publish a new value.
set(float)
- Method in interface edu.wpi.first.networktables.
FloatPublisher
Publish a new value using current NT time.
set(float[])
- Method in interface edu.wpi.first.networktables.
FloatArrayPublisher
Publish a new value using current NT time.
set(float[], long)
- Method in interface edu.wpi.first.networktables.
FloatArrayPublisher
Publish a new value.
set(float, long)
- Method in interface edu.wpi.first.networktables.
FloatPublisher
Publish a new value.
set(int)
- Method in class edu.wpi.first.cscore.
VideoProperty
Sets property value.
set(int)
- Method in class edu.wpi.first.hal.
SimEnum
Sets the simulated value.
set(int)
- Method in class edu.wpi.first.hal.
SimInt
Sets the simulated value.
set(int, int, double)
- Method in class edu.wpi.first.math.
Matrix
Sets the value at the given indices.
set(long)
- Method in class edu.wpi.first.hal.
SimLong
Sets the simulated value.
set(long)
- Method in interface edu.wpi.first.networktables.
IntegerPublisher
Publish a new value using current NT time.
set(long[])
- Method in interface edu.wpi.first.networktables.
IntegerArrayPublisher
Publish a new value using current NT time.
set(long[], long)
- Method in interface edu.wpi.first.networktables.
IntegerArrayPublisher
Publish a new value.
set(long, long)
- Method in class edu.wpi.first.hal.
AccumulatorResult
Set the value and count.
set(long, long)
- Method in interface edu.wpi.first.networktables.
IntegerPublisher
Publish a new value.
set(NetworkTableValue)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
set(DoubleSolenoid.Value)
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Set the value of a solenoid.
set(DoubleSolenoid.Value)
- Method in class edu.wpi.first.wpilibj.simulation.
DoubleSolenoidSim
Set the value of the double solenoid output.
set(Relay.Value)
- Method in class edu.wpi.first.wpilibj.
Relay
Set the relay state.
set(String)
- Method in interface edu.wpi.first.networktables.
StringPublisher
Publish a new value using current NT time.
set(String[])
- Method in interface edu.wpi.first.networktables.
StringArrayPublisher
Publish a new value using current NT time.
set(String[], long)
- Method in interface edu.wpi.first.networktables.
StringArrayPublisher
Publish a new value.
set(String, long)
- Method in interface edu.wpi.first.networktables.
StringPublisher
Publish a new value.
set(ByteBuffer)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value using current NT time.
set(ByteBuffer, int, int)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value using current NT time.
set(ByteBuffer, int, int, long)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value.
set(ByteBuffer, long)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a new value.
set(T)
- Method in interface edu.wpi.first.networktables.
ProtobufPublisher
Publish a new value using current NT time.
set(T)
- Method in interface edu.wpi.first.networktables.
StructPublisher
Publish a new value using current NT time.
set(T[])
- Method in interface edu.wpi.first.networktables.
StructArrayPublisher
Publish a new value using current NT time.
set(T[], long)
- Method in interface edu.wpi.first.networktables.
StructArrayPublisher
Publish a new value.
set(T, long)
- Method in interface edu.wpi.first.networktables.
ProtobufPublisher
Publish a new value.
set(T, long)
- Method in interface edu.wpi.first.networktables.
StructPublisher
Publish a new value.
setA(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix a = 4;
setAButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the A button on the controller.
setAButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the A button on the controller.
setAcceleration(double)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double acceleration = 3;
setAccelerometerActive(boolean)
- Static method in class edu.wpi.first.hal.
AccelerometerJNI
Sets the accelerometer to active or standby mode.
setAccelerometerRange(int)
- Static method in class edu.wpi.first.hal.
AccelerometerJNI
Sets the range of values that can be measured (either 2, 4, or 8 g-forces).
setAccelX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the X axis acceleration in meters per second squared.
setAccelX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the X axis acceleration in meters per second squared.
setAccelY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Y axis acceleration in meters per second squared.
setAccelY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Y axis acceleration in meters per second squared.
setAccelZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Z axis acceleration in meters per second squared.
setAccelZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Z axis acceleration in meters per second squared.
setAccumulatorCenter(int)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Set the center value of the accumulator.
setAccumulatorCenter(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the accumulator center.
setAccumulatorCenter(int)
- Method in class edu.wpi.first.wpilibj.
SPI
Set the center value of the accumulator.
setAccumulatorCenter(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Set the center value of the accumulator.
setAccumulatorCenter(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAccumulatorCount(int, long)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAccumulatorCount(long)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the accumulator count.
setAccumulatorDeadband(int)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Set the accumulator's deadband.
setAccumulatorDeadband(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the accumulator deadband.
setAccumulatorDeadband(int)
- Method in class edu.wpi.first.wpilibj.
SPI
Set the accumulator's deadband.
setAccumulatorDeadband(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Set the accumulator's deadband.
setAccumulatorDeadband(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAccumulatorInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change whether the accumulator has been initialized.
setAccumulatorInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAccumulatorInitialValue(long)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Set an initial value for the accumulator.
setAccumulatorIntegratedCenter(double)
- Method in class edu.wpi.first.wpilibj.
SPI
Set the center value of the accumulator integrator.
setAccumulatorValue(int, long)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAccumulatorValue(long)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the accumulator value.
setActive(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Define whether this accelerometer is active.
setActive(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Define whether this accelerometer is active.
setActive(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
setActive(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
setActiveButtonLoop(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Replace the button poll with another one.
setActuator(boolean)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
setActuator(boolean)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Set a flag indicating if this Sendable should be treated as an actuator.
setActuator(boolean)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Set a flag indicating if this sendable should be treated as an actuator.
setAllianceStationId(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setAllianceStationId(AllianceStationID)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change the alliance station.
setAlwaysHighMode()
- Method in class edu.wpi.first.wpilibj.
PWM
Sets the PWM output to be a continuous high signal while enabled.
setAlwaysHighMode(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets the PWM output to be a continuous high signal while enabled.
setAnalogAverageBits(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the number of averaging bits.
setAnalogGyroDeadband(int, double)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Sets the deadband of the analog gyro.
setAnalogGyroParameters(int, double, double, int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Sets the analog gyro parameters to the specified values.
setAnalogGyroVoltsPerDegreePerSecond(int, double)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Sets the analog gyro volts per degrees per second scaling.
setAnalogInputSimDevice(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Indicates the analog input is used by a simulated device.
setAnalogOutput(int, double)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets an analog output value.
setAnalogOversampleBits(int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the number of oversample bits.
setAnalogSampleRate(double)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the sample rate.
setAnalogTriggerAveraged(int, boolean)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Configures the analog trigger to use the averaged vs.
setAnalogTriggerFiltered(int, boolean)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Configures the analog trigger to use a filtered value.
setAnalogTriggerLimitsDutyCycle(int, double, double)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the upper and lower limits of the analog trigger.
setAnalogTriggerLimitsRaw(int, int, int)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the raw ADC upper and lower limits of the analog trigger.
setAnalogTriggerLimitsVoltage(int, double, double)
- Static method in class edu.wpi.first.hal.
AnalogJNI
Sets the upper and lower limits of the analog trigger.
setAngle(double)
- Method in class edu.wpi.first.wpilibj.
Servo
Set the servo angle.
setAngle(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXRS450_GyroSim
Sets the angle in degrees (clockwise positive).
setAngle(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Change the angle measured by the gyro.
setAngle(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Sets the DC motor's angular position.
setAngle(double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Set the ligament's angle relative to its parent.
setAngle(double)
- Method in class edu.wpi.first.wpilibj.xrp.
XRPServo
Set the servo angle.
setAngle(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
setAngle(Rotation2d)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Set the ligament's angle relative to its parent.
setAngle(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional .wpi.proto.ProtobufRotation2d angle = 2;
setAngle(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional .wpi.proto.ProtobufRotation2d angle = 2;
setAngularVelocity(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Sets the DC motor's angular velocity.
setAngularVelocity(double)
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Sets the flywheel's angular velocity.
setAssumedFrequency(double)
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Sets the assumed frequency of the connected device.
setAutomaticMode(boolean)
- Static method in class edu.wpi.first.wpilibj.
Ultrasonic
Turn Automatic mode on/off for all sensors.
setAutonomous(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setAutonomous(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change whether the DS is in autonomous.
setAutoTransmitData(byte[], int)
- Method in class edu.wpi.first.wpilibj.
SPI
Set the data to be transmitted by the engine.
setAverageBits(int)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Set the number of averaging bits.
setAverageBits(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the number of average bits.
setAverageBits(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setAveraged(boolean)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Configure the analog trigger to use the averaged vs.
setAxisCount(int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the axis count of this device.
setAxisType(int, int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the type of the provided axis channel.
setB(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix b = 5;
setBackButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the back button on the controller.
setBackgroundColor(Color8Bit)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Mechanism2d
Set the Mechanism2d background color.
setBButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the B button on the controller.
setBButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the B button on the controller.
setBitTiming(int, int, int, int)
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Sets the bit timing.
setBitTiming(int, int, int, int, int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Sets the bit timing.
setBoolean(boolean)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBoolean(boolean)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setBoolean(boolean, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBoolean(int, long, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given boolean into the preferences table.
setBooleanArray(boolean[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBooleanArray(boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setBooleanArray(boolean[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBooleanArray(int, long, boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setBooleanArray(Boolean[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBooleanArray(Boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setBooleanArray(Boolean[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setBoolField(StructFieldDescriptor, boolean)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a boolean field.
setBoolField(StructFieldDescriptor, boolean, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a boolean field.
setBoundsMicroseconds(int, int, int, int, int)
- Method in class edu.wpi.first.wpilibj.
PWM
Set the bounds on the PWM pulse widths.
setBrightness(int)
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the brightness, as a percentage (0-100).
setBrownoutVoltage(double)
- Static method in class edu.wpi.first.hal.
PowerJNI
Set the voltage the roboRIO will brownout and disable all outputs.
setBrownoutVoltage(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setBrownoutVoltage(double)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Set the voltage the roboRIO will brownout and disable all outputs.
setBrownoutVoltage(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the Brownout voltage.
setBrownoutVoltage(Voltage)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Set the voltage in a measure the roboRIO will brownout and disable all outputs.
setButtonCount(int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the button count of this device.
setC(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix c = 6;
setCached(boolean)
- Method in class edu.wpi.first.networktables.
Topic
Allow storage of the topic's last value, allowing the value to be read (and not just accessed
 through event queues and listeners).
setCallback(Runnable)
- Method in class edu.wpi.first.wpilibj.
Notifier
Change the callback function.
setCameraBrightness(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera brightness.
setCameraExposureAuto(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera exposure to auto.
setCameraExposureHoldCurrent(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera exposure to "hold current".
setCameraExposureManual(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera exposure to the given value.
setCameraServerShared(CameraServerShared)
- Static method in class edu.wpi.first.cameraserver.
CameraServerSharedStore
Set the CameraServerShared object.
setCameraWhiteBalanceAuto(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera white balance to auto.
setCameraWhiteBalanceHoldCurrent(int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera white balance to "hold current".
setCameraWhiteBalanceManual(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets camera white balance to the given value.
setCenter(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional .wpi.proto.ProtobufPose2d center = 1;
setCenter(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional .wpi.proto.ProtobufPose2d center = 1;
setChipSelectActiveHigh()
- Method in class edu.wpi.first.wpilibj.
SPI
Configure the chip select line to be active high.
setChipSelectActiveLow()
- Method in class edu.wpi.first.wpilibj.
SPI
Configure the chip select line to be active low.
setCircleButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the circle button on the controller.
setCircleButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the circle button on the controller.
setClampFunction(Function<Matrix<Inputs, N1>, Matrix<Inputs, N1>>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Set the clamping function used to clamp inputs.
setClockRate(int)
- Method in class edu.wpi.first.wpilibj.
SPI
Configure the rate of the generated clock signal.
setClosedLoopControl(int, boolean)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Enables the compressor closed loop control using the digital pressure switch.
setClosedLoopControlAnalog(int, double, double)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Enables the compressor in analog mode.
setClosedLoopControlDigital(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Enables the compressor in digital mode using the digital pressure switch.
setClosedLoopControlDisabled(int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Disable Compressor.
setClosedLoopControlHybrid(int, double, double)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Enables the compressor in hybrid mode.
setClosedLoopEnabled(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
Turn on/off the closed loop control of the compressor.
setClosedLoopEnabled(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setColor(Color8Bit)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Set the ligament color.
setColorOrder(int, int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Sets the color order for the addressable LED output.
setColorOrder(AddressableLED.ColorOrder)
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Sets the color order for this AddressableLED.
setColumn(int, Matrix<R, N1>)
- Method in class edu.wpi.first.math.
Matrix
Sets a column to a given column vector.
setComments(String)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setComments(String)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the comments string.
setCompression(int)
- Method in class edu.wpi.first.cscore.
MjpegServer
Set the compression for clients that don't specify it.
setCompressorConfig(int, double, double, boolean, boolean)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Send compressor configuration to the PH.
setCompressorConfigType(int)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
Turn on/off the closed loop control of the compressor.
setCompressorConfigType(int, int)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setCompressorCurrent(double)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
setCompressorCurrent(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Set the compressor current.
setCompressorCurrent(double)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
setCompressorCurrent(int, double)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setCompressorCurrent(int, double)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setCompressorOn(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
setCompressorOn(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Set whether the compressor is active.
setCompressorOn(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
setCompressorOn(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setCompressorOn(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setConfig(AprilTagDetector.Config)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Sets detector configuration.
setConfig(AprilTagPoseEstimator.Config)
- Method in class edu.wpi.first.apriltag.
AprilTagPoseEstimator
Sets estimator configuration.
setConfigJson(String)
- Method in class edu.wpi.first.cscore.
VideoSink
Set properties from a JSON configuration string.
setConfigJson(String)
- Method in class edu.wpi.first.cscore.
VideoSource
Set video mode and properties from a JSON configuration string.
setConnected(boolean)
- Method in class edu.wpi.first.cscore.
ImageSource
Set source connection status.
setConnected(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleEncoderSim
Set if the encoder is connected.
setConnectedFrequencyThreshold(int)
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Change the frequency threshold for detecting connection used by
DutyCycleEncoder.isConnected()
.
setConnectionStrategy(VideoSource.ConnectionStrategy)
- Method in class edu.wpi.first.cscore.
VideoSource
Sets the connection strategy.
setConnectVerbose(int)
- Method in class edu.wpi.first.cscore.
UsbCamera
Set how verbose the camera connection messages are.
setConstraints(TrapezoidProfile.Constraints)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Set velocity and acceleration constraints for goal.
setCount(int)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the count of the encoder.
setCount(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setCounterAverageSize(int, int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the average sample size of a counter.
setCounterDownSource(int, int, int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the source object that causes the counter to count down.
setCounterDownSourceEdge(int, boolean, boolean)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the down source to either detect rising edges or falling edges.
setCounterExternalDirectionMode(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets directional counting mode on this counter.
setCounterMaxPeriod(int, double)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the maximum period where the device is still considered "moving".
setCounterPulseLengthMode(int, double)
- Static method in class edu.wpi.first.hal.
CounterJNI
Configures the counter to count in up or down based on the length of the input pulse.
setCounterReverseDirection(int, boolean)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the Counter to return reversed sensing on the direction.
setCounterSamplesToAverage(int, int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
setCounterSemiPeriodMode(int, boolean)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets Semi-period mode on this counter.
setCounterUpdateWhenEmpty(int, boolean)
- Static method in class edu.wpi.first.hal.
CounterJNI
Selects whether you want to continue updating the event timer output when there are no samples
 captured.
setCounterUpDownMode(int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets standard up / down counting mode on this counter.
setCounterUpSource(int, int, int)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the source object that causes the counter to count up.
setCounterUpSourceEdge(int, boolean, boolean)
- Static method in class edu.wpi.first.hal.
CounterJNI
Sets the up source to either detect rising edges or falling edges.
setCPUTemp(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setCPUTemp(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the cpu temp.
setCreateButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the create button on the controller.
setCrossButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the cross button on the controller.
setCrossButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the cross button on the controller.
setCurrent(int, double)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Change the current in the given channel.
setCurrent(int, int, double)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
setCurrentGearing(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Sets the gearing reduction on the drivetrain.
setCurrentThreadPriority(boolean, int)
- Static method in class edu.wpi.first.hal.
ThreadsJNI
Sets the thread priority for the current thread.
setCurrentThreadPriority(boolean, int)
- Static method in class edu.wpi.first.wpilibj.
Threads
Sets the thread priority for the current thread.
setCurvature(double)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double curvature = 5;
setD(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the Differential coefficient of the PID controller gain.
setD(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the differential coefficient of the PID controller gain.
setD(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional .wpi.proto.ProtobufMatrix d = 7;
setData(byte[])
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Overwrites the entire serialized struct by copying data from a byte array.
setData(byte[])
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Change the LED data.
setData(int, byte[])
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Sets the led output data.
setData(int, byte[])
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
setData(int, long)
- Method in class edu.wpi.first.hal.
CANData
API used from JNI to set the data.
setData(Sendable, int, AutoCloseable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Associates arbitrary data with an object in the registry.
setData(AddressableLEDBuffer)
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Sets the LED output data.
setData(String, String, int, int, int)
- Method in class edu.wpi.first.hal.
MatchInfoData
Called from JNI to set the structure data.
setData(ByteBuffer)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Overwrites the entire serialized struct by copying data from a byte buffer.
setData(ByteBuffer, int, int, int, PixelFormat)
- Method in class edu.wpi.first.util.
RawFrame
Set frame data.
setDeadband(double)
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Set the size of the neutral zone.
setDeadband(double)
- Method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Sets the deadband applied to the drive inputs (e.g., joystick values).
setDeadline(Command)
- Method in class edu.wpi.first.wpilibj2.command.
ParallelDeadlineGroup
Sets the deadline to the given command.
setDebounceTime(double)
- Method in class edu.wpi.first.math.filter.
Debouncer
Sets the time to debounce.
setDebounceType(Debouncer.DebounceType)
- Method in class edu.wpi.first.math.filter.
Debouncer
Sets the debounce type.
setDefault(boolean)
- Method in interface edu.wpi.first.networktables.
BooleanPublisher
Publish a default value.
setDefault(boolean[])
- Method in interface edu.wpi.first.networktables.
BooleanArrayPublisher
Publish a default value.
setDefault(byte[])
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a default value.
setDefault(byte[], int, int)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a default value.
setDefault(double)
- Method in interface edu.wpi.first.networktables.
DoublePublisher
Publish a default value.
setDefault(double[])
- Method in interface edu.wpi.first.networktables.
DoubleArrayPublisher
Publish a default value.
setDefault(float)
- Method in interface edu.wpi.first.networktables.
FloatPublisher
Publish a default value.
setDefault(float[])
- Method in interface edu.wpi.first.networktables.
FloatArrayPublisher
Publish a default value.
setDefault(long)
- Method in interface edu.wpi.first.networktables.
IntegerPublisher
Publish a default value.
setDefault(long[])
- Method in interface edu.wpi.first.networktables.
IntegerArrayPublisher
Publish a default value.
setDefault(NetworkTableValue)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefault(String)
- Method in interface edu.wpi.first.networktables.
StringPublisher
Publish a default value.
setDefault(String[])
- Method in interface edu.wpi.first.networktables.
StringArrayPublisher
Publish a default value.
setDefault(ByteBuffer)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a default value.
setDefault(ByteBuffer, int, int)
- Method in interface edu.wpi.first.networktables.
RawPublisher
Publish a default value.
setDefault(T)
- Method in interface edu.wpi.first.networktables.
ProtobufPublisher
Publish a default value.
setDefault(T)
- Method in interface edu.wpi.first.networktables.
StructPublisher
Publish a default value.
setDefault(T[])
- Method in interface edu.wpi.first.networktables.
StructArrayPublisher
Publish a default value.
setDefaultBoolean(boolean)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultBoolean(boolean)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultBoolean(int, long, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultBoolean(String, boolean)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultBooleanArray(boolean[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultBooleanArray(boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultBooleanArray(int, long, boolean[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultBooleanArray(Boolean[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultBooleanArray(Boolean[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultBooleanArray(String, boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultBooleanArray(String, Boolean[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultCommand(Command)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Sets the default
Command
of the subsystem.
setDefaultCommand(Subsystem, Command)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Sets the default command for a subsystem.
setDefaultCompression(int)
- Method in class edu.wpi.first.cscore.
MjpegServer
Set the default compression used for non-MJPEG sources.
setDefaultDouble(double)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultDouble(double)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultDouble(int, long, double)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultDoubleArray(double[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultDoubleArray(double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultDoubleArray(int, long, double[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultDoubleArray(Double[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultDoubleArray(Double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultFloat(float)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultFloat(float)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultFloat(int, long, float)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultFloatArray(float[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultFloatArray(float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultFloatArray(int, long, float[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultFloatArray(Float[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultFloatArray(Float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultInteger(int, long, long)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultInteger(long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultInteger(long)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultIntegerArray(int, long, long[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultIntegerArray(long[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultIntegerArray(long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultIntegerArray(Long[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultIntegerArray(Long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultNumber(Number)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultNumber(String, double)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultNumberArray(Number[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultNumberArray(String, double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultNumberArray(String, Double[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultOption(String, V)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableChooser
Adds the given object to the list of options and marks it as the default.
setDefaultRaw(byte[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultRaw(byte[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultRaw(byte[], int, int)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultRaw(byte[], int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultRaw(int, long, byte[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default raw topic value.
setDefaultRaw(int, long, byte[], int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default raw topic value.
setDefaultRaw(int, long, ByteBuffer)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default raw topic value.
setDefaultRaw(int, long, ByteBuffer, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default raw topic value.
setDefaultRaw(String, byte[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultRaw(ByteBuffer)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultRaw(ByteBuffer)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultRaw(ByteBuffer, int, int)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultRaw(ByteBuffer, int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultString(int, long, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultString(String)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultString(String)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultString(String, String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultStringArray(int, long, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets default topic value.
setDefaultStringArray(String[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultStringArray(String[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultStringArray(String, String[])
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the value in the table if key does not exist.
setDefaultValue(Object)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Sets the entry's value if it does not exist.
setDefaultValue(Object)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value if it does not exist.
setDefaultValue(String, NetworkTableValue)
- Method in class edu.wpi.first.networktables.
NetworkTable
Gets the current value in the table, setting it if it does not exist.
setDescription(String)
- Method in class edu.wpi.first.cscore.
ImageSink
Set sink description.
setDescription(String)
- Method in class edu.wpi.first.cscore.
ImageSource
Set source description.
setDetectorConfig(long, AprilTagDetector.Config)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Sets the detector engine configuration.
setDetectorQTP(long, AprilTagDetector.QuadThresholdParameters)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI
Sets the detector engine quad threshold parameters.
setDigitalPWMDutyCycle(int, double)
- Static method in class edu.wpi.first.hal.
DIOJNI
Configures the duty-cycle of the PWM generator.
setDigitalPWMOutputChannel(int, int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Configures which DO channel the PWM signal is output on.
setDigitalPWMPPS(int, double)
- Static method in class edu.wpi.first.hal.
DIOJNI
Configures the digital PWM to be a PPS signal with specified duty cycle.
setDigitalPWMRate(double)
- Static method in class edu.wpi.first.hal.
DIOJNI
Changes the frequency of the DO PWM generator.
setDIO(int, boolean)
- Static method in class edu.wpi.first.hal.
DIOJNI
Writes a digital value to a DIO channel.
setDIODirection(int, boolean)
- Static method in class edu.wpi.first.hal.
DIOJNI
Sets the direction of a DIO channel.
setDIOSimDevice(int, int)
- Static method in class edu.wpi.first.hal.
DIOJNI
Indicates the DIO channel is used by a simulated device.
setDirection(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Set the direction of the encoder.
setDirection(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setDirection(Relay.Direction)
- Method in class edu.wpi.first.wpilibj.
Relay
Set the Relay Direction.
setDisabled()
- Method in class edu.wpi.first.wpilibj.
PWM
Temporarily disables the PWM output.
setDisabledListener(Runnable)
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Sets function to be called when LiveWindow is disabled.
setDistance(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
optional double distance = 1;
setDistance(double)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the encoder distance.
setDistance(int, double)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setDistancePerPulse(double)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the distance per pulse for this counter.
setDistancePerPulse(double)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the distance per pulse for this encoder.
setDistancePerPulse(double)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Set the distance per pulse value.
setDistancePerPulse(int, double)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setDouble(double)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDouble(double)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setDouble(double, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDouble(int, long, double)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setDouble(String, double)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given double into the preferences table.
setDoubleArray(double[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDoubleArray(double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setDoubleArray(double[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDoubleArray(int, long, double[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setDoubleArray(Double[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDoubleArray(Double[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setDoubleArray(Double[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setDoubleField(StructFieldDescriptor, double)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a double field.
setDoubleField(StructFieldDescriptor, double, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a double field.
setDownEdgeConfiguration(EdgeConfiguration)
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
Sets the configuration for the down source.
setDownSource(int)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the down counting source to be a digital input channel.
setDownSource(AnalogTrigger, AnalogTriggerOutput.AnalogTriggerType)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the down counting source to be an analog trigger.
setDownSource(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the source object that causes the counter to count down.
setDownSourceEdge(boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the edge sensitivity on a down counting source.
setDsAttached(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setDsAttached(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change whether the DS is attached.
setDt(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double dt = 5;
setDt(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double dt = 5;
setDt(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double dt = 4;
setDtheta(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dtheta = 3;
setDutyCycle(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Set the duty cycle value of this PWM output.
setDutyCycle(int, double)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
setDutyCycleRange(double, double)
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Set the encoder duty cycle range.
setDx(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dx = 1;
setDx(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dx = 1;
setDy(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
optional double dy = 2;
setDy(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dy = 2;
setDz(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double dz = 3;
setEdgeConfiguration(EdgeConfiguration)
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
Sets the edge configuration for counting.
setEdgesPerRevolution(int)
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Sets the number of edges per revolution.
setEllipsesButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the ellipses button on the controller.
setEnabled(boolean)
- Method in class edu.wpi.first.cscore.
ImageSink
Enable or disable getting new frames.
setEnabled(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setEnabled(boolean)
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Enables and disables the controller for troubleshooting problems.
setEnabled(boolean)
- Method in class edu.wpi.first.math.controller.
LTVUnicycleController
Enables and disables the controller for troubleshooting purposes.
setEnabled(boolean)
- Method in class edu.wpi.first.math.controller.
RamseteController
Enables and disables the controller for troubleshooting purposes.
setEnabled(boolean)
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Set the enabled state of LiveWindow.
setEnabled(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change whether the DS is enabled.
setEnabled(boolean)
- Method in class edu.wpi.first.wpilibj.
Ultrasonic
Set if the ultrasonic is enabled.
setEnabled3V3(boolean)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Enables or disables the 3.3V rail.
setEnabled5V(boolean)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Enables or disables the 5V rail.
setEnabled6V(boolean)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Enables or disables the 6V rail.
setEnabledListener(Runnable)
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Sets function to be called when LiveWindow is enabled.
setEncoderDistancePerPulse(int, double)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets the distance traveled per encoder pulse.
setEncoderIndexSource(int, int, int, int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets the source for an index pulse on the encoder.
setEncoderMaxPeriod(int, double)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets the maximum period where the device is still considered "moving".
setEncoderMinRate(int, double)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets the minimum rate to be considered moving by the encoder.
setEncoderReverseDirection(int, boolean)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets if to reverse the direction of the encoder.
setEncoderSamplesToAverage(int, int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Sets the number of encoder samples to average when calculating encoder rate.
setEncoderSimDevice(int, int)
- Static method in class edu.wpi.first.hal.
EncoderJNI
Indicates the encoder is used by a simulated device.
setEndVelocity(double)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Sets the end velocity of the trajectory.
setEndVelocity(LinearVelocity)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Sets the end velocity of the trajectory.
setEntryFlags(int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets entry flags.
setEnumPropertyChoices(VideoProperty, String[])
- Method in class edu.wpi.first.cscore.
ImageSource
Configure enum property choices.
setErrorHandler(BiConsumer<String, StackTraceElement[]>)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Set error reporting function.
setEStop(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setEStop(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Set whether eStop is active.
setEvent(int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Sets an event to signaled state.
setEventName(String)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setEventName(String)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the event name.
setExpiration(double)
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Set the expiration time for the corresponding motor safety object.
setExposureAuto()
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the exposure to auto aperture.
setExposureHoldCurrent()
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the exposure to hold current.
setExposureManual(int)
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the exposure to manual, as a percentage (0-100).
setExternalDirectionMode()
- Method in class edu.wpi.first.wpilibj.
Counter
Set external direction mode on this counter.
setExternalTrigger(int, int, int, boolean, boolean)
- Static method in class edu.wpi.first.hal.
DMAJNI
Sets DMA transfers to occur on an external trigger.
setExternalTrigger(DigitalSource, boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets an external DMA trigger.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.apriltag.jni.
AprilTagJNI.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.cscore.
OpenCvLoader.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.hal.
JNIWrapper.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.math.jni.
WPIMathJNI.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.net.
WPINetJNI.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI.Helper
Sets whether the JNI should be loaded in the static block.
setExtractOnStaticLoad(boolean)
- Static method in class edu.wpi.first.util.
WPIUtilJNI.Helper
Sets whether the JNI should be loaded in the static block.
setFilename(String)
- Method in class edu.wpi.first.util.datalog.
DataLogBackgroundWriter
Change log filename.
setFiltered(boolean)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Configure the analog trigger to use a filtered value.
setFilterIndex(int)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Change the filter index of this DIO port.
setFilterIndex(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
setFilterPeriod(int, int)
- Static method in class edu.wpi.first.hal.
DigitalGlitchFilterJNI
Sets the filter period for the specified filter index.
setFilterSelect(int, int)
- Static method in class edu.wpi.first.hal.
DigitalGlitchFilterJNI
Writes the filter index from the FPGA.
setFloat(float)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloat(float)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setFloat(float, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloat(int, long, float)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setFloat(String, float)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given float into the preferences table.
setFloatArray(float[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloatArray(float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setFloatArray(float[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloatArray(int, long, float[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setFloatArray(Float[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloatArray(Float[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setFloatArray(Float[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setFloatField(StructFieldDescriptor, float)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a float field.
setFloatField(StructFieldDescriptor, float, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a float field.
setFlowControl(SerialPort.FlowControl)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Set the type of flow control to enable on this port.
setFmsAttached(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setFmsAttached(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change whether the FMS is connected.
setForward(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Set whether the forward direction is active.
setForward(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
setFPGAButton(boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setFPGAButton(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the state of the FPGA button.
setFPS(int)
- Method in class edu.wpi.first.cscore.
MjpegServer
Set the stream frames per second (FPS) for clients that don't specify it.
setFPS(int)
- Method in class edu.wpi.first.cscore.
VideoSource
Set the frames per second (FPS).
setFrameButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the frame button on the controller.
setFreeCurrent(double)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_current = 4;
setFreeSpeed(double)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double free_speed = 5;
setFrequency(int)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Change the duty cycle frequency.
setFrequency(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
setFrontLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_left = 1;
setFrontLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_left = 1;
setFrontLeft(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_left = 1;
setFrontRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double front_right = 2;
setFrontRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double front_right = 2;
setFrontRight(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d front_right = 2;
setGameSpecificMessage(String)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setGameSpecificMessage(String)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the game specific message.
setGlobalSampleRate(double)
- Static method in class edu.wpi.first.wpilibj.
AnalogInput
Set the sample rate per channel.
setGoal(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the goal for the ProfiledPIDController.
setGoal(double)
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Sets the goal state for the subsystem.
setGoal(double)
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Sets the goal state for the subsystem.
setGoal(TrapezoidProfile.State)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the goal for the ProfiledPIDController.
setGoal(TrapezoidProfile.State)
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Sets the goal state for the subsystem.
setGoal(TrapezoidProfile.State)
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Sets the goal state for the subsystem.
setGoogleButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the google button on the controller.
setGreenLed(boolean)
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Sets the green LED.
setGyroAngle(ADIS16470_IMU.IMUAxis, double)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Allow the designated gyro angle to be set to a given value.
setGyroAngleX(double)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Allow the gyro angle X to be set to a given value.
setGyroAngleX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the X axis angle in degrees (CCW positive).
setGyroAngleX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the X axis angle in degrees (CCW positive).
setGyroAngleY(double)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Allow the gyro angle Y to be set to a given value.
setGyroAngleY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Y axis angle in degrees (CCW positive).
setGyroAngleY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Y axis angle in degrees (CCW positive).
setGyroAngleZ(double)
- Method in class edu.wpi.first.wpilibj.
ADIS16470_IMU
Allow the gyro angle Z to be set to a given value.
setGyroAngleZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Z axis angle in degrees (CCW positive).
setGyroAngleZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Z axis angle in degrees (CCW positive).
setGyroRateX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the X axis angle in degrees per second (CCW positive).
setGyroRateX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the X axis angle in degrees per second (CCW positive).
setGyroRateY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Y axis angle in degrees per second (CCW positive).
setGyroRateY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Y axis angle in degrees per second (CCW positive).
setGyroRateZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16448_IMUSim
Sets the Z axis angle in degrees per second (CCW positive).
setGyroRateZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADIS16470_IMUSim
Sets the Z axis angle in degrees per second (CCW positive).
setHALRuntimeType(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Override the HAL runtime type (simulated/real).
setHALThreadPriority(boolean, int)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Sets the HAL notifier thread priority.
setHALThreadPriority(boolean, int)
- Static method in class edu.wpi.first.wpilibj.
Notifier
Sets the HAL notifier thread priority.
setHamburgerButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the hamburger button on the controller.
setHSV(int, int, int, int)
- Method in interface edu.wpi.first.wpilibj.
LEDWriter
Sets a specific led in the buffer.
setHttpCameraUrls(int, String[])
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets HTTP camera URLs.
setI(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the Integral coefficient of the PID controller gain.
setI(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the integral coefficient of the PID controller gain.
setIndexSource(int)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the index source for the encoder.
setIndexSource(int, Encoder.IndexingType)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the index source for the encoder.
setIndexSource(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the index source for the encoder.
setIndexSource(DigitalSource, Encoder.IndexingType)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the index source for the encoder.
setInfo(int, int, int, PixelFormat)
- Method in class edu.wpi.first.util.
RawFrame
Call to set frame information.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Change the Initialized value of the LED strip.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Set whether this gyro is initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change whether this analog input has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Define whether this analog output has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Change whether this analog trigger has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Define whether this PWM output has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Define whether this DIO has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Define whether this duty cycle input has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the Initialized value of the encoder.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
I2CSim
Define whether this I2C device has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Define whether the PDP has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Define whether the PCM/PH has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Define whether the PWM has been initialized.
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
setInitialized(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SPISim
Define whether this device has been initialized.
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
I2CDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setInitialized(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SPIDataJNI
setInitializedForward(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Define whether the forward direction has been initialized.
setInitializedForward(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
setInitializedReverse(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Define whether the reverse direction has been initialized.
setInitializedReverse(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
setInput(double...)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Sets the system inputs.
setInput(int, double)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Sets the system inputs.
setInput(Matrix<Inputs, N1>)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Sets the system inputs (usually voltages).
setInputs(double, double)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Sets the applied voltage to the drivetrain.
setInputVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Sets the input voltage for the DC motor.
setInputVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Sets the input voltage for the elevator.
setInputVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
FlywheelSim
Sets the input voltage for the flywheel.
setInputVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Sets the input voltage for the arm.
setInt(String, int)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given int into the preferences table.
setInteger(int, long, long)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setInteger(long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setInteger(long)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setInteger(long, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setIntegerArray(int, long, long[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setIntegerArray(long[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setIntegerArray(long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setIntegerArray(long[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setIntegerArray(Long[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setIntegerArray(Long[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setIntegerArray(Long[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setIntegratorRange(double, double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the minimum and maximum contributions of the integral term.
setIntegratorRange(double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the minimum and maximum contributions of the integral term.
setInterruptEdges(boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
AsynchronousInterrupt
Set which edges to trigger the interrupt on.
setInterruptEdges(boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Set which edges to trigger the interrupt on.
setInterruptUpSourceEdge(int, boolean, boolean)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Sets the edges to trigger the interrupt on.
setIntField(StructFieldDescriptor, long)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of an integer field.
setIntField(StructFieldDescriptor, long, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of an integer field.
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
Set if this encoder is inverted.
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.
DutyCycleEncoder
Set if this encoder is inverted.
setInverted(boolean)
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Common interface for inverting direction of a motor controller.
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
setInverted(boolean)
- Method in class edu.wpi.first.wpilibj2.command.button.
InternalButton
Sets whether to invert button state.
setIsInput(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Define whether this DIO port is an Input.
setIsInput(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
setIZone(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the IZone range.
setIZone(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the IZone range.
setJoystickAxes(byte, float[])
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickAxis(int, int, double)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickAxis(int, int, double)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Gets the value of the axis on a joystick.
setJoystickAxisCount(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickAxisCount(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the number of axes for a joystick.
setJoystickAxisType(int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickAxisType(int, int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the types of Axes for a joystick.
setJoystickButton(int, int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickButton(int, int, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the state of one joystick button.
setJoystickButtonCount(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickButtonCount(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the number of buttons for a joystick.
setJoystickButtons(byte, int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickButtons(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the state of all the buttons on a joystick.
setJoystickButtonsValue(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickIsXbox(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickIsXbox(int, boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the value of isXbox for a joystick.
setJoystickName(int, String)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickName(int, String)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the name of a joystick.
setJoystickOutputs(byte, int, int, int)
- Static method in class edu.wpi.first.hal.
DriverStationJNI
Set joystick outputs.
setJoystickPOV(int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickPOV(int, int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Gets the state of a POV on a joystick.
setJoystickPOVCount(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickPOVCount(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the number of POVs for a joystick.
setJoystickPOVs(byte, short[])
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickType(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setJoystickType(int, int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the value of type for a joystick.
setKa(double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Sets the acceleration gain.
setKa(double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Sets the acceleration gain.
setKa(double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Sets the acceleration gain.
setKa(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ka = 4;
setKa(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ka = 4;
setKa(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ka = 3;
setKaAngular(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_angular = 4;
setKaLinear(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double ka_linear = 2;
setKg(double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Sets the gravity gain.
setKg(double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Sets the gravity gain.
setKg(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kg = 2;
setKg(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kg = 2;
setKinematics(DifferentialDriveKinematics)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Adds a differential drive kinematics constraint to ensure that no wheel velocity of a
 differential drive goes above the max velocity.
setKinematics(MecanumDriveKinematics)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Adds a mecanum drive kinematics constraint to ensure that no wheel velocity of a mecanum drive
 goes above the max velocity.
setKinematics(SwerveDriveKinematics)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Adds a swerve drive kinematics constraint to ensure that no wheel velocity of a swerve drive
 goes above the max velocity.
setKs(double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Sets the static gain.
setKs(double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Sets the static gain.
setKs(double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Sets the static gain.
setKs(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double ks = 1;
setKs(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double ks = 1;
setKs(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double ks = 1;
setKv(double)
- Method in class edu.wpi.first.math.controller.
ArmFeedforward
Sets the velocity gain.
setKv(double)
- Method in class edu.wpi.first.math.controller.
ElevatorFeedforward
Sets the velocity gain.
setKv(double)
- Method in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Sets the velocity gain.
setKv(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
optional double kv = 3;
setKv(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
optional double kv = 3;
setKv(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
optional double kv = 2;
setKvAngular(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_angular = 3;
setKvLinear(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
optional double kv_linear = 1;
setL1Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the left trigger 1 button on the controller.
setL1Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the left trigger 1 button on the controller.
setL2Axis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the left trigger 2 axis on the controller.
setL2Axis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the left trigger 2 axis on the controller.
setL2Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the left trigger 2 button on the controller.
setL2Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the left trigger 2 button on the controller.
setL3Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the L3 (left stick) button on the controller.
setL3Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the L3 (left stick) button on the controller.
setLed(boolean)
- Method in class edu.wpi.first.wpilibj.xrp.
XRPOnBoardIO
Sets the onboard LED.
setLED(int, Color)
- Method in interface edu.wpi.first.wpilibj.
LEDWriter
Sets the RGB value for an LED at a specific index on a LED buffer.
setLED(int, Color8Bit)
- Method in interface edu.wpi.first.wpilibj.
LEDWriter
Sets the RGB value for an LED at a specific index on a LED buffer.
setLeft(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double left = 1;
setLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double left = 1;
setLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double left = 1;
setLeftBumper(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxControllerSim.setLeftBumperButton(boolean)
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
setLeftBumperButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the left bumper button on the controller.
setLeftBumperButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the left bumper button on the controller.
setLeftStickButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the left stick button on the controller.
setLeftStickButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the left stick button on the controller.
setLeftTriggerAxis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the left trigger axis on the controller.
setLeftTriggerButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the left trigger button on the controller.
setLeftX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the left X value of the controller's joystick.
setLeftX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the left X value of the controller's joystick.
setLeftX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the left X value of the controller's joystick.
setLeftX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the left X value of the controller's joystick.
setLeftY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the left Y value of the controller's joystick.
setLeftY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the left Y value of the controller's joystick.
setLeftY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the left Y value of the controller's joystick.
setLeftY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the left Y value of the controller's joystick.
setLength(double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Set the ligament's length.
setLength(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Sets the length of the LED strip.
setLength(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Change the length of the LED strip.
setLength(int, int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Sets the length of the LED strip.
setLength(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
setLimitsDutyCycle(double, double)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Set the upper and lower limits of the analog trigger.
setLimitsRaw(int, int)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Set the upper and lower limits of the analog trigger.
setLimitsVoltage(double, double)
- Method in class edu.wpi.first.wpilibj.
AnalogTrigger
Set the upper and lower limits of the analog trigger.
setLineWeight(double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
Set the line thickness.
setLiveWindowBuilderFactory(Supplier<SendableBuilder>)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets the factory for LiveWindow builders.
setLogger(CameraServerJNI.LoggerFunction, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets logger.
setLong(String, long)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given long into the preferences table.
setMatchInfo(String, String, int, int, int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setMatchNumber(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setMatchNumber(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the match number.
setMatchTime(double)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setMatchTime(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the match timer.
setMatchType(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setMatchType(DriverStation.MatchType)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the match type.
setMathShared(MathShared)
- Static method in class edu.wpi.first.math.
MathSharedStore
Set the MathShared object.
setMaxOutput(double)
- Method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
Configure the scaling factor for using drive methods with motor controllers in a mode other
 than PercentVbus or to limit the maximum output.
setMaxPeriod(double)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the maximum period where the device is still considered "moving".
setMaxPeriod(double)
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Sets the maximum period before the tachometer is considered stopped.
setMaxPeriod(double)
- Method in interface edu.wpi.first.wpilibj.
CounterBase
Set the maximum time between edges to be considered stalled.
setMaxPeriod(double)
- Method in class edu.wpi.first.wpilibj.
Encoder
Deprecated.
Use setMinRate() in favor of this method. This takes unscaled periods and
     setMinRate() scales using value from setDistancePerPulse().
setMaxPeriod(double)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the max period of the encoder.
setMaxPeriod(int, double)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setMetadata(int, String)
- Method in class edu.wpi.first.util.datalog.
DataLog
Updates the metadata for an entry.
setMetadata(int, String, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Updates the metadata for an entry.
setMetadata(String)
- Method in class edu.wpi.first.util.datalog.
DataLogEntry
Updates the metadata for the entry.
setMetadata(String, long)
- Method in class edu.wpi.first.util.datalog.
DataLogEntry
Updates the metadata for the entry.
setMinRate(double)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the minimum rate of the device before the hardware reports it stopped.
setMockTime(long)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Set mock time.
setMode(SPI.Mode)
- Method in class edu.wpi.first.wpilibj.
SPI
Sets the mode for the SPI device.
setName(Sendable, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets the name of an object.
setName(Sendable, String, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets the name of an object with a channel number.
setName(Sendable, String, int, int)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets the name of an object with a module and channel number.
setName(Sendable, String, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets both the subsystem name and device name of an object.
setName(String)
- Method in class edu.wpi.first.wpilibj.
Notifier
Sets the name of the notifier.
setName(String)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the name of this device.
setName(String)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Sets the name of this Command.
setName(String)
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
Sets the name of this Subsystem.
setNetworkTableInstance(NetworkTableInstance)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Set the NetworkTable instance used for entries.
setNetworkTableInstance(NetworkTableInstance)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
SendableCameraWrapper
Sets NetworkTable instance used for camera publisher entries.
setNetworkTableInstance(NetworkTableInstance)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Set the NetworkTable instance used for entries.
setNetworkTablesFlushEnabled(boolean)
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Deprecated, for removal: This API element is subject to removal in a future version.
Deprecated without replacement.
setNextR(double...)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Set the next reference r.
setNextR(Matrix<States, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Set the next reference r.
setNominalVoltage(double)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double nominal_voltage = 1;
setNotifierName(int, String)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Sets the name of the notifier.
setNumber(Number)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setNumberArray(Number[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setNumCols(int)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_cols = 2;
setNumInputs(int)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_inputs = 2;
setNumOutputs(int)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_outputs = 3;
setNumRows(int)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
optional uint32 num_rows = 1;
setNumStates(int)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
optional uint32 num_states = 1;
setOmega(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double omega = 3;
setOneShotDuration(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
setOneShotDuration(int, int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Set the duration for a single solenoid shot.
setOneShotDuration(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
setOneShotDuration(int, int, int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Set the duration for a single solenoid shot.
setOptionsButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the options button on the controller.
setOptionsButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the options button on the controller.
setOrigin(AprilTagFieldLayout.OriginPosition)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Sets the origin based on a predefined enumeration of coordinate frame origins.
setOrigin(Pose3d)
- Method in class edu.wpi.first.apriltag.
AprilTagFieldLayout
Sets the origin for tag pose transformation.
setOutput(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Change the solenoid output.
setOutput(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DutyCycleSim
Change the duty cycle output.
setOutput(int, boolean)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Set a single HID output value for the HID.
setOutput(int, double)
- Static method in class edu.wpi.first.hal.simulation.
DutyCycleDataJNI
setOutputPort(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Change the output port.
setOutputPort(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
setOutputs(int)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Set all HID output values for the HID.
setOversampleBits(int)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Set the number of oversample bits.
setOversampleBits(int)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the amount of oversampling bits.
setOversampleBits(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setP(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the Proportional coefficient of the PID controller gain.
setP(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the proportional coefficient of the PID controller gain.
setP(Matrix<States, States>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Sets the entire error covariance matrix P.
setP(Matrix<States, States>)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Sets the entire error covariance matrix P.
setP(Matrix<States, States>)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Sets the error covariance matrix.
setP(Matrix<States, States>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Sets the entire error covariance matrix P.
setPause(boolean)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets whether DMA is paused.
setPause(int, boolean)
- Static method in class edu.wpi.first.hal.
DMAJNI
Pauses or unpauses a DMA transfer.
setPeriod(double)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the encoder period.
setPeriod(double)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Changes the period of the loop overrun watchdog.
setPeriod(int, double)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setPeriodCycles(int)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Sets the number of FPGA cycles that the input must hold steady to pass through this glitch
 filter.
setPeriodMultiplier(PWM.PeriodMultiplier)
- Method in class edu.wpi.first.wpilibj.
PWM
Slow down the PWM signal for old devices.
setPeriodNanoSeconds(long)
- Method in class edu.wpi.first.wpilibj.
DigitalGlitchFilter
Sets the number of nanoseconds that the input must hold steady to pass through this glitch
 filter.
setPeriodScale(int)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Set the PWM period scale.
setPeriodScale(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
setPersistent()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Make value persistent through program restarts.
setPersistent(boolean)
- Method in class edu.wpi.first.networktables.
Topic
Make value persistent through server restarts.
setPersistent(String)
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Makes a key's value persistent through program restarts.
setPID(double, double, double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the PID Controller gain parameters.
setPID(double, double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the PID Controller gain parameters.
setPin(int)
- Method in class edu.wpi.first.wpilibj.simulation.
DigitalPWMSim
Change the pin number.
setPin(int, int)
- Static method in class edu.wpi.first.hal.simulation.
DigitalPWMDataJNI
setPixelFormat(PixelFormat)
- Method in class edu.wpi.first.cscore.
VideoSource
Set the pixel format.
setPose(double, double, Rotation2d)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Set the pose from x, y, and rotation.
setPose(Pose2d)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Sets the system pose.
setPose(Pose2d)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Set the pose from a Pose object.
setPose(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional .wpi.proto.ProtobufPose2d pose = 4;
setPoses(Pose2d...)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Set multiple poses from a list of Pose objects.
setPoses(List<Pose2d>)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Set multiple poses from a list of Pose objects.
setPosition(double)
- Method in class edu.wpi.first.wpilibj.
PWM
Set the PWM value based on a position.
setPosition(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Set the PWM position.
setPosition(double)
- Method in class edu.wpi.first.wpilibj.xrp.
XRPServo
Set the servo position.
setPosition(double, double)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismRoot2d
Set the root's position.
setPosition(int, double)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
setPOV(int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the value of the default POV (port 0).
setPOV(int, int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the value of a given POV.
setPOVCount(int)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the POV count of this device.
setPressed(boolean)
- Method in class edu.wpi.first.wpilibj2.command.button.
InternalButton
Sets whether button is pressed.
setPressureSwitch(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
setPressureSwitch(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Set the value of the pressure switch.
setPressureSwitch(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
setPressureSwitch(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setPressureSwitch(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setProgramStarted()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
setProgramStarted()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Sets that the user program has started.
setProperties(String)
- Method in class edu.wpi.first.networktables.
Topic
Updates multiple topic properties.
setProperty(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets property value.
setProperty(String, String)
- Method in class edu.wpi.first.networktables.
Topic
Sets a property value.
setPSButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the PlayStation button on the controller.
setPSButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the PlayStation button on the controller.
setPulseDuration(double)
- Method in class edu.wpi.first.wpilibj.
Solenoid
Set the pulse duration in the pneumatics module.
setPulseLength(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Change the pulse length of this DIO port.
setPulseLength(int, double)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
setPulseLengthMode(double)
- Method in class edu.wpi.first.wpilibj.
Counter
Configure the counter to count in up or down based on the length of the input pulse.
setPulseMicrosecond(int)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Set the PWM pulse microsecond value.
setPulseMicrosecond(int, int)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
setPulseTimeMicroseconds(int)
- Method in class edu.wpi.first.wpilibj.
PWM
Set the PWM value directly to the hardware.
setPulseTimeMicroseconds(int, int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets a PWM channel to the desired pulse width in microseconds.
setPWMConfigMicroseconds(int, int, int, int, int, int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets the configuration settings for the PWM channel.
setPWMDisabled(int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets a PWM channel to be disabled.
setPwmEdgeTrigger(PWMMotorController, boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets a DMA PWMMotorController edge trigger.
setPwmEdgeTrigger(PWM, boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets a DMA PWM edge trigger.
setPWMEliminateDeadband(int, boolean)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets if the FPGA should output the center value if the input value is within the deadband.
setPWMPeriodScale(int, int)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets how how often the PWM signal is squelched, thus scaling the period.
setPWMPosition(int, double)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets a PWM channel to the desired position value.
setPWMRate(double)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Change the PWM frequency of the PWM output on a Digital Output line.
setPWMSpeed(int, double)
- Static method in class edu.wpi.first.hal.
PWMJNI
Sets a PWM channel to the desired scaled value.
setQ(Geometry3D.ProtobufQuaternion)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
optional .wpi.proto.ProtobufQuaternion q = 1;
setQuadThresholdParameters(AprilTagDetector.QuadThresholdParameters)
- Method in class edu.wpi.first.apriltag.
AprilTagDetector
Sets quad threshold parameters.
setR1Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the right trigger 1 button on the controller.
setR1Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the right trigger 1 button on the controller.
setR2Axis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the right trigger 2 axis on the controller.
setR2Axis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the right trigger 2 axis on the controller.
setR2Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the right trigger 2 button on the controller.
setR2Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the right trigger 2 button on the controller.
setR3Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the R3 (right stick) button on the controller.
setR3Button(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the R3 (right stick) button on the controller.
setRadioLEDState(int)
- Static method in class edu.wpi.first.hal.
LEDJNI
Set the state of the "Radio" LED.
setRadioLEDState(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setRadioLEDState(RobotController.RadioLEDState)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Set the state of the "Radio" LED.
setRadioLEDState(RobotController.RadioLEDState)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the state of the radio led.
setRange(int)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Change the range of this accelerometer.
setRange(int)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Change the range of this accelerometer.
setRange(int, int)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
setRange(int, int)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
setRange(ADXL345_I2C.Range)
- Method in class edu.wpi.first.wpilibj.
ADXL345_I2C
Set the measuring range of the accelerometer.
setRange(ADXL345_SPI.Range)
- Method in class edu.wpi.first.wpilibj.
ADXL345_SPI
Set the measuring range of the accelerometer.
setRange(ADXL362.Range)
- Method in class edu.wpi.first.wpilibj.
ADXL362
Set the measuring range of the accelerometer.
setRange(BuiltInAccelerometer.Range)
- Method in class edu.wpi.first.wpilibj.
BuiltInAccelerometer
Set the measuring range of the accelerometer.
setRangeCm(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SharpIRSim
Set the range in centimeters returned by the distance sensor.
setRangeInches(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SharpIRSim
Set the range in inches returned by the distance sensor.
setRangeInches(double)
- Method in class edu.wpi.first.wpilibj.simulation.
UltrasonicSim
Sets the range measurement.
setRangeMeters(double)
- Method in class edu.wpi.first.wpilibj.simulation.
UltrasonicSim
Sets the range measurement.
setRangeValid(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
UltrasonicSim
Sets if the range measurement is valid.
setRate(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXRS450_GyroSim
Sets the angular rate in degrees per second (clockwise positive).
setRate(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogGyroSim
Change the rate of the gyro.
setRate(double)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the rate of the encoder.
setRate(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogGyroDataJNI
setRate(int, double)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setRaw(byte[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(byte[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setRaw(byte[], int, int)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(byte[], int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setRaw(byte[], int, int, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(byte[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(int, long, byte[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets raw topic value.
setRaw(int, long, byte[], int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets raw topic value.
setRaw(int, long, ByteBuffer)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets raw topic value.
setRaw(int, long, ByteBuffer, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets raw topic value.
setRaw(ByteBuffer)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(ByteBuffer)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setRaw(ByteBuffer, int, int)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(ByteBuffer, int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setRaw(ByteBuffer, int, int, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRaw(ByteBuffer, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setRawAxis(int, double)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the value of a given axis.
setRawButton(int, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the value of a given button.
setReadBufferSize(int)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Specify the size of the input buffer.
setRearLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_left = 3;
setRearLeft(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_left = 3;
setRearLeft(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_left = 3;
setRearRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
optional double rear_right = 4;
setRearRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
optional double rear_right = 4;
setRearRight(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
optional .wpi.proto.ProtobufTranslation2d rear_right = 4;
setRecordingFileNameFormat(String)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Sets the file name format for new recording files to use.
setRedLed(boolean)
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Sets the red LED.
setRelay(int, boolean)
- Static method in class edu.wpi.first.hal.
RelayJNI
Sets the state of a relay output.
setReplayNumber(int)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setReplayNumber(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets the replay number.
setReset(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Change the reset property of the encoder.
setReset(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setResolution(int, int)
- Method in class edu.wpi.first.cscore.
MjpegServer
Set the stream resolution for clients that don't specify it.
setResolution(int, int)
- Method in class edu.wpi.first.cscore.
VideoSource
Set the resolution.
setRetained(boolean)
- Method in class edu.wpi.first.networktables.
Topic
Make the server retain the topic even when there are no publishers.
setReverse(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
RelaySim
Set whether the reverse direction is active.
setReverse(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
RelayDataJNI
setReversed(boolean)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Sets the reversed flag of the trajectory.
setReverseDirection(boolean)
- Method in class edu.wpi.first.wpilibj.counter.
ExternalDirectionCounter
Sets to reverse the counter direction.
setReverseDirection(boolean)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the Counter to return reversed sensing on the direction.
setReverseDirection(boolean)
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
Sets to reverse the counter direction.
setReverseDirection(boolean)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the direction sensing for this encoder.
setReverseDirection(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Set the reverse direction.
setReverseDirection(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setRGB(int, int, int, int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBuffer
Sets a specific led in the buffer.
setRGB(int, int, int, int)
- Method in class edu.wpi.first.wpilibj.
AddressableLEDBufferView
setRGB(int, int, int, int)
- Method in interface edu.wpi.first.wpilibj.
LEDWriter
Sets the RGB value for an LED at a specific index on a LED buffer.
setRight(double)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
optional double right = 2;
setRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
optional double right = 2;
setRight(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
optional double right = 2;
setRightBumper(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Deprecated, for removal: This API element is subject to removal in a future version.
Use
XboxControllerSim.setRightBumperButton(boolean)
instead. This function is deprecated for removal
     to make function names consistent to allow the HID classes to be automatically generated.
setRightBumperButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the right bumper button on the controller.
setRightBumperButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the right bumper button on the controller.
setRightStickButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the right stick button on the controller.
setRightStickButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the right stick button on the controller.
setRightTriggerAxis(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the right trigger axis on the controller.
setRightTriggerButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the right trigger button on the controller.
setRightX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the right X value of the controller's joystick.
setRightX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the right X value of the controller's joystick.
setRightX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the right X value of the controller's joystick.
setRightX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the right X value of the controller's joystick.
setRightY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the right Y value of the controller's joystick.
setRightY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the right Y value of the controller's joystick.
setRightY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the right Y value of the controller's joystick.
setRightY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the right Y value of the controller's joystick.
setRobotPose(double, double, Rotation2d)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Set the robot pose from x, y, and rotation.
setRobotPose(Pose2d)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
Field2d
Set the robot pose from a Pose object.
setRotation(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
setRotation(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufRotation2d rotation = 2;
setRotation(Geometry3D.ProtobufRotation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
setRotation(Geometry3D.ProtobufRotation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufRotation3d rotation = 2;
setRow(int, Matrix<N1, C>)
- Method in class edu.wpi.first.math.
Matrix
Sets a row to a given row vector.
setRumble(GenericHID.RumbleType, double)
- Method in class edu.wpi.first.wpilibj.
GenericHID
Set the rumble output for the HID.
setRumble(GenericHID.RumbleType, double)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandGenericHID
Set the rumble output for the HID.
setRunning(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
AddressableLEDSim
Change whether the LEDs are active.
setRunning(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
AddressableLEDDataJNI
setRuntimeType(int)
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
setRx(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rx = 4;
setRy(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double ry = 5;
setRz(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
optional double rz = 6;
setS(Matrix<States, States>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Sets the entire square-root error covariance matrix S.
setSafeState(Runnable)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
setSafeState(Runnable)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Set the function that should be called to set the Sendable into a safe state.
setSafeState(Runnable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Set the function that should be called to set the Sendable into a safe state.
setSafetyEnabled(boolean)
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Enable/disable motor safety for this device.
setSamplesToAverage(int)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
setSamplesToAverage(int)
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Sets the number of samples to average.
setSamplesToAverage(int)
- Method in class edu.wpi.first.wpilibj.
Encoder
Set the Samples to Average which specifies the number of samples of the timer to average when
 calculating the period.
setSamplesToAverage(int)
- Method in class edu.wpi.first.wpilibj.simulation.
EncoderSim
Set the samples-to-average value.
setSamplesToAverage(int, int)
- Static method in class edu.wpi.first.hal.simulation.
EncoderDataJNI
setSelected(String)
- Method in class edu.wpi.first.wpilibj.simulation.
SendableChooserSim
Set the selected option.
setSemiPeriodMode(boolean)
- Method in class edu.wpi.first.wpilibj.
Counter
Set Semi-period mode on this counter.
setSendConsoleLine(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setSendConsoleLine(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets suppression of DriverStation.sendConsoleLine messages.
setSendError(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setSendError(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Sets suppression of DriverStation.reportError and reportWarning messages.
setSensitivity(double)
- Method in class edu.wpi.first.wpilibj.
AnalogAccelerometer
Set the accelerometer sensitivity.
setSensitivity(double)
- Method in class edu.wpi.first.wpilibj.
AnalogGyro
Set the gyro sensitivity.
setSerialNumber(String)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setSerialNumber(String)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the serial number.
setServer(int, String[], int[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets server addresses and ports for client (without restarting client).
setServer(int, String, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets server address and port for client (without restarting client).
setServer(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server address and port for client (without restarting client).
setServer(String[])
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server addresses and port for client (without restarting client).
setServer(String[], int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server addresses and port for client (without restarting client).
setServer(String[], int[])
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server addresses and ports for client (without restarting client).
setServer(String, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server address and port for client (without restarting client).
setServerTeam(int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server addresses and port for client (without restarting client).
setServerTeam(int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Sets server addresses and port for client (without restarting client).
setServerTeam(int, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets server addresses and port for client (without restarting client).
setSetpoint(double)
- Method in class edu.wpi.first.math.controller.
BangBangController
Sets the setpoint for the bang-bang controller.
setSetpoint(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the setpoint for the PIDController.
setSetpoint(double)
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Sets the setpoint for the subsystem.
setShareButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the share button on the controller.
setSimDevice(SimDevice)
- Method in class edu.wpi.first.wpilibj.
AnalogInput
Indicates this input is used by a simulated device.
setSimDevice(SimDevice)
- Method in class edu.wpi.first.wpilibj.
DigitalInput
Indicates this input is used by a simulated device.
setSimDevice(SimDevice)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Indicates this input is used by a simulated device.
setSimDevice(SimDevice)
- Method in class edu.wpi.first.wpilibj.
Encoder
Indicates this input is used by a simulated device.
setSimDeviceEnabled(String, boolean)
- Static method in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI
setSimValue(int, HALValue)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value.
setSimValueBoolean(int, boolean)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value (boolean).
setSimValueDouble(int, double)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value (double).
setSimValueEnum(int, int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value (enum).
setSimValueInt(int, int)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value (int).
setSimValueLong(int, long)
- Static method in class edu.wpi.first.hal.
SimDeviceJNI
Sets a simulated value (long).
setSinkConfigJson(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets sink configuration JSON.
setSinkDescription(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets sink description.
setSinkEnabled(int, boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets sink enable.
setSinkSource(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets sink source.
setSmartDashboardType(String)
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
setSmartDashboardType(String)
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Set the string representation of the named data type that will be used by the smart dashboard
 for this sendable.
setSmartDashboardType(String)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Set the string representation of the named data type that will be used by the smart dashboard
 for this sendable.
setSolenoidOutput(int, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
CTREPCMSim
setSolenoidOutput(int, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PneumaticsBaseSim
Change the solenoid output on a specific channel.
setSolenoidOutput(int, boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
REVPHSim
setSolenoidOutput(int, int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
CTREPCMDataJNI
setSolenoidOutput(int, int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
REVPHDataJNI
setSolenoids(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
setSolenoids(int, int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Sets solenoids on a pneumatics module.
setSolenoids(int, int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
setSolenoids(int, int, int)
- Static method in class edu.wpi.first.hal.
CTREPCMJNI
Sets solenoids on a pneumatics module.
setSolenoids(int, int, int)
- Static method in class edu.wpi.first.hal.
REVPHJNI
Sets solenoids on a PH.
setSource(VideoSource)
- Method in class edu.wpi.first.cscore.
VideoSink
Configure which source should provide frames to this sink.
setSourceConfigJson(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source configuration JSON.
setSourceConnected(int, boolean)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets whether source is connected.
setSourceConnectionStrategy(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source connection strategy.
setSourceDescription(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source description.
setSourceEnumPropertyChoices(int, int, String[])
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets list of possible property values.
setSourceFPS(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source FPS.
setSourcePixelFormat(int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source pixel format.
setSourceResolution(int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source resolution.
setSourceVideoMode(int, int, int, int, int)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets source video mode.
setSpeed(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
optional double speed = 1;
setSpeed(double)
- Method in class edu.wpi.first.wpilibj.
PWM
Set the PWM value based on a speed.
setSpeed(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Set the PWM speed.
setSpeed(int, double)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
setSquareButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the square button on the controller.
setSquareButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the square button on the controller.
setStadiaButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the stadia button on the controller.
setStallCurrent(double)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_current = 3;
setStallTorque(double)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
optional double stall_torque = 2;
setStartButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the start button on the controller.
setStartVelocity(double)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Sets the start velocity of the trajectory.
setStartVelocity(LinearVelocity)
- Method in class edu.wpi.first.math.trajectory.
TrajectoryConfig
Sets the start velocity of the trajectory.
setState(double, double)
- Method in class edu.wpi.first.wpilibj.simulation.
DCMotorSim
Sets the state of the DC motor.
setState(double, double)
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Sets the elevator's state.
setState(double, double)
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Sets the arm's state.
setState(Matrix<N7, N1>)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Sets the system state.
setState(Matrix<States, N1>)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Sets the system state.
setStatus(double, int, int, int, int)
- Method in class edu.wpi.first.hal.can.
CANStatus
Set CAN bus status.
setStreamData(int, int, long)
- Method in class edu.wpi.first.hal.
CANStreamMessage
API used from JNI to set the data.
setString(int, long, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setString(String)
- Method in class edu.wpi.first.cscore.
VideoProperty
Sets the string property value.
setString(String)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setString(String)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setString(String, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setString(String, String)
- Static method in class edu.wpi.first.wpilibj.
Preferences
Puts the given string into the preferences table.
setStringArray(int, long, String[])
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic value.
setStringArray(String[])
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setStringArray(String[])
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setStringArray(String[], long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setStringField(StructFieldDescriptor, String)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a character or character array field.
setStringProperty(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets property value to a string.
setStructField(StructFieldDescriptor, DynamicStruct)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a struct field.
setStructField(StructFieldDescriptor, DynamicStruct, int)
- Method in class edu.wpi.first.util.struct.
DynamicStruct
Sets the value of a struct field.
setSubsystem(Sendable, String)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Sets the subsystem name of an object.
setSubsystem(String)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Sets the subsystem name of this Command.
setSubsystem(String)
- Method in class edu.wpi.first.wpilibj2.command.
SubsystemBase
Sets the subsystem name of this Subsystem.
setSwitchableChannel(boolean)
- Method in class edu.wpi.first.wpilibj.
PowerDistribution
Sets the PDH switchable channel on or off.
setSwitchableChannel(int, boolean)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Power on/off switchable channel.
setSwitchableChannelNoError(int, boolean)
- Static method in class edu.wpi.first.hal.
PowerDistributionJNI
Power on/off switchable channel without throwing any errors.
setSyncTime(int)
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Sets the sync time.
setSyncTime(int, int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Sets the sync time.
setTable(NetworkTable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Set the network table.
setTeamNumber(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setTeamNumber(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the team number.
setTelemetryPeriod(double)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets telemetry period.
setTemperature(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Define the PDP temperature.
setTemperature(int, double)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
setTest(boolean)
- Static method in class edu.wpi.first.hal.simulation.
DriverStationDataJNI
setTest(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
DriverStationSim
Change whether the DS is in test.
setText(String)
- Method in class edu.wpi.first.wpilibj.
Alert
Updates current alert text.
setThrottle(double)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the throttle value of the joystick.
setThrottleChannel(int)
- Method in class edu.wpi.first.wpilibj.
Joystick
Set the channel associated with the throttle axis.
setThrottleChannel(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Set the channel associated with the throttle axis.
setTime(double)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double time = 1;
setTimedTrigger(double)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets DMA to trigger at an interval.
setTimedTrigger(int, double)
- Static method in class edu.wpi.first.hal.
DMAJNI
Sets DMA transfers to occur at a specific timed interval.
setTimedTriggerCycles(int)
- Method in class edu.wpi.first.wpilibj.
DMA
Sets number of DMA cycles to trigger.
setTimedTriggerCycles(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Sets DMA transfers to occur at a specific timed interval in FPGA cycles.
setTimeInfo(long, TimestampSource)
- Method in class edu.wpi.first.util.
RawFrame
Update this frame's timestamp info.
setTimeout(double)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Configure the timeout of the serial m_port.
setTimeout(double)
- Method in class edu.wpi.first.wpilibj.
Watchdog
Sets the watchdog's timeout.
setTimeSource(LongSupplier)
- Static method in class edu.wpi.first.wpilibj.
RobotController
Sets a new source to provide the clock time in microseconds.
setTolerance(double)
- Method in class edu.wpi.first.math.controller.
BangBangController
Sets the error within which atSetpoint will return true.
setTolerance(double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the error which is considered tolerable for use with atSetpoint().
setTolerance(double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the error which is considered tolerable for use with atSetpoint().
setTolerance(double, double)
- Method in class edu.wpi.first.math.controller.
PIDController
Sets the error which is considered tolerable for use with atSetpoint().
setTolerance(double, double)
- Method in class edu.wpi.first.math.controller.
ProfiledPIDController
Sets the error which is considered tolerable for use with atSetpoint().
setTolerance(Pose2d)
- Method in class edu.wpi.first.math.controller.
HolonomicDriveController
Sets the pose error which is considered tolerance for use with atReference().
setTolerance(Pose2d)
- Method in class edu.wpi.first.math.controller.
LTVUnicycleController
Sets the pose error which is considered tolerable for use with atReference().
setTolerance(Pose2d)
- Method in class edu.wpi.first.math.controller.
RamseteController
Sets the pose error which is considered tolerable for use with atReference().
setTolerance(Pose2d, double, double)
- Method in class edu.wpi.first.math.controller.
LTVDifferentialDriveController
Sets the pose error which is considered tolerable for use with atReference().
setTop(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the top state of the joystick.
setTopicCached(int, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic caching.
setTopicPersistent(int, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic persistency.
setTopicProperties(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic properties.
setTopicProperty(int, String, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets topic property.
setTopicRetained(int, boolean)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Sets whether topic is retained.
setTouchpad(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS4ControllerSim.setTouchpadButton(boolean)
instead. This function is deprecated for removal to
     make function names consistent to allow the HID classes to be automatically generated.
setTouchpad(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Deprecated, for removal: This API element is subject to removal in a future version.
Use
PS5ControllerSim.setTouchpadButton(boolean)
instead. This function is deprecated for removal to
     make function names consistent to allow the HID classes to be automatically generated.
setTouchpadButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the touchpad button on the controller.
setTouchpadButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the touchpad button on the controller.
setTrackWidth(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
optional double track_width = 1;
setTrajectory(Trajectory)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
FieldObject2d
Sets poses from a trajectory.
setTranslation(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
setTranslation(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
optional .wpi.proto.ProtobufTranslation2d translation = 1;
setTranslation(Geometry3D.ProtobufTranslation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
setTranslation(Geometry3D.ProtobufTranslation3d)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
optional .wpi.proto.ProtobufTranslation3d translation = 1;
setTriangleButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS4ControllerSim
Change the value of the triangle button on the controller.
setTriangleButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PS5ControllerSim
Change the value of the triangle button on the controller.
setTrigger(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the trigger value of the joystick.
setTriggerLowerBound(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Change the lower bound.
setTriggerLowerBound(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
setTriggerUpperBound(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogTriggerSim
Change the upper bound.
setTriggerUpperBound(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogTriggerDataJNI
setTwist(double)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the twist value of the joystick.
setTwistChannel(int)
- Method in class edu.wpi.first.wpilibj.
Joystick
Set the channel associated with the twist axis.
setTwistChannel(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Set the channel associated with the twist axis.
setType(GenericHID.HIDType)
- Method in class edu.wpi.first.wpilibj.simulation.
GenericHIDSim
Set the type of this device.
setType(String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Sets the component type.
setupAnalogGyro(int)
- Static method in class edu.wpi.first.hal.
AnalogGyroJNI
Sets up an analog gyro with the proper offsets and settings for the KOP analog gyro.
setUpdateTable(Runnable)
- Method in interface edu.wpi.first.networktables.
NTSendableBuilder
Set the function that should be called to update the network table for things other than
 properties.
setUpdateTable(Runnable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Set the function that should be called to update the network table for things other than
 properties.
setUpdateWhenEmpty(boolean)
- Method in class edu.wpi.first.wpilibj.
Counter
Select whether you want to continue updating the event timer output when there are no samples
 captured.
setUpdateWhenEmpty(boolean)
- Method in class edu.wpi.first.wpilibj.counter.
Tachometer
Sets if to update when empty.
setUpDownCounterMode()
- Method in class edu.wpi.first.wpilibj.
Counter
Set standard up / down counting mode on this counter.
setUpEdgeConfiguration(EdgeConfiguration)
- Method in class edu.wpi.first.wpilibj.counter.
UpDownCounter
Sets the configuration for the up source.
setUpSource(int)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the up source for the counter as a digital input channel.
setUpSource(AnalogTrigger, AnalogTriggerOutput.AnalogTriggerType)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the up counting source to be an analog trigger.
setUpSource(DigitalSource)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the source object that causes the counter to count up.
setUpSourceEdge(boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
Counter
Set the edge sensitivity on an up counting source.
setUrls(String[])
- Method in class edu.wpi.first.cscore.
HttpCamera
Change the URLs used to connect to the camera.
setUsbCameraPath(int, String)
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Sets USB camera path.
setUserActive3V3(boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserActive3V3(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 3.3V rail active state.
setUserActive5V(boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserActive5V(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 5V rail active state.
setUserActive6V(boolean)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserActive6V(boolean)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 6V rail active state.
setUserCurrent3V3(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserCurrent3V3(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 3.3V rail current.
setUserCurrent5V(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserCurrent5V(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 5V rail current.
setUserCurrent6V(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserCurrent6V(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 6V rail current.
setUserEnabled3V3(boolean)
- Static method in class edu.wpi.first.hal.
PowerJNI
Enables or disables the 3V3 rail.
setUserEnabled5V(boolean)
- Static method in class edu.wpi.first.hal.
PowerJNI
Enables or disables the 5V rail.
setUserEnabled6V(boolean)
- Static method in class edu.wpi.first.hal.
PowerJNI
Enables or disables the 6V rail.
setUserFaults3V3(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserFaults3V3(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 3.3V rail number of faults.
setUserFaults5V(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserFaults5V(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 5V rail number of faults.
setUserFaults6V(int)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserFaults6V(int)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Set the 6V rail number of faults.
setUserVoltage3V3(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserVoltage3V3(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 3.3V rail voltage.
setUserVoltage5V(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserVoltage5V(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 5V rail voltage.
setUserVoltage6V(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setUserVoltage6V(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the 6V rail voltage.
setValue(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
DIOSim
Change the DIO value.
setValue(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
optional double value = 1;
setValue(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
DIODataJNI
setValue(HALValue)
- Method in class edu.wpi.first.hal.
SimValue
Sets the simulated value.
setValue(Object)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setValue(Object)
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Sets the entry's value.
setValue(Object, long)
- Method in interface edu.wpi.first.networktables.
GenericPublisher
Publish a new value.
setVelocity(double)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
optional double velocity = 2;
setVideoMode(VideoMode)
- Method in class edu.wpi.first.cscore.
VideoSource
Set the video mode.
setVideoMode(PixelFormat, int, int, int)
- Method in class edu.wpi.first.cscore.
VideoSource
Set the video mode.
setVInCurrent(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setVInCurrent(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the Vin current.
setVInVoltage(double)
- Static method in class edu.wpi.first.hal.simulation.
RoboRioDataJNI
setVInVoltage(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
RoboRioSim
Define the Vin voltage.
setVisionMeasurementStdDevs(Matrix<N3, N1>)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Sets the pose estimator's trust of global measurements.
setVisionMeasurementStdDevs(Matrix<N4, N1>)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Sets the pose estimator's trust of global measurements.
setVoltage(double)
- Method in class edu.wpi.first.wpilibj.
AnalogOutput
Set the value of the analog output.
setVoltage(double)
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Sets the voltage output of the MotorController.
setVoltage(double)
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
setVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogInputSim
Change the voltage.
setVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
AnalogOutputSim
Set the analog output voltage.
setVoltage(double)
- Method in class edu.wpi.first.wpilibj.simulation.
PDPSim
Set the PDP voltage.
setVoltage(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogInDataJNI
setVoltage(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AnalogOutDataJNI
setVoltage(int, double)
- Static method in class edu.wpi.first.hal.simulation.
PowerDistributionDataJNI
setVoltage(Voltage)
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Sets the voltage output of the MotorController.
setVoltagePercentageRange(double, double)
- Method in class edu.wpi.first.wpilibj.
AnalogEncoder
Set the encoder voltage percentage range.
setVx(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vx = 1;
setVy(double)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
optional double vy = 2;
setW(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double w = 1;
setWhiteBalanceAuto()
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the white balance to auto.
setWhiteBalanceHoldCurrent()
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the white balance to hold current.
setWhiteBalanceManual(int)
- Method in class edu.wpi.first.cscore.
VideoCamera
Set the white balance to manual, with specified color temperature.
setWriteBufferMode(SerialPort.WriteBufferMode)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Specify the flushing behavior of the output buffer.
setWriteBufferSize(int)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Specify the size of the output buffer.
setX(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double x = 1;
setX(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double x = 2;
setX(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double x = 1;
setX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL345Sim
Sets the X acceleration.
setX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL362Sim
Sets the X acceleration.
setX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Change the X axis value of the accelerometer.
setX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the X value of the joystick.
setX(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Change the X axis value of the accelerometer.
setX(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
setX(int, double)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
setXButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the X button on the controller.
setXButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the X button on the controller.
setXChannel(int)
- Method in class edu.wpi.first.wpilibj.
Joystick
Set the channel associated with the X axis.
setXChannel(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Set the channel associated with the X axis.
setXhat(int, double)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Set an element of the initial state estimate x-hat.
setXhat(int, double)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Set an element of the initial state estimate x-hat.
setXhat(int, double)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Sets an element of the state estimate.
setXhat(int, double)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Set an element of the initial state estimate x-hat.
setXhat(int, double)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Set an element of the initial state estimate x-hat.
setXhat(Matrix<States, N1>)
- Method in class edu.wpi.first.math.estimator.
ExtendedKalmanFilter
Set initial state estimate x-hat.
setXhat(Matrix<States, N1>)
- Method in class edu.wpi.first.math.estimator.
KalmanFilter
Set initial state estimate x-hat.
setXhat(Matrix<States, N1>)
- Method in interface edu.wpi.first.math.estimator.
KalmanTypeFilter
Sets the state estimate.
setXhat(Matrix<States, N1>)
- Method in class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Set initial state estimate x-hat.
setXhat(Matrix<States, N1>)
- Method in class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Set initial state estimate x-hat.
setXHat(int, double)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Set an element of the initial state estimate x-hat.
setXHat(Matrix<States, N1>)
- Method in class edu.wpi.first.math.system.
LinearSystemLoop
Set the initial state estimate x-hat.
setXSemiAxis(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double xSemiAxis = 2;
setXWidth(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double xWidth = 2;
setY(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
optional double y = 2;
setY(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double y = 3;
setY(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double y = 2;
setY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL345Sim
Sets the Y acceleration.
setY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL362Sim
Sets the Y acceleration.
setY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Change the Y axis value of the accelerometer.
setY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the Y value of the joystick.
setY(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Change the Y axis value of the accelerometer.
setY(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
setY(int, double)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
setYawAxis(ADIS16448_IMU.IMUAxis)
- Method in class edu.wpi.first.wpilibj.
ADIS16448_IMU
Sets the yaw axis.
setYButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Change the value of the Y button on the controller.
setYButton(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Change the value of the Y button on the controller.
setYChannel(int)
- Method in class edu.wpi.first.wpilibj.
Joystick
Set the channel associated with the Y axis.
setYChannel(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Set the channel associated with the Y axis.
setYellowLed(boolean)
- Method in class edu.wpi.first.wpilibj.romi.
OnBoardIO
Sets the yellow LED.
setYSemiAxis(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
optional double ySemiAxis = 3;
setYWidth(double)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
optional double yWidth = 3;
setZ(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
optional double z = 4;
setZ(double)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
optional double z = 3;
setZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL345Sim
Sets the Z acceleration.
setZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ADXL362Sim
Sets the Z acceleration.
setZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
BuiltInAccelerometerSim
Change the Z axis value of the accelerometer.
setZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
JoystickSim
Set the Z value of the joystick.
setZ(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Change the Z axis value of the accelerometer.
setZ(int, double)
- Static method in class edu.wpi.first.hal.simulation.
AccelerometerDataJNI
setZ(int, double)
- Static method in class edu.wpi.first.hal.simulation.
SPIAccelerometerDataJNI
setZChannel(int)
- Method in class edu.wpi.first.wpilibj.
Joystick
Set the channel associated with the Z axis.
setZChannel(int)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Set the channel associated with the Z axis.
setZero(double)
- Method in class edu.wpi.first.wpilibj.
AnalogAccelerometer
Set the voltage that corresponds to 0 G.
setZeroLatch()
- Method in class edu.wpi.first.wpilibj.
PWM
Latches PWM to zero.
setZeroLatch(boolean)
- Method in class edu.wpi.first.wpilibj.simulation.
PWMSim
Define whether the PWM has been zero latched.
setZeroLatch(int, boolean)
- Static method in class edu.wpi.first.hal.simulation.
PWMDataJNI
share()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the share button's digital signal.
share(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the share button's digital signal.
share(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the share button's digital signal.
SharpIR
- Class in
edu.wpi.first.wpilibj
SharpIR analog distance sensor class.
SharpIR(int, double, double, double, double)
- Constructor for class edu.wpi.first.wpilibj.
SharpIR
Manually construct a SharpIR object.
SharpIRSim
- Class in
edu.wpi.first.wpilibj.simulation
Simulation class for Sharp IR sensors.
SharpIRSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SharpIRSim
Constructor.
SharpIRSim(SharpIR)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SharpIRSim
Constructor.
Shuffleboard
- Class in
edu.wpi.first.wpilibj.shuffleboard
The Shuffleboard class provides a mechanism with which data can be added and laid out in the
 Shuffleboard dashboard application from a robot program.
ShuffleboardComponent
<
C
extends
ShuffleboardComponent
<
C
>> - Class in
edu.wpi.first.wpilibj.shuffleboard
A generic component in Shuffleboard.
ShuffleboardComponent(ShuffleboardContainer, String)
- Constructor for class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Constructs a ShuffleboardComponent.
ShuffleboardComponent(ShuffleboardContainer, String, String)
- Constructor for class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Constructs a ShuffleboardComponent.
ShuffleboardContainer
- Interface in
edu.wpi.first.wpilibj.shuffleboard
Common interface for objects that can contain shuffleboard components.
ShuffleboardLayout
- Class in
edu.wpi.first.wpilibj.shuffleboard
A layout in a Shuffleboard tab.
ShuffleboardTab
- Class in
edu.wpi.first.wpilibj.shuffleboard
Represents a tab in the Shuffleboard dashboard.
shutdown()
- Static method in class edu.wpi.first.hal.
HAL
Call this to shut down HAL.
silenceJoystickConnectionWarning(boolean)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Allows the user to specify whether they want joystick connection warnings to be printed to the
 console.
SimBoolean
- Class in
edu.wpi.first.hal
A wrapper around a simulator boolean value handle.
SimBoolean(int)
- Constructor for class edu.wpi.first.hal.
SimBoolean
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValueBoolean().
SimDevice
- Class in
edu.wpi.first.hal
A wrapper around a simulator device handle.
SimDevice(int)
- Constructor for class edu.wpi.first.hal.
SimDevice
Wraps a simulated device handle as returned by SimDeviceJNI.createSimDevice().
SimDevice.Direction
- Enum Class in
edu.wpi.first.hal
Sim device direction.
SimDeviceCallback
- Interface in
edu.wpi.first.hal.simulation
SimDeviceDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for sim device data.
SimDeviceDataJNI.SimDeviceInfo
- Class in
edu.wpi.first.hal.simulation
SimDeviceDataJNI.SimValueInfo
- Class in
edu.wpi.first.hal.simulation
SimDeviceInfo(String, int)
- Constructor for class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimDeviceInfo
SimDeviceInfo constructor.
SimDeviceJNI
- Class in
edu.wpi.first.hal
SimDevice JNI Functions.
SimDeviceSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control the simulation side of a SimDevice.
SimDeviceSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Constructs a SimDeviceSim.
SimDeviceSim(String)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Constructs a SimDeviceSim.
SimDeviceSim(String, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Constructs a SimDeviceSim.
SimDeviceSim(String, int, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SimDeviceSim
Constructs a SimDeviceSim.
SimDouble
- Class in
edu.wpi.first.hal
A wrapper around a simulator double value handle.
SimDouble(int)
- Constructor for class edu.wpi.first.hal.
SimDouble
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValueDouble().
SimEnum
- Class in
edu.wpi.first.hal
A wrapper around a simulator enum value handle.
SimEnum(int)
- Constructor for class edu.wpi.first.hal.
SimEnum
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValueEnum().
SimHooks
- Class in
edu.wpi.first.wpilibj.simulation
Simulation hooks.
SimInt
- Class in
edu.wpi.first.hal
A wrapper around a simulator int value handle.
SimInt(int)
- Constructor for class edu.wpi.first.hal.
SimInt
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValueInt().
SimLong
- Class in
edu.wpi.first.hal
A wrapper around a simulator long value handle.
SimLong(int)
- Constructor for class edu.wpi.first.hal.
SimLong
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValueLong().
simPeriodicAfter()
- Static method in class edu.wpi.first.hal.
HAL
Runs SimPeriodicAfter callbacks.
simPeriodicBefore()
- Static method in class edu.wpi.first.hal.
HAL
Runs SimPeriodicBefore callbacks.
SimpleMotorFeedforward
- Class in
edu.wpi.first.math.controller
A helper class that computes feedforward outputs for a simple permanent-magnet DC motor.
SimpleMotorFeedforward(double, double)
- Constructor for class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Creates a new SimpleMotorFeedforward with the specified gains.
SimpleMotorFeedforward(double, double, double)
- Constructor for class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Creates a new SimpleMotorFeedforward with the specified gains and period.
SimpleMotorFeedforward(double, double, double, double)
- Constructor for class edu.wpi.first.math.controller.
SimpleMotorFeedforward
Creates a new SimpleMotorFeedforward with the specified gains and period.
SimpleMotorFeedforwardProto
- Class in
edu.wpi.first.math.controller.proto
SimpleMotorFeedforwardProto()
- Constructor for class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
SimpleMotorFeedforwardStruct
- Class in
edu.wpi.first.math.controller.struct
SimpleMotorFeedforwardStruct()
- Constructor for class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
SimpleWidget
- Class in
edu.wpi.first.wpilibj.shuffleboard
A Shuffleboard widget that handles a single data point such as a number or string.
SimulatedAnnealing
<
State
> - Class in
edu.wpi.first.math.optimization
An implementation of the Simulated Annealing stochastic nonlinear optimization method.
SimulatedAnnealing(double, Function<State, State>, ToDoubleFunction<State>)
- Constructor for class edu.wpi.first.math.optimization.
SimulatedAnnealing
Constructor for Simulated Annealing that can be used for the same functions but with different
 initial states.
simulationInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Robot-wide simulation initialization code should go here.
simulationPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic simulation code should go here.
simulationPeriodic()
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
This method is called periodically by the
CommandScheduler
.
SimulatorJNI
- Class in
edu.wpi.first.hal.simulation
JNI for simulator.
SimValue
- Class in
edu.wpi.first.hal
A wrapper around a simulator value handle.
SimValue(int)
- Constructor for class edu.wpi.first.hal.
SimValue
Wraps a simulated value handle as returned by SimDeviceJNI.createSimValue().
SimValueCallback
- Interface in
edu.wpi.first.hal.simulation
SimValueInfo(String, int, int, int, long, double)
- Constructor for class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimValueInfo
SimValueInfo constructor.
SingleJointedArmSim
- Class in
edu.wpi.first.wpilibj.simulation
Represents a simulated single jointed arm mechanism.
SingleJointedArmSim(LinearSystem<N2, N1, N2>, DCMotor, double, double, double, double, boolean, double, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Creates a simulated arm mechanism.
SingleJointedArmSim(DCMotor, double, double, double, double, double, boolean, double, double...)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Creates a simulated arm mechanism.
singlePoleIIR(double, double)
- Static method in class edu.wpi.first.math.filter.
LinearFilter
Creates a one-pole IIR low-pass filter of the form: y[n] = (1-gain) x[n] + gain y[n-1] where
 gain = e
-dt / T
, T is the time constant in seconds.
sinkHandle
- Variable in class edu.wpi.first.cscore.
VideoEvent
The sink handle.
size
- Variable in enum class edu.wpi.first.util.struct.
StructFieldType
The size (in bytes) of the data type.
size()
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Gets the number of key-value pairs currently contained in the map.
size()
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Retrieves the number of elements in the set.
size()
- Method in class edu.wpi.first.util.
CircularBuffer
Returns number of elements in buffer.
size()
- Method in class edu.wpi.first.util.
DoubleCircularBuffer
Returns number of elements in buffer.
SkipCleanup
- Annotation Interface in
edu.wpi.first.util.cleanup
Attribute for telling JVM to skip object cleanup.
slewRateLimit(Translation2d, Translation2d, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Limits translation velocity.
slewRateLimit(Translation3d, Translation3d, double, double)
- Static method in class edu.wpi.first.math.
MathUtil
Limits translation velocity.
SlewRateLimiter
- Class in
edu.wpi.first.math.filter
A class that limits the rate of change of an input value.
SlewRateLimiter(double)
- Constructor for class edu.wpi.first.math.filter.
SlewRateLimiter
Creates a new SlewRateLimiter with the given positive rate limit and negative rate limit of
 -rateLimit.
SlewRateLimiter(double, double, double)
- Constructor for class edu.wpi.first.math.filter.
SlewRateLimiter
Creates a new SlewRateLimiter with the given positive and negative rate limits and initial
 value.
slice(int...)
- Method in class edu.wpi.first.math.system.
LinearSystem
Returns the LinearSystem with the outputs listed in outputIndices.
SmartDashboard
- Class in
edu.wpi.first.wpilibj.smartdashboard
The
SmartDashboard
class is the bridge between robot programs and the SmartDashboard on
 the laptop.
Solenoid
- Class in
edu.wpi.first.wpilibj
Solenoid class for running high voltage Digital Output on a pneumatics module.
Solenoid(int, PneumaticsModuleType, int)
- Constructor for class edu.wpi.first.wpilibj.
Solenoid
Constructs a solenoid for a specified module and type.
Solenoid(PneumaticsModuleType, int)
- Constructor for class edu.wpi.first.wpilibj.
Solenoid
Constructs a solenoid for a default module and specified type.
SolenoidOverCurrent
- Variable in class edu.wpi.first.hal.
REVPHFaults
An overcurrent event occurred on a solenoid output.
SolenoidOverCurrent
- Variable in class edu.wpi.first.hal.
REVPHStickyFaults
An overcurrent event occurred on a solenoid output.
SolenoidSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated
Solenoid
.
SolenoidSim(int, PneumaticsModuleType, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Constructs for a solenoid on a pneumatics module of the given type and ID.
SolenoidSim(PneumaticsModuleType, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Constructs for a solenoid on a pneumatics module of the given type and default ID.
SolenoidSim(PneumaticsBaseSim, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SolenoidSim
Constructs for a solenoid on the given pneumatics module.
solid(Color)
- Static method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that displays a single static color along the entire length of the LED strip.
solve(Pose2d[], int)
- Method in class edu.wpi.first.math.path.
TravelingSalesman
Finds the path through every pose that minimizes the cost.
solve(Matrix<R, C2>)
- Method in class edu.wpi.first.math.
Matrix
Returns the solution x to the equation Ax = b, where A is "this" matrix.
solve(State, int)
- Method in class edu.wpi.first.math.optimization.
SimulatedAnnealing
Runs the Simulated Annealing algorithm.
solveFullPivHouseholderQr(double[], int, int, double[], int, int, double[])
- Static method in class edu.wpi.first.math.jni.
EigenJNI
Solves the least-squares problem Ax=B using a QR decomposition with full pivoting.
solveFullPivHouseholderQr(Matrix<R2, C2>)
- Method in class edu.wpi.first.math.
Matrix
Solves the least-squares problem Ax=B using a QR decomposition with full pivoting, where this
 matrix is A.
sourceHandle
- Variable in class edu.wpi.first.cscore.
VideoEvent
The source handle.
Spark
- Class in
edu.wpi.first.wpilibj.motorcontrol
REV Robotics SPARK Motor Controller.
Spark(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
Spark
Constructor.
speedMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
SwerveModuleState
Speed of the wheel of the module.
SPI
- Class in
edu.wpi.first.wpilibj
Represents an SPI bus port.
SPI(SPI.Port)
- Constructor for class edu.wpi.first.wpilibj.
SPI
Constructor.
SPI_MODE0
- Static variable in class edu.wpi.first.hal.
SPIJNI
Clock idle low, data sampled on rising edge.
SPI_MODE1
- Static variable in class edu.wpi.first.hal.
SPIJNI
Clock idle low, data sampled on falling edge.
SPI_MODE2
- Static variable in class edu.wpi.first.hal.
SPIJNI
Clock idle high, data sampled on falling edge.
SPI_MODE3
- Static variable in class edu.wpi.first.hal.
SPIJNI
Clock idle high, data sampled on rising edge.
SPI.Mode
- Enum Class in
edu.wpi.first.wpilibj
SPI mode.
SPI.Port
- Enum Class in
edu.wpi.first.wpilibj
SPI port.
SPIAccelerometerDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for SPI accelerometer data.
SPIAccelerometerSim
- Class in
edu.wpi.first.wpilibj.simulation
A class to control a simulated accelerometer over SPI.
SPIAccelerometerSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
SPIAccelerometerSim
Construct a new simulation object.
spiClose(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Closes the SPI port.
spiConfigureAutoStall(int, int, int, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Configure the Auto SPI Stall time between reads.
SPIDataJNI
- Class in
edu.wpi.first.hal.simulation
JNI for SPI data.
spiForceAutoRead(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Immediately forces an SPI read to happen.
spiFreeAuto(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Frees an SPI automatic accumulator.
spiGetAutoDroppedCount(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Gets the count of how many SPI accumulations have been missed.
spiGetMode(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Gets the SPI Mode.
spiInitAuto(int, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Initializes the SPI automatic accumulator.
spiInitialize(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Initializes the SPI port.
SPIJNI
- Class in
edu.wpi.first.hal
SPI HAL JNI functions.
spiRead(int, boolean, ByteBuffer, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Executes a read from the device.
SpiReadAutoReceiveBufferCallback
- Interface in
edu.wpi.first.hal.simulation
spiReadAutoReceivedData(int, int[], int, double)
- Static method in class edu.wpi.first.hal.
SPIJNI
Reads data received by the SPI accumulator.
spiReadAutoReceivedData(int, ByteBuffer, int, double)
- Static method in class edu.wpi.first.hal.
SPIJNI
Reads data received by the SPI accumulator.
spiReadB(int, boolean, byte[], int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Executes a read from the device.
spiSetAutoTransmitData(int, byte[], int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the data to be transmitted to the device to initiate a read.
spiSetChipSelectActiveHigh(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the CS Active high for a SPI port.
spiSetChipSelectActiveLow(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the CS Active low for a SPI port.
spiSetMode(int, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the SPI Mode.
spiSetSpeed(int, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the clock speed for the SPI bus.
SPISim
- Class in
edu.wpi.first.wpilibj.simulation
A class for controlling a simulated SPI device.
SPISim()
- Constructor for class edu.wpi.first.wpilibj.simulation.
SPISim
Create a new simulated SPI device.
spiStartAutoRate(int, double)
- Static method in class edu.wpi.first.hal.
SPIJNI
Sets the period for automatic SPI accumulation.
spiStartAutoTrigger(int, int, int, boolean, boolean)
- Static method in class edu.wpi.first.hal.
SPIJNI
Starts the auto SPI accumulator on a specific trigger.
spiStopAuto(int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Stops an automatic SPI accumulation.
spiTransaction(int, ByteBuffer, ByteBuffer, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Performs an SPI send/receive transaction.
spiTransactionB(int, byte[], byte[], int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Performs an SPI send/receive transaction.
spiWrite(int, ByteBuffer, int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Executes a write transaction with the device.
spiWriteB(int, byte[], int)
- Static method in class edu.wpi.first.hal.
SPIJNI
Executes a write transaction with the device.
Spline
- Class in
edu.wpi.first.math.proto
Spline
- Class in
edu.wpi.first.math.spline
Represents a two-dimensional parametric spline that interpolates between two points.
Spline()
- Constructor for class edu.wpi.first.math.proto.
Spline
Spline.ControlVector
- Class in
edu.wpi.first.math.spline
Represents a control vector for a spline.
Spline.ProtobufCubicHermiteSpline
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufCubicHermiteSpline
Spline.ProtobufQuinticHermiteSpline
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufQuinticHermiteSpline
SplineHelper
- Class in
edu.wpi.first.math.spline
Helper class that is used to generate cubic and quintic splines from user provided waypoints.
SplineParameterizer
- Class in
edu.wpi.first.math.spline
Class used to parameterize a spline by its arc length.
SplineParameterizer.MalformedSplineException
- Exception in
edu.wpi.first.math.spline
Exception for malformed splines.
splinePointsFromSplines(Spline[])
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryGenerator
Generate spline points from a vector of splines by parameterizing the splines.
splitInto(double)
- Method in class edu.wpi.first.units.
UnitBuilder
Helper for defining units that are a scalar fraction of the base unit, such as centimeters
 being 1/100th of the base unit (meters).
square()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the square button's digital signal.
square()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the square button's digital signal.
square(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the square button's digital signal.
square(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the square button's digital signal.
square(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the square button's digital signal.
square(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the square button's digital signal.
squareRootSigmaPoints(Matrix<S, N1>, Matrix<S, S>)
- Method in class edu.wpi.first.math.estimator.
MerweScaledSigmaPoints
Computes the sigma points for an unscented Kalman filter given the mean (x) and square-root
 covariance (s) of the filter.
stadia()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the stadia button's digital signal.
stadia(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the stadia button's digital signal.
stadia(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the stadia button's digital signal.
StadiaController
- Class in
edu.wpi.first.wpilibj
Handle input from Stadia controllers connected to the Driver Station.
StadiaController(int)
- Constructor for class edu.wpi.first.wpilibj.
StadiaController
Construct an instance of a controller.
StadiaController.Axis
- Enum Class in
edu.wpi.first.wpilibj
Represents an axis on an StadiaController.
StadiaController.Button
- Enum Class in
edu.wpi.first.wpilibj
Represents a digital button on a StadiaController.
StadiaControllerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated Stadia controller.
StadiaControllerSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Constructs from a joystick port number.
StadiaControllerSim(StadiaController)
- Constructor for class edu.wpi.first.wpilibj.simulation.
StadiaControllerSim
Constructs from a StadiaController object.
stallCurrentAmps
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Current draw when stalled.
stallTorqueNewtonMeters
- Variable in class edu.wpi.first.math.system.plant.
DCMotor
Torque when stalled.
start()
- Method in class edu.wpi.first.net.
MulticastServiceAnnouncer
Starts multicast service announcer.
start()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
Starts multicast service resolver.
start()
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Starts the output.
start()
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Start data log manager with default directory location.
start()
- Method in class edu.wpi.first.wpilibj.
Timer
Start the timer running.
start()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the start button's digital signal.
start(int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Starts the output.
start(int)
- Method in class edu.wpi.first.wpilibj.
DMA
Starts DMA Collection.
start(int, String)
- Static method in class edu.wpi.first.net.
WebServer
Create a web server at the given port.
start(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the start button's digital signal.
start(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the start button's digital signal.
start(String)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Start data log manager.
start(String, String)
- Method in class edu.wpi.first.util.datalog.
DataLog
Start an entry.
start(String, String)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Start data log manager.
start(String, String, double)
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Start data log manager.
start(String, String, String)
- Method in class edu.wpi.first.util.datalog.
DataLog
Start an entry.
start(String, String, String, long)
- Method in class edu.wpi.first.util.datalog.
DataLog
Start an entry.
startAutomaticCapture()
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Start automatically capturing images to send to the dashboard.
startAutomaticCapture(int)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Start automatically capturing images to send to the dashboard.
startAutomaticCapture(VideoSource)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Start automatically capturing images to send to the dashboard from an existing camera.
startAutomaticCapture(String, int)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Start automatically capturing images to send to the dashboard.
startAutomaticCapture(String, String)
- Static method in class edu.wpi.first.cameraserver.
CameraServer
Start automatically capturing images to send to the dashboard.
startAutoRate(double)
- Method in class edu.wpi.first.wpilibj.
SPI
Start running the automatic SPI transfer engine at a periodic rate.
startAutoTrigger(DigitalSource, boolean, boolean)
- Method in class edu.wpi.first.wpilibj.
SPI
Start running the automatic SPI transfer engine when a trigger occurs.
startClient3(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts a NT3 client.
startClient3(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a NT3 client.
startClient4(int, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts a NT4 client.
startClient4(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a NT4 client.
startCompetition()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Provide an alternate "main loop" via startCompetition().
startCompetition()
- Method in class edu.wpi.first.wpilibj.
RobotBase
Start the main robot code.
startCompetition()
- Method in class edu.wpi.first.wpilibj.
TimedRobot
Provide an alternate "main loop" via startCompetition().
startConnectionDataLog(int, DataLog, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts logging connection changes to a DataLog.
startConnectionDataLog(DataLog, String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts logging connection changes to a DataLog.
startDataLog(DataLog)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Starts logging DriverStation data to data log, including joystick data.
startDataLog(DataLog, boolean)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Starts logging DriverStation data to data log.
startDMA(int, int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Starts DMA Collection.
startDSClient()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts requesting server address from Driver Station.
startDSClient(int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts requesting server address from Driver Station.
startDSClient(int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts requesting server address from Driver Station.
startEnd(Runnable, Runnable)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a command that runs an action once and another action when the command is
 interrupted.
startEnd(Runnable, Runnable, Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that runs an action once and another action when the command is
 interrupted.
StartEndCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that runs a given runnable when it is initialized, and another runnable when it ends.
StartEndCommand(Runnable, Runnable, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
StartEndCommand
Creates a new StartEndCommand.
startEntryDataLog(int, DataLog, String, String)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts logging entry changes to a DataLog.
startEntryDataLog(DataLog, String, String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts logging entry changes to a DataLog.
startListeners()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Hook setters for all properties.
startLiveWindowMode()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Start LiveWindow mode by hooking the setters for all properties.
startLocal()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts local-only operation.
startLocal(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts local-only operation.
startMulticastServiceAnnouncer(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Starts MulticastServiceAnnouncer.
startMulticastServiceResolver(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Starts MulticastServiceResolver.
startPeriodic(double)
- Method in class edu.wpi.first.wpilibj.
Notifier
Run the callback periodically with the given period.
startPulse()
- Method in class edu.wpi.first.wpilibj.
Solenoid
Trigger the pneumatics module to generate a pulse of the duration set in setPulseDuration.
startRecording()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Starts data recording on the dashboard.
startRobot(Supplier<T>)
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Starting point for the applications.
startRun(Runnable, Runnable)
- Method in interface edu.wpi.first.wpilibj2.command.
Subsystem
Constructs a command that runs an action once and then runs another action every iteration
 until interrupted.
startRun(Runnable, Runnable, Subsystem...)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that runs an action once, and then runs an action every iteration until
 interrupted.
startServer()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a server using the networktables.json as the persistent file, using the default
 listening address and port.
startServer(int, String, String, int, int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Starts a server using the specified filename, listening address, and port.
startServer(String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a server using the specified persistent filename, using the default listening address
 and port.
startServer(String, String)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a server using the specified filename and listening address, using the default port.
startServer(String, String, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a server using the specified filename, listening address, and port.
startServer(String, String, int, int)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Starts a server using the specified filename, listening address, and port.
startSingle(double)
- Method in class edu.wpi.first.wpilibj.
Notifier
Run the callback once after the given delay.
startWebServer(int, String)
- Static method in class edu.wpi.first.net.
WPINetJNI
Create a web server at the given port.
State()
- Constructor for class edu.wpi.first.math.trajectory.
ExponentialProfile.State
Default constructor.
State()
- Constructor for class edu.wpi.first.math.trajectory.
Trajectory.State
Default constructor.
State()
- Constructor for class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
Default constructor.
State(double, double)
- Constructor for class edu.wpi.first.math.trajectory.
ExponentialProfile.State
Constructs a state within an exponential profile.
State(double, double)
- Constructor for class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
Constructs constraints for a Trapezoid Profile.
State(double, double, double, Pose2d, double)
- Constructor for class edu.wpi.first.math.trajectory.
Trajectory.State
Constructs a State with the specified parameters.
StateSpaceUtil
- Class in
edu.wpi.first.math
State-space utilities.
StateSpaceUtilJNI
- Class in
edu.wpi.first.math.jni
StateSpaceUtil JNI.
SteadyStateKalmanFilter
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.estimator
A Kalman filter combines predictions from a model and measurements to give an estimate of the
 true system state.
SteadyStateKalmanFilter(Nat<States>, Nat<Outputs>, LinearSystem<States, Inputs, Outputs>, Matrix<States, N1>, Matrix<Outputs, N1>, double)
- Constructor for class edu.wpi.first.math.estimator.
SteadyStateKalmanFilter
Constructs a steady-state Kalman filter with the given plant.
steps(Map<? extends Number, Color>)
- Static method in interface edu.wpi.first.wpilibj.
LEDPattern
Display a set of colors in steps across the length of the LED strip.
stepTiming(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Advance the simulator time and wait for all notifiers to run.
stepTiming(long)
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
stepTimingAsync(double)
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Advance the simulator time and return immediately.
stepTimingAsync(long)
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
stop()
- Method in class edu.wpi.first.net.
MulticastServiceAnnouncer
Stops multicast service announcer.
stop()
- Method in class edu.wpi.first.net.
MulticastServiceResolver
Stops multicast service resolver.
stop()
- Method in class edu.wpi.first.util.datalog.
DataLog
Stops appending all records to the log, and closes the log file.
stop()
- Method in class edu.wpi.first.vision.
VisionRunner
Stop a RunForever() loop.
stop()
- Method in class edu.wpi.first.wpilibj.
AddressableLED
Stops the output.
stop()
- Static method in class edu.wpi.first.wpilibj.
DataLogManager
Stop data log manager.
stop()
- Method in class edu.wpi.first.wpilibj.
DMA
Stops DMA Collection.
stop()
- Method in class edu.wpi.first.wpilibj.
Notifier
Stop further callback invocations.
stop()
- Method in class edu.wpi.first.wpilibj.
Timer
Stop the timer.
stop(int)
- Static method in class edu.wpi.first.hal.
AddressableLEDJNI
Stops the output.
stop(int)
- Static method in class edu.wpi.first.net.
WebServer
Stop web server running at the given port.
stopAuto()
- Method in class edu.wpi.first.wpilibj.
SPI
Stop running the automatic SPI transfer engine.
stopCANPacketRepeating(int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Stops a repeating packet with a specific ID.
stopClient()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops the client if it is running.
stopClient(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops the client if it is running.
stopConnectionDataLog(int)
- Static method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops logging connection changes to a DataLog.
stopConnectionDataLog(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops logging connection changes to a DataLog.
stopDMA(int)
- Static method in class edu.wpi.first.hal.
DMAJNI
Stops DMA Collection.
stopDSClient()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops requesting server address from Driver Station.
stopDSClient(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops requesting server address from Driver Station.
stopEntryDataLog(int)
- Static method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops logging entry changes to a DataLog.
stopEntryDataLog(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops logging entry changes to a DataLog.
stopListeners()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Unhook setters for all properties.
stopLiveWindowMode()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Stop LiveWindow mode by unhooking the setters for all properties.
stopLocal()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops local-only operation.
stopLocal(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops local-only operation.
stopMainRunLoop()
- Static method in class edu.wpi.first.cscore.
CameraServerJNI
Stops main run loop.
stopMotor()
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
stopMotor()
- Method in class edu.wpi.first.wpilibj.drive.
MecanumDrive
stopMotor()
- Method in class edu.wpi.first.wpilibj.drive.
RobotDriveBase
stopMotor()
- Method in interface edu.wpi.first.wpilibj.motorcontrol.
MotorController
Stops motor movement.
stopMotor()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
MotorControllerGroup
Deprecated.
stopMotor()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
NidecBrushless
Stop the motor.
stopMotor()
- Method in class edu.wpi.first.wpilibj.motorcontrol.
PWMMotorController
stopMotor()
- Method in class edu.wpi.first.wpilibj.
MotorSafety
Called to stop the motor when the timeout expires.
stopMotor()
- Method in class edu.wpi.first.wpilibj.
Relay
stopMotor()
- Method in class edu.wpi.first.wpilibj.xrp.
XRPMotor
stopMulticastServiceAnnouncer(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Stops MulticastServiceAnnouncer.
stopMulticastServiceResolver(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Stops MulticastServiceResolver.
stopNotifier(int)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Stops a notifier from running.
stopPacketRepeating(int)
- Method in class edu.wpi.first.wpilibj.
CAN
Stop a repeating packet with a specific ID.
stopRecording()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Stops data recording on the dashboard.
stopServer()
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Stops the server if it is running.
stopServer(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Stops the server if it is running.
stopWebServer(int)
- Static method in class edu.wpi.first.net.
WPINetJNI
Stop web server running at the given port.
strategy()
- Element in annotation interface edu.wpi.first.epilogue.
Logged
The strategy to use for logging.
stream()
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Creates a stream of primitive long values for the set.
StringArrayEntry
- Interface in
edu.wpi.first.networktables
NetworkTables StringArray entry.
StringArrayLogEntry
- Class in
edu.wpi.first.util.datalog
Log array of string values.
StringArrayLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
StringArrayLogEntry
Constructs a string array log entry.
StringArrayLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
StringArrayLogEntry
Constructs a string array log entry.
StringArrayLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
StringArrayLogEntry
Constructs a string array log entry.
StringArrayLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
StringArrayLogEntry
Constructs a string array log entry.
StringArrayPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables StringArray publisher.
StringArraySubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables StringArray subscriber.
StringArrayTopic
- Class in
edu.wpi.first.networktables
NetworkTables StringArray topic.
StringArrayTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
StringArrayTopic
Constructor; use NetworkTableInstance.getStringArrayTopic() instead.
StringArrayTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
StringArrayTopic
Construct from a generic topic.
StringEntry
- Interface in
edu.wpi.first.networktables
NetworkTables String entry.
StringLogEntry
- Class in
edu.wpi.first.util.datalog
Log string values.
StringLogEntry(DataLog, String)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringLogEntry(DataLog, String, long)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringLogEntry(DataLog, String, String)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringLogEntry(DataLog, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringLogEntry(DataLog, String, String, String)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringLogEntry(DataLog, String, String, String, long)
- Constructor for class edu.wpi.first.util.datalog.
StringLogEntry
Constructs a String log entry.
StringPublisher
- Interface in
edu.wpi.first.networktables
NetworkTables String publisher.
StringSubscriber
- Interface in
edu.wpi.first.networktables
NetworkTables String subscriber.
StringTopic
- Class in
edu.wpi.first.networktables
NetworkTables String topic.
StringTopic(NetworkTableInstance, int)
- Constructor for class edu.wpi.first.networktables.
StringTopic
Constructor; use NetworkTableInstance.getStringTopic() instead.
StringTopic(Topic)
- Constructor for class edu.wpi.first.networktables.
StringTopic
Construct from a generic topic.
struct
- Static variable in class edu.wpi.first.math.controller.
ArmFeedforward
Arm feedforward struct for serialization.
struct
- Static variable in class edu.wpi.first.math.controller.
DifferentialDriveFeedforward
DifferentialDriveFeedforward struct for serialization.
struct
- Static variable in class edu.wpi.first.math.controller.
DifferentialDriveWheelVoltages
DifferentialDriveWheelVoltages struct for serialization.
struct
- Static variable in class edu.wpi.first.math.controller.
ElevatorFeedforward
ElevatorFeedforward struct for serialization.
struct
- Static variable in class edu.wpi.first.math.controller.
SimpleMotorFeedforward
SimpleMotorFeedforward struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Ellipse2d
Ellipse2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Pose2d
Pose2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Pose3d
Pose3d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Quaternion
Quaternion struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Rectangle2d
Rectangle2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Rotation2d
Rotation2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Rotation3d
Rotation3d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Transform2d
Transform2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Transform3d
Transform3d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Translation2d
Translation2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Translation3d
Translation3d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Twist2d
Twist2d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.geometry.
Twist3d
Twist3d struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
ChassisSpeeds
ChassisSpeeds struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
DifferentialDriveKinematics struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
DifferentialDriveWheelPositions struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
DifferentialDriveWheelSpeeds struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
MecanumDriveKinematics struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
MecanumDriveWheelPositions struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
MecanumDriveWheelSpeeds struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
SwerveModulePosition
SwerveModulePosition struct for serialization.
struct
- Static variable in class edu.wpi.first.math.kinematics.
SwerveModuleState
SwerveModuleState struct for serialization.
struct
- Static variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
CubicHermiteSpline protobuf for serialization.
struct
- Static variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
QuinticHermiteSpline protobuf for serialization.
struct
- Static variable in class edu.wpi.first.math.system.plant.
DCMotor
DCMotor struct for serialization.
Struct
<
T
> - Interface in
edu.wpi.first.util.struct
Interface for raw struct serialization.
StructArrayEntry
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded array value entry.
StructArrayLogEntry
<
T
> - Class in
edu.wpi.first.util.datalog
Log struct-encoded array values.
StructArrayPublisher
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded array value publisher.
StructArraySubscriber
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded array value subscriber.
StructArrayTopic
<
T
> - Class in
edu.wpi.first.networktables
NetworkTables struct-encoded array value topic.
StructBuffer
<
T
> - Class in
edu.wpi.first.util.struct
Reusable buffer for serialization/deserialization to/from a raw struct.
StructDescriptor
- Class in
edu.wpi.first.util.struct
Raw struct dynamic struct descriptor.
StructDescriptorDatabase
- Class in
edu.wpi.first.util.struct
Database of raw struct dynamic descriptors.
StructDescriptorDatabase()
- Constructor for class edu.wpi.first.util.struct.
StructDescriptorDatabase
Default constructor.
StructEntry
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded value entry.
StructFetcher
- Class in
edu.wpi.first.util.struct
A utility class for fetching the assigned struct of existing classes.
StructFieldDescriptor
- Class in
edu.wpi.first.util.struct
Raw struct dynamic field descriptor.
StructFieldType
- Enum Class in
edu.wpi.first.util.struct
Known data types for raw struct dynamic fields (see StructFieldDescriptor).
StructGenerator
- Class in
edu.wpi.first.util.struct
A utility class for procedurally generating
Struct
s from records and enums.
StructGenerator.SchemaBuilder
- Class in
edu.wpi.first.util.struct
A utility for building schema syntax in a procedural manner.
StructGenerator.SchemaBuilder.EnumFieldBuilder
- Class in
edu.wpi.first.util.struct
A utility for building enum fields in a procedural manner.
StructLogEntry
<
T
> - Class in
edu.wpi.first.util.datalog
Log struct-encoded values.
StructPublisher
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded value publisher.
StructSerializable
- Interface in
edu.wpi.first.util.struct
Marker interface to indicate a class is serializable using Struct serialization.
StructSubscriber
<
T
> - Interface in
edu.wpi.first.networktables
NetworkTables struct-encoded value subscriber.
StructTopic
<
T
> - Class in
edu.wpi.first.networktables
NetworkTables struct-encoded value topic.
subentry
- Variable in class edu.wpi.first.networktables.
ValueEventData
Subscriber/entry handle.
subscribe(boolean[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new subscriber to the topic.
subscribe(boolean, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new subscriber to the topic.
subscribe(double[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new subscriber to the topic.
subscribe(double, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new subscriber to the topic.
subscribe(float[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new subscriber to the topic.
subscribe(float, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new subscriber to the topic.
subscribe(int, int, String, PubSubOption...)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Subscribes to topic.
subscribe(int, int, String, PubSubOptions)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Subscribes to topic.
subscribe(long[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new subscriber to the topic.
subscribe(long, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new subscriber to the topic.
subscribe(String[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new subscriber to the topic.
subscribe(String, byte[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
RawTopic
Create a new subscriber to the topic.
subscribe(String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new subscriber to the topic.
subscribe(T[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructArrayTopic
Create a new subscriber to the topic.
subscribe(T, PubSubOption...)
- Method in class edu.wpi.first.networktables.
ProtobufTopic
Create a new subscriber to the topic.
subscribe(T, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StructTopic
Create a new subscriber to the topic.
subscribeEx(String, boolean[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanArrayTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, boolean, PubSubOption...)
- Method in class edu.wpi.first.networktables.
BooleanTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, double[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleArrayTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, double, PubSubOption...)
- Method in class edu.wpi.first.networktables.
DoubleTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, float[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatArrayTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, float, PubSubOption...)
- Method in class edu.wpi.first.networktables.
FloatTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, long[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerArrayTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, long, PubSubOption...)
- Method in class edu.wpi.first.networktables.
IntegerTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, String[], PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringArrayTopic
Create a new subscriber to the topic, with specified type string.
subscribeEx(String, String, PubSubOption...)
- Method in class edu.wpi.first.networktables.
StringTopic
Create a new subscriber to the topic, with specified type string.
subscribeMultiple(int, String[], PubSubOption...)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Subscribes to multiple topics.
subscribeMultiple(int, String[], PubSubOptions)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Subscribes to multiple topics.
Subscriber
- Interface in
edu.wpi.first.networktables
NetworkTables subscriber.
subsystem
- Variable in class edu.wpi.first.util.sendable.
SendableRegistry.CallbackData
Subsystem.
Subsystem
- Interface in
edu.wpi.first.wpilibj2.command
A robot subsystem.
SubsystemBase
- Class in
edu.wpi.first.wpilibj2.command
A base for subsystems that handles registration in the constructor, and provides a more intuitive
 method for setting the default command.
SubsystemBase()
- Constructor for class edu.wpi.first.wpilibj2.command.
SubsystemBase
Constructor.
SubsystemBase(String)
- Constructor for class edu.wpi.first.wpilibj2.command.
SubsystemBase
Constructor.
SuppliedValueWidget
<
T
> - Class in
edu.wpi.first.wpilibj.shuffleboard
A Shuffleboard widget whose value is provided by user code.
suppressExitWarning(boolean)
- Static method in class edu.wpi.first.wpilibj.
RobotBase
Suppress the "The robot program quit unexpectedly." message.
suppressTimeoutMessage(boolean)
- Method in class edu.wpi.first.wpilibj.
Watchdog
Enable or disable suppression of the generic timeout message.
suppressUnused(Object)
- Static method in class edu.wpi.first.hal.
JNIWrapper
Dummy function to suppress unused variable warnings.
SwerveControllerCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that uses two PID controllers (
PIDController
) and a ProfiledPIDController
 (
ProfiledPIDController
) to follow a trajectory
Trajectory
with a swerve drive.
SwerveControllerCommand(Trajectory, Supplier<Pose2d>, SwerveDriveKinematics, HolonomicDriveController, Consumer<SwerveModuleState[]>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
Constructs a new SwerveControllerCommand that when executed will follow the provided
 trajectory.
SwerveControllerCommand(Trajectory, Supplier<Pose2d>, SwerveDriveKinematics, HolonomicDriveController, Supplier<Rotation2d>, Consumer<SwerveModuleState[]>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
Constructs a new SwerveControllerCommand that when executed will follow the provided
 trajectory.
SwerveControllerCommand(Trajectory, Supplier<Pose2d>, SwerveDriveKinematics, PIDController, PIDController, ProfiledPIDController, Consumer<SwerveModuleState[]>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
Constructs a new SwerveControllerCommand that when executed will follow the provided
 trajectory.
SwerveControllerCommand(Trajectory, Supplier<Pose2d>, SwerveDriveKinematics, PIDController, PIDController, ProfiledPIDController, Supplier<Rotation2d>, Consumer<SwerveModuleState[]>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
SwerveControllerCommand
Constructs a new SwerveControllerCommand that when executed will follow the provided
 trajectory.
SwerveDriveKinematics
- Class in
edu.wpi.first.math.kinematics
Helper class that converts a chassis velocity (dx, dy, and dtheta components) into individual
 module states (speed and angle).
SwerveDriveKinematics(Translation2d...)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Constructs a swerve drive kinematics object.
SwerveDriveKinematicsConstraint
- Class in
edu.wpi.first.math.trajectory.constraint
A class that enforces constraints on the swerve drive kinematics.
SwerveDriveKinematicsConstraint(SwerveDriveKinematics, double)
- Constructor for class edu.wpi.first.math.trajectory.constraint.
SwerveDriveKinematicsConstraint
Constructs a swerve drive kinematics constraint.
SwerveDriveKinematicsProto
- Class in
edu.wpi.first.math.kinematics.proto
SwerveDriveKinematicsProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
SwerveDriveKinematicsStruct
- Class in
edu.wpi.first.math.kinematics.struct
SwerveDriveKinematicsStruct(int)
- Constructor for class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
Constructs the
Struct
implementation.
SwerveDriveOdometry
- Class in
edu.wpi.first.math.kinematics
Class for swerve drive odometry.
SwerveDriveOdometry(SwerveDriveKinematics, Rotation2d, SwerveModulePosition[])
- Constructor for class edu.wpi.first.math.kinematics.
SwerveDriveOdometry
Constructs a SwerveDriveOdometry object with the default pose at the origin.
SwerveDriveOdometry(SwerveDriveKinematics, Rotation2d, SwerveModulePosition[], Pose2d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveDriveOdometry
Constructs a SwerveDriveOdometry object.
SwerveDriveOdometry3d
- Class in
edu.wpi.first.math.kinematics
Class for swerve drive odometry.
SwerveDriveOdometry3d(SwerveDriveKinematics, Rotation3d, SwerveModulePosition[])
- Constructor for class edu.wpi.first.math.kinematics.
SwerveDriveOdometry3d
Constructs a SwerveDriveOdometry3d object with the default pose at the origin.
SwerveDriveOdometry3d(SwerveDriveKinematics, Rotation3d, SwerveModulePosition[], Pose3d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveDriveOdometry3d
Constructs a SwerveDriveOdometry3d object.
SwerveDrivePoseEstimator
- Class in
edu.wpi.first.math.estimator
This class wraps
Swerve Drive Odometry
to fuse latency-compensated
 vision measurements with swerve drive encoder distance measurements.
SwerveDrivePoseEstimator(SwerveDriveKinematics, Rotation2d, SwerveModulePosition[], Pose2d)
- Constructor for class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator
Constructs a SwerveDrivePoseEstimator with default standard deviations for the model and vision
 measurements.
SwerveDrivePoseEstimator(SwerveDriveKinematics, Rotation2d, SwerveModulePosition[], Pose2d, Matrix<N3, N1>, Matrix<N3, N1>)
- Constructor for class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator
Constructs a SwerveDrivePoseEstimator.
SwerveDrivePoseEstimator3d
- Class in
edu.wpi.first.math.estimator
This class wraps
Swerve Drive Odometry
to fuse latency-compensated
 vision measurements with swerve drive encoder distance measurements.
SwerveDrivePoseEstimator3d(SwerveDriveKinematics, Rotation3d, SwerveModulePosition[], Pose3d)
- Constructor for class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator3d
Constructs a SwerveDrivePoseEstimator3d with default standard deviations for the model and
 vision measurements.
SwerveDrivePoseEstimator3d(SwerveDriveKinematics, Rotation3d, SwerveModulePosition[], Pose3d, Matrix<N4, N1>, Matrix<N4, N1>)
- Constructor for class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator3d
Constructs a SwerveDrivePoseEstimator3d.
SwerveModulePosition
- Class in
edu.wpi.first.math.kinematics
Represents the state of one swerve module.
SwerveModulePosition()
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModulePosition
Constructs a SwerveModulePosition with zeros for distance and angle.
SwerveModulePosition(double, Rotation2d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModulePosition
Constructs a SwerveModulePosition.
SwerveModulePosition(Distance, Rotation2d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModulePosition
Constructs a SwerveModulePosition.
SwerveModulePositionProto
- Class in
edu.wpi.first.math.kinematics.proto
SwerveModulePositionProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
SwerveModulePositionStruct
- Class in
edu.wpi.first.math.kinematics.struct
SwerveModulePositionStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
SwerveModuleState
- Class in
edu.wpi.first.math.kinematics
Represents the state of one swerve module.
SwerveModuleState()
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModuleState
Constructs a SwerveModuleState with zeros for speed and angle.
SwerveModuleState(double, Rotation2d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModuleState
Constructs a SwerveModuleState.
SwerveModuleState(LinearVelocity, Rotation2d)
- Constructor for class edu.wpi.first.math.kinematics.
SwerveModuleState
Constructs a SwerveModuleState.
SwerveModuleStateProto
- Class in
edu.wpi.first.math.kinematics.proto
SwerveModuleStateProto()
- Constructor for class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
SwerveModuleStateStruct
- Class in
edu.wpi.first.math.kinematics.struct
SwerveModuleStateStruct()
- Constructor for class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
symbol()
- Method in class edu.wpi.first.units.
Unit
Gets the symbol of this unit.
symbol(String)
- Method in class edu.wpi.first.units.
UnitBuilder
Sets the symbol of the new unit.
synchronizedBlink(BooleanSupplier)
- Method in interface edu.wpi.first.wpilibj.
LEDPattern
Creates a pattern that blinks this one on and off in sync with a true/false signal.
SynchronousInterrupt
- Class in
edu.wpi.first.wpilibj
Class for handling synchronous (blocking) interrupts.
SynchronousInterrupt(DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.
SynchronousInterrupt
Constructs a new synchronous interrupt using a DigitalSource.
SynchronousInterrupt.WaitResult
- Enum Class in
edu.wpi.first.wpilibj
Event trigger combinations for a synchronous interrupt.
SysIdRoutine
- Class in
edu.wpi.first.wpilibj2.command.sysid
A SysId characterization routine for a single mechanism.
SysIdRoutine(SysIdRoutine.Config, SysIdRoutine.Mechanism)
- Constructor for class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine
Create a new SysId characterization routine.
SysIdRoutine.Config
- Class in
edu.wpi.first.wpilibj2.command.sysid
Hardware-independent configuration for a SysId test routine.
SysIdRoutine.Direction
- Enum Class in
edu.wpi.first.wpilibj2.command.sysid
Motor direction for a SysId test.
SysIdRoutine.Mechanism
- Class in
edu.wpi.first.wpilibj2.command.sysid
A mechanism to be characterized by a SysId routine.
SysIdRoutineLog
- Class in
edu.wpi.first.wpilibj.sysid
Utility for logging data from a SysId test routine.
SysIdRoutineLog(String)
- Constructor for class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog
Create a new logging utility for a SysId test routine.
SysIdRoutineLog.MotorLog
- Class in
edu.wpi.first.wpilibj.sysid
Logs data from a single motor during a SysIdRoutine.
SysIdRoutineLog.State
- Enum Class in
edu.wpi.first.wpilibj.sysid
Possible state of a SysId routine.
System
- Class in
edu.wpi.first.math.proto
System()
- Constructor for class edu.wpi.first.math.proto.
System
System.ProtobufLinearSystem
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufLinearSystem
T
tableCreated(NetworkTable, String, NetworkTable)
- Method in interface edu.wpi.first.networktables.
NetworkTable.SubTableListener
Called when a new table is created within a
NetworkTable
.
tableCreated(NetworkTable, String, NetworkTable)
- Method in interface edu.wpi.first.networktables.
TableListener
Called when a new table is created within a
NetworkTable
.
TableListener
- Interface in
edu.wpi.first.networktables
A listener that listens to new tables in a
NetworkTable
.
Tachometer
- Class in
edu.wpi.first.wpilibj.counter
Tachometer.
Tachometer(DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.counter.
Tachometer
Constructs a new tachometer.
tagSize
- Variable in class edu.wpi.first.apriltag.
AprilTagPoseEstimator.Config
Tag size, in meters.
Talon
- Class in
edu.wpi.first.wpilibj.motorcontrol
Cross the Road Electronics (CTRE) Talon Motor Controller.
Talon(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
Talon
Constructor.
tankDrive(double, double)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Tank drive method for differential drive platform.
tankDrive(double, double, boolean)
- Method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Tank drive method for differential drive platform.
tankDriveIK(double, double, boolean)
- Static method in class edu.wpi.first.wpilibj.drive.
DifferentialDrive
Tank drive inverse kinematics for differential drive platform.
teleop()
- Static method in class edu.wpi.first.wpilibj2.command.button.
RobotModeTriggers
Returns a trigger that is true when the robot is enabled in teleop mode.
teleopExit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Exit code for teleop mode should go here.
teleopInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Initialization code for teleop mode should go here.
teleopPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic code for teleop mode should go here.
Temperature
- Interface in
edu.wpi.first.units.measure
TemperatureUnit
- Class in
edu.wpi.first.units
Unit of temperature dimension.
TemperatureUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of temperature, kelvin.
terminate()
- Static method in class edu.wpi.first.hal.
HAL
Terminates the executable (at the native level).
test()
- Static method in class edu.wpi.first.wpilibj2.command.button.
RobotModeTriggers
Returns a trigger that is true when the robot is enabled in test mode.
testExit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Exit code for test mode should go here.
testInit()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Initialization code for test mode should go here.
testPeriodic()
- Method in class edu.wpi.first.wpilibj.
IterativeRobotBase
Periodic code for test mode should go here.
Threads
- Class in
edu.wpi.first.wpilibj
Thread utility functions.
ThreadsJNI
- Class in
edu.wpi.first.hal
Threads HAL JNI Functions.
Time
- Interface in
edu.wpi.first.units.measure
TimedRobot
- Class in
edu.wpi.first.wpilibj
TimedRobot implements the IterativeRobotBase robot program framework.
TimedRobot()
- Constructor for class edu.wpi.first.wpilibj.
TimedRobot
Constructor for TimedRobot.
TimedRobot(double)
- Constructor for class edu.wpi.first.wpilibj.
TimedRobot
Constructor for TimedRobot.
TimeInterpolatableBuffer
<
T
> - Class in
edu.wpi.first.math.interpolation
The TimeInterpolatableBuffer provides an easy way to estimate past measurements.
timeLeftUntil(double)
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile
Returns the time left until a target distance in the profile is reached.
timeLeftUntil(ExponentialProfile.State, ExponentialProfile.State)
- Method in class edu.wpi.first.math.trajectory.
ExponentialProfile
Calculates the time it will take for this profile to reach the goal state.
timeParameterizeTrajectory(List<PoseWithCurvature>, List<TrajectoryConstraint>, double, double, double, double, boolean)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryParameterizer
Parameterize the trajectory by time.
Timer
- Class in
edu.wpi.first.wpilibj
A timer class.
Timer()
- Constructor for class edu.wpi.first.wpilibj.
Timer
Timer constructor.
times(double)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Multiplies the current pose by a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Multiplies the current pose by a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Multiplies with a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Multiplies the current rotation by a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Multiplies the current rotation by a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Transform2d
Multiplies the transform by the scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Transform3d
Multiplies the transform by the scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the translation multiplied by a scalar.
times(double)
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the translation multiplied by a scalar.
times(double)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Multiplies the ChassisSpeeds by a scalar and returns the new ChassisSpeeds.
times(double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Multiplies the DifferentialDriveWheelSpeeds by a scalar and returns the new
 DifferentialDriveWheelSpeeds.
times(double)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Multiplies the MecanumDriveWheelSpeeds by a scalar and returns the new MecanumDriveWheelSpeeds.
times(double)
- Method in class edu.wpi.first.math.
Matrix
Multiplies all the elements of this matrix by the given scalar.
times(double)
- Method in class edu.wpi.first.math.
Vector
times(double)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
times(double)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(double)
- Method in interface edu.wpi.first.units.measure.
Angle
times(double)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(double)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(double)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(double)
- Method in interface edu.wpi.first.units.measure.
Current
times(double)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(double)
- Method in interface edu.wpi.first.units.measure.
Distance
times(double)
- Method in interface edu.wpi.first.units.measure.
Energy
times(double)
- Method in interface edu.wpi.first.units.measure.
Force
times(double)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(double)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(double)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(double)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(double)
- Method in interface edu.wpi.first.units.measure.
Mass
times(double)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(double)
- Method in interface edu.wpi.first.units.measure.
Mult
times(double)
- Method in interface edu.wpi.first.units.measure.
Per
times(double)
- Method in interface edu.wpi.first.units.measure.
Power
times(double)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(double)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(double)
- Method in interface edu.wpi.first.units.measure.
Time
times(double)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a scalar unitless multiplier.
times(double)
- Method in interface edu.wpi.first.units.measure.
Torque
times(double)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(double)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(double)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
times(Quaternion)
- Method in class edu.wpi.first.math.geometry.
Quaternion
Multiply with another quaternion.
times(Matrix<C, C2>)
- Method in class edu.wpi.first.math.
Matrix
Multiplies this matrix with another that has C rows.
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Current
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Force
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Per
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Power
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Time
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an acceleration and returns the resulting measure in the most
 appropriate unit.
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Acceleration<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Angle)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Current
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Force
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Angle)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Angle)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Per
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Power
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Time
times(Angle)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an angle and returns the resulting measure in the most appropriate
 unit.
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Angle)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an angular acceleration and returns the resulting measure in the
 most appropriate unit.
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(AngularAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
times(AngularMomentum)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an angular momentum and returns the resulting measure in the most
 appropriate unit.
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(AngularMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
times(AngularVelocity)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an angular velocity and returns the resulting measure in the most
 appropriate unit.
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(AngularVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Current)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Current)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Current)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Current)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Current)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Current)
- Method in interface edu.wpi.first.units.measure.
Current
times(Current)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Current)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Current)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Current)
- Method in interface edu.wpi.first.units.measure.
Force
times(Current)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Current)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Current)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Current)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Current)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Current)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Current)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Current)
- Method in interface edu.wpi.first.units.measure.
Per
times(Current)
- Method in interface edu.wpi.first.units.measure.
Power
times(Current)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Current)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Current)
- Method in interface edu.wpi.first.units.measure.
Time
times(Current)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an electric current and returns the resulting measure in the most
 appropriate unit.
times(Current)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Current)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Current)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Dimensionless)
- Method in record class edu.wpi.first.units.
ImmutableMeasure
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Current
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Force
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Per
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Power
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Time
times(Dimensionless)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a scalar dimensionless multiplier.
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Dimensionless)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Dimensionless)
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Distance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Current
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Force
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Distance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Distance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Per
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Power
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Time
times(Distance)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a distance and returns the resulting measure in the most appropriate
 unit.
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Distance)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Energy)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Current
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Force
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Energy)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Energy)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Per
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Power
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Time
times(Energy)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by an energy and returns the resulting measure in the most appropriate
 unit.
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Energy)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Force)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Force)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Force)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Force)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Force)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Force)
- Method in interface edu.wpi.first.units.measure.
Current
times(Force)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Force)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Force)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Force)
- Method in interface edu.wpi.first.units.measure.
Force
times(Force)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Force)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Force)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Force)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Force)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Force)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Force)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Force)
- Method in interface edu.wpi.first.units.measure.
Per
times(Force)
- Method in interface edu.wpi.first.units.measure.
Power
times(Force)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Force)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Force)
- Method in interface edu.wpi.first.units.measure.
Time
times(Force)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a force and returns the resulting measure in the most appropriate
 unit.
times(Force)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Force)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Force)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Current
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Force
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Per
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Power
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Time
times(Frequency)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a frequency and returns the resulting measure in the most
 appropriate unit.
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Frequency)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Angle
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Current
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Distance
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Energy
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Force
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mass
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Mult
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Per
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Power
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Time
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a linear acceleration and returns the resulting measure in the most
 appropriate unit.
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Torque
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(LinearAcceleration)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Angle
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Current
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Distance
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Energy
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Force
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mass
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Mult
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Per
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Power
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Time
times(LinearMomentum)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a linear momentum and returns the resulting measure in the most
 appropriate unit.
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Torque
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(LinearMomentum)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Angle
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Current
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Distance
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Energy
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Force
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mass
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Mult
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Per
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Power
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Time
times(LinearVelocity)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a linear velocity and returns the resulting measure in the most
 appropriate unit.
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Torque
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(LinearVelocity)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Mass)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Current
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Force
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Mass)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Mass)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Per
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Power
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Time
times(Mass)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a mass and returns the resulting measure in the most appropriate
 unit.
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Mass)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Angle
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Current
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Distance
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Energy
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Force
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mass
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Mult
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Per
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Power
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Time
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a moment of intertia and returns the resulting measure in the most
 appropriate unit.
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Torque
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(MomentOfInertia)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a generic multiplied measure and returns the resulting measure in
 the most appropriate unit.
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Mult<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Current
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Force
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Per
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Power
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Time
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a generic ratio measurement and returns the resulting measure in the
 most appropriate unit.
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Per<?, ?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Power)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Power)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Power)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Power)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Power)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Power)
- Method in interface edu.wpi.first.units.measure.
Current
times(Power)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Power)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Power)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Power)
- Method in interface edu.wpi.first.units.measure.
Force
times(Power)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Power)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Power)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Power)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Power)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Power)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Power)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Power)
- Method in interface edu.wpi.first.units.measure.
Per
times(Power)
- Method in interface edu.wpi.first.units.measure.
Power
times(Power)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Power)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Power)
- Method in interface edu.wpi.first.units.measure.
Time
times(Power)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a power and returns the resulting measure in the most appropriate
 unit.
times(Power)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Power)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Power)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Current
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Force
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Per
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Power
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Time
times(Resistance)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a resistance and returns the resulting measure in the most
 appropriate unit.
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Resistance)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Current
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Force
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Per
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Power
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Time
times(Temperature)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a temperature and returns the resulting measure in the most
 appropriate unit.
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Temperature)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Time)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Time)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Time)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Time)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Time)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Time)
- Method in interface edu.wpi.first.units.measure.
Current
times(Time)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Time)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Time)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Time)
- Method in interface edu.wpi.first.units.measure.
Force
times(Time)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Time)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Time)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Time)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Time)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Time)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Time)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Time)
- Method in interface edu.wpi.first.units.measure.
Per
times(Time)
- Method in interface edu.wpi.first.units.measure.
Power
times(Time)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Time)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Time)
- Method in interface edu.wpi.first.units.measure.
Time
times(Time)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a time and returns the resulting measure in the most appropriate
 unit.
times(Time)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Time)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Time)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Torque)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Current
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Force
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Torque)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Torque)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Per
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Power
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Time
times(Torque)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a torque and returns the resulting measure in the most appropriate
 unit.
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Torque)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Current
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Force
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Per
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Power
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Time
times(Velocity<?>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a generic velocity and returns the resulting measure in the most
 appropriate unit.
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Velocity<?>)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Acceleration
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Angle
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Current
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Dimensionless
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Distance
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Energy
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Force
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Frequency
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mass
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Mult
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Per
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Power
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Resistance
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Temperature
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Time
times(Voltage)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a voltage and returns the resulting measure in the most appropriate
 unit.
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Torque
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Velocity
times(Voltage)
- Method in interface edu.wpi.first.units.measure.
Voltage
times(Measure<?>)
- Method in interface edu.wpi.first.units.
Measure
Generates a new measure that is equal to this measure multiplied by another.
timesConversionFactor(Measure<? extends PerUnit<Other, U>>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by a conversion factor, returning the converted measurement.
timesDivisor(Measure<? extends Divisor>)
- Method in interface edu.wpi.first.units.measure.
Per
timeSeconds
- Variable in class edu.wpi.first.math.trajectory.
Trajectory.State
The time elapsed since the beginning of the trajectory.
timesInverse(Measure<? extends PerUnit<DimensionlessUnit, ? extends U>>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by another measurement of the inverse unit type (eg Time multiplied by
 Frequency) and returns the resulting dimensionless measure.
TimesliceRobot
- Class in
edu.wpi.first.wpilibj
TimesliceRobot extends the TimedRobot robot program framework to provide timeslice scheduling of
 periodic functions.
TimesliceRobot(double, double)
- Constructor for class edu.wpi.first.wpilibj.
TimesliceRobot
Constructor for TimesliceRobot.
timesRatio(Measure<? extends PerUnit<? extends Other, U>>)
- Method in interface edu.wpi.first.units.
Measure
Multiplies this measure by another measurement of something over the unit type (eg Time
 multiplied by LinearVelocity) and returns the resulting measure of the ratio's dividend unit.
timestamp
- Variable in class edu.wpi.first.hal.
CANData
CAN frame timestamp in milliseconds.
timestamp
- Variable in class edu.wpi.first.hal.
CANStreamMessage
Timestamp message was received, in milliseconds (based off of CLOCK_MONOTONIC).
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedBoolean
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedBooleanArray
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedDouble
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedDoubleArray
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedFloat
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedFloatArray
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedInteger
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedIntegerArray
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedObject
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedRaw
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedString
Timestamp in local time base.
timestamp
- Variable in class edu.wpi.first.networktables.
TimestampedStringArray
Timestamp in local time base.
TimestampedBoolean
- Class in
edu.wpi.first.networktables
NetworkTables timestamped Boolean.
TimestampedBoolean(long, long, boolean)
- Constructor for class edu.wpi.first.networktables.
TimestampedBoolean
Create a timestamped value.
TimestampedBooleanArray
- Class in
edu.wpi.first.networktables
NetworkTables timestamped BooleanArray.
TimestampedBooleanArray(long, long, boolean[])
- Constructor for class edu.wpi.first.networktables.
TimestampedBooleanArray
Create a timestamped value.
TimestampedDouble
- Class in
edu.wpi.first.networktables
NetworkTables timestamped Double.
TimestampedDouble(long, long, double)
- Constructor for class edu.wpi.first.networktables.
TimestampedDouble
Create a timestamped value.
TimestampedDoubleArray
- Class in
edu.wpi.first.networktables
NetworkTables timestamped DoubleArray.
TimestampedDoubleArray(long, long, double[])
- Constructor for class edu.wpi.first.networktables.
TimestampedDoubleArray
Create a timestamped value.
TimestampedFloat
- Class in
edu.wpi.first.networktables
NetworkTables timestamped Float.
TimestampedFloat(long, long, float)
- Constructor for class edu.wpi.first.networktables.
TimestampedFloat
Create a timestamped value.
TimestampedFloatArray
- Class in
edu.wpi.first.networktables
NetworkTables timestamped FloatArray.
TimestampedFloatArray(long, long, float[])
- Constructor for class edu.wpi.first.networktables.
TimestampedFloatArray
Create a timestamped value.
TimestampedInteger
- Class in
edu.wpi.first.networktables
NetworkTables timestamped Integer.
TimestampedInteger(long, long, long)
- Constructor for class edu.wpi.first.networktables.
TimestampedInteger
Create a timestamped value.
TimestampedIntegerArray
- Class in
edu.wpi.first.networktables
NetworkTables timestamped IntegerArray.
TimestampedIntegerArray(long, long, long[])
- Constructor for class edu.wpi.first.networktables.
TimestampedIntegerArray
Create a timestamped value.
TimestampedObject
<
T
> - Class in
edu.wpi.first.networktables
NetworkTables timestamped object.
TimestampedObject(long, long, T)
- Constructor for class edu.wpi.first.networktables.
TimestampedObject
Create a timestamped value.
TimestampedRaw
- Class in
edu.wpi.first.networktables
NetworkTables timestamped Raw.
TimestampedRaw(long, long, byte[])
- Constructor for class edu.wpi.first.networktables.
TimestampedRaw
Create a timestamped value.
TimestampedString
- Class in
edu.wpi.first.networktables
NetworkTables timestamped String.
TimestampedString(long, long, String)
- Constructor for class edu.wpi.first.networktables.
TimestampedString
Create a timestamped value.
TimestampedStringArray
- Class in
edu.wpi.first.networktables
NetworkTables timestamped StringArray.
TimestampedStringArray(long, long, String[])
- Constructor for class edu.wpi.first.networktables.
TimestampedStringArray
Create a timestamped value.
TimestampSource
- Enum Class in
edu.wpi.first.util
Options for where the timestamp an
RawFrame
was captured at can be measured relative to.
timeSyncData
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Log message (for log message events).
TimeSyncEventData
- Class in
edu.wpi.first.networktables
NetworkTables time sync event data.
TimeSyncEventData(long, long, boolean)
- Constructor for class edu.wpi.first.networktables.
TimeSyncEventData
Constructor.
TimeUnit
- Class in
edu.wpi.first.units
Unit of time dimension.
TimeUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of time, seconds.
toArray()
- Method in class edu.wpi.first.units.collections.
ReadOnlyPrimitiveLongSet
Creates a new array that contains all of the values in the set.
toBase(UnaryFunction)
- Method in class edu.wpi.first.units.
UnitBuilder
Sets the conversion function to transform values in the derived unit to values in the base
 unit.
toBaseUnits(double)
- Method in class edu.wpi.first.units.
Unit
Converts a value in terms of this unit to a value in terms of the base unit.
toChassisSpeeds(DifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Returns a chassis speed from left and right component velocities using forward kinematics.
toChassisSpeeds(MecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Performs forward kinematics to return the resulting chassis state from the given wheel speeds.
toChassisSpeeds(SwerveModuleState...)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Performs forward kinematics to return the resulting chassis state from the given module states.
toChassisSpeeds(S)
- Method in interface edu.wpi.first.math.kinematics.
Kinematics
Performs forward kinematics to return the resulting chassis speed from the wheel speeds.
toggle()
- Method in class edu.wpi.first.wpilibj.
DoubleSolenoid
Toggle the value of the solenoid.
toggle()
- Method in class edu.wpi.first.wpilibj.
Solenoid
Toggle the value of the solenoid.
toggleOnFalse(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Toggles a command when the condition changes from `true` to `false`.
toggleOnTrue(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Toggles a command when the condition changes from `false` to `true`.
toHexString()
- Method in class edu.wpi.first.wpilibj.util.
Color
Return this color represented as a hex string.
toHexString()
- Method in class edu.wpi.first.wpilibj.util.
Color8Bit
Return this color represented as a hex string.
TokenKind
- Enum Class in
edu.wpi.first.util.struct.parser
A lexed raw struct schema token.
toLongString()
- Method in interface edu.wpi.first.units.
Measure
Returns a string representation of this measurement in a longhand form.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Pose2d
Returns an affine transformation matrix representation of this pose.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns an affine transformation matrix representation of this pose.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Returns matrix representation of this rotation.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns rotation matrix representation of this rotation.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Transform2d
Returns an affine transformation matrix representation of this transformation.
toMatrix()
- Method in class edu.wpi.first.math.geometry.
Transform3d
Returns an affine transformation matrix representation of this transformation.
toOutputRange(double, double)
- Method in class edu.wpi.first.units.
UnitBuilder.MappingBuilder
Finalizes the mapping by defining the output range.
top()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Constructs an event instance around the top button's digital signal.
top(EventLoop)
- Method in class edu.wpi.first.wpilibj.
Joystick
Constructs an event instance around the top button's digital signal.
top(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Constructs an event instance around the top button's digital signal.
toPathweaverJson(double[], String)
- Static method in class edu.wpi.first.math.jni.
TrajectoryUtilJNI
Converts a trajectory into a Pathweaver JSON and saves it.
toPathweaverJson(Trajectory, Path)
- Static method in class edu.wpi.first.math.trajectory.
TrajectoryUtil
Exports a Trajectory to a PathWeaver-style JSON file.
topic
- Variable in class edu.wpi.first.networktables.
TopicInfo
Topic handle.
topic
- Variable in class edu.wpi.first.networktables.
ValueEventData
Topic handle.
Topic
- Class in
edu.wpi.first.networktables
NetworkTables Topic.
topicInfo
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Topic information (for topic events).
TopicInfo
- Class in
edu.wpi.first.networktables
NetworkTables topic information.
TopicInfo(NetworkTableInstance, int, String, int, String)
- Constructor for class edu.wpi.first.networktables.
TopicInfo
Constructor.
topicsOnly
- Variable in class edu.wpi.first.networktables.
PubSubOptions
For subscriptions, don't ask for value changes (only topic announcements).
topicsOnly(boolean)
- Static method in class edu.wpi.first.networktables.
PubSubOption
If enabled on a subscription, does not request value changes.
toPose2d()
- Method in class edu.wpi.first.math.geometry.
Pose3d
Returns a Pose2d representing this Pose3d projected into the X-Y plane.
toRotation2d()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns a Rotation2d representing this Rotation3d projected into the X-Y plane.
toRotationVector()
- Method in class edu.wpi.first.math.geometry.
Quaternion
Returns the rotation vector representation of this quaternion.
Torque
- Interface in
edu.wpi.first.units.measure
TorqueUnit
- Class in
edu.wpi.first.units
A unit of torque like
Units.NewtonMeters
.
toShortString()
- Method in interface edu.wpi.first.units.
Measure
Returns a string representation of this measurement in a shorthand form.
toString()
- Method in class edu.wpi.first.apriltag.
AprilTag
toString()
- Method in class edu.wpi.first.apriltag.
AprilTagDetection
toString()
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
toString()
- Method in class edu.wpi.first.math.geometry.
Pose2d
toString()
- Method in class edu.wpi.first.math.geometry.
Pose3d
toString()
- Method in class edu.wpi.first.math.geometry.
Quaternion
toString()
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
toString()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
toString()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
toString()
- Method in class edu.wpi.first.math.geometry.
Transform2d
toString()
- Method in class edu.wpi.first.math.geometry.
Transform3d
toString()
- Method in class edu.wpi.first.math.geometry.
Translation2d
toString()
- Method in class edu.wpi.first.math.geometry.
Translation3d
toString()
- Method in class edu.wpi.first.math.geometry.
Twist2d
toString()
- Method in class edu.wpi.first.math.geometry.
Twist3d
toString()
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
toString()
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelPositions
toString()
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
toString()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveMotorVoltages
Deprecated.
toString()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelPositions
toString()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
toString()
- Method in class edu.wpi.first.math.kinematics.
SwerveModulePosition
toString()
- Method in class edu.wpi.first.math.kinematics.
SwerveModuleState
toString()
- Method in class edu.wpi.first.math.
Matrix
toString()
- Method in class edu.wpi.first.math.
Pair
toString()
- Method in class edu.wpi.first.math.system.
LinearSystem
toString()
- Method in class edu.wpi.first.math.trajectory.
Trajectory.State
toString()
- Method in class edu.wpi.first.math.trajectory.
Trajectory
toString()
- Method in class edu.wpi.first.networktables.
NetworkTable
toString()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Returns a string representation of this record class.
toString()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Returns a string representation of this record class.
toString()
- Method in class edu.wpi.first.units.
MultUnit
toString()
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
toString()
- Method in class edu.wpi.first.units.
Unit
toString()
- Method in enum class edu.wpi.first.util.struct.parser.
TokenKind
toString()
- Method in enum class edu.wpi.first.util.struct.
StructFieldType
toString()
- Method in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Get the human-friendly name of the axis, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Get the human-friendly name of the button, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Get the human-friendly name of the axis, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Get the human-friendly name of the button, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Get the human-friendly name of the axis, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Get the human-friendly name of the button, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
toString()
- Method in class edu.wpi.first.wpilibj.util.
Color
toString()
- Method in class edu.wpi.first.wpilibj.util.
Color8Bit
toString()
- Method in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Get the human-friendly name of the axis, matching the relevant methods.
toString()
- Method in enum class edu.wpi.first.wpilibj.
XboxController.Button
Get the human-friendly name of the button, matching the relevant methods.
toSwerveModuleStates(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Performs inverse kinematics.
toSwerveModuleStates(ChassisSpeeds, Translation2d)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Performs inverse kinematics to return the module states from a desired chassis velocity.
totalTime
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.ProfileTiming
Total profile time.
totalTime()
- Method in class edu.wpi.first.math.trajectory.
TrapezoidProfile
Returns the total time the profile takes to reach the goal.
toTranslation2d()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns a Translation2d representing this Translation3d projected into the X-Y plane.
toTwist2d(double)
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Creates a Twist2d from ChassisSpeeds.
toTwist2d(double, double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Performs forward kinematics to return the resulting Twist2d from the given left and right side
 distance deltas.
toTwist2d(DifferentialDriveWheelPositions, DifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
toTwist2d(MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Performs forward kinematics to return the resulting Twist2d from the given wheel deltas.
toTwist2d(MecanumDriveWheelPositions, MecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
toTwist2d(SwerveModulePosition...)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
Performs forward kinematics to return the resulting chassis state from the given module states.
toTwist2d(SwerveModulePosition[], SwerveModulePosition[])
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
toTwist2d(P, P)
- Method in interface edu.wpi.first.math.kinematics.
Kinematics
Performs forward kinematics to return the resulting Twist2d from the given change in wheel
 positions.
touchpad()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the touchpad button's digital signal.
touchpad()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the touchpad button's digital signal.
touchpad(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the touchpad button's digital signal.
touchpad(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the touchpad button's digital signal.
touchpad(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the touchpad button's digital signal.
touchpad(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the touchpad button's digital signal.
toVector()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Returns rotation vector representation of this rotation.
toVector()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns a 2D translation vector representation of this translation.
toVector()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns a 2D translation vector representation of this translation.
toWheelSpeeds(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Returns left and right component velocities from a chassis speed using inverse kinematics.
toWheelSpeeds(ChassisSpeeds)
- Method in interface edu.wpi.first.math.kinematics.
Kinematics
Performs inverse kinematics to return the wheel speeds from a desired chassis velocity.
toWheelSpeeds(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Performs inverse kinematics.
toWheelSpeeds(ChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveKinematics
toWheelSpeeds(ChassisSpeeds, Translation2d)
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveKinematics
Performs inverse kinematics to return the wheel speeds from a desired chassis velocity.
trace()
- Method in class edu.wpi.first.math.
Matrix
Computes the trace of the matrix.
Tracer
- Class in
edu.wpi.first.wpilibj
A class for keeping track of how much time it takes for different parts of code to execute.
Tracer()
- Constructor for class edu.wpi.first.wpilibj.
Tracer
Tracer constructor.
trackWidthMeters
- Variable in class edu.wpi.first.math.kinematics.
DifferentialDriveKinematics
Differential drive trackwidth.
Trajectory
- Class in
edu.wpi.first.math.proto
Trajectory
- Class in
edu.wpi.first.math.trajectory
Represents a time-parameterized trajectory.
Trajectory()
- Constructor for class edu.wpi.first.math.proto.
Trajectory
Trajectory()
- Constructor for class edu.wpi.first.math.trajectory.
Trajectory
Constructs an empty trajectory.
Trajectory(List<Trajectory.State>)
- Constructor for class edu.wpi.first.math.trajectory.
Trajectory
Constructs a trajectory from a vector of states.
Trajectory.ProtobufTrajectory
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTrajectory
Trajectory.ProtobufTrajectoryState
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufTrajectoryState
Trajectory.State
- Class in
edu.wpi.first.math.trajectory
Represents a time-parameterized trajectory.
TrajectoryConfig
- Class in
edu.wpi.first.math.trajectory
Represents the configuration for generating a trajectory.
TrajectoryConfig(double, double)
- Constructor for class edu.wpi.first.math.trajectory.
TrajectoryConfig
Constructs the trajectory configuration class.
TrajectoryConfig(LinearVelocity, LinearAcceleration)
- Constructor for class edu.wpi.first.math.trajectory.
TrajectoryConfig
Constructs the trajectory configuration class.
TrajectoryConstraint
- Interface in
edu.wpi.first.math.trajectory.constraint
An interface for defining user-defined velocity and acceleration constraints while generating
 trajectories.
TrajectoryConstraint.MinMax
- Class in
edu.wpi.first.math.trajectory.constraint
Represents a minimum and maximum acceleration.
TrajectoryGenerationException(String)
- Constructor for exception edu.wpi.first.math.trajectory.
TrajectoryParameterizer.TrajectoryGenerationException
Constructs a TrajectoryGenerationException.
TrajectoryGenerator
- Class in
edu.wpi.first.math.trajectory
Helper class used to generate trajectories with various constraints.
TrajectoryGenerator.ControlVectorList
- Class in
edu.wpi.first.math.trajectory
Control vector list type that works around type erasure signatures.
TrajectoryParameterizer
- Class in
edu.wpi.first.math.trajectory
Class used to parameterize a trajectory by time.
TrajectoryParameterizer.TrajectoryGenerationException
- Exception in
edu.wpi.first.math.trajectory
Exception for trajectory generation failure.
TrajectoryProto
- Class in
edu.wpi.first.math.trajectory.proto
TrajectoryProto()
- Constructor for class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
TrajectorySerializationException(String)
- Constructor for exception edu.wpi.first.math.trajectory.
TrajectoryUtil.TrajectorySerializationException
Constructs a TrajectorySerializationException.
TrajectoryStateProto
- Class in
edu.wpi.first.math.trajectory.proto
TrajectoryStateProto()
- Constructor for class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
TrajectoryUtil
- Class in
edu.wpi.first.math.trajectory
Trajectory utilities.
TrajectoryUtil.TrajectorySerializationException
- Exception in
edu.wpi.first.math.trajectory
Exception for trajectory serialization failure.
TrajectoryUtilJNI
- Class in
edu.wpi.first.math.jni
TrajectoryUtil JNI.
transaction(byte[], byte[], int)
- Method in class edu.wpi.first.wpilibj.
SPI
Perform a simultaneous read/write transaction with the device.
transaction(byte[], int, byte[], int)
- Method in class edu.wpi.first.wpilibj.
I2C
Generic transaction.
transaction(ByteBuffer, int, ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
I2C
Generic transaction.
transaction(ByteBuffer, ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
SPI
Perform a simultaneous read/write transaction with the device.
Transform2d
- Class in
edu.wpi.first.math.geometry
Represents a transformation for a Pose2d in the pose's frame.
Transform2d()
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs the identity transform -- maps an initial pose to itself.
Transform2d(double, double, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs a transform with x and y translations instead of a separate Translation2d.
Transform2d(Pose2d, Pose2d)
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs the transform that maps the initial pose to the final pose.
Transform2d(Translation2d, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs a transform with the given translation and rotation components.
Transform2d(Matrix<N3, N3>)
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs a transform with the specified affine transformation matrix.
Transform2d(Distance, Distance, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Transform2d
Constructs a transform with x and y translations instead of a separate Translation2d.
Transform2dProto
- Class in
edu.wpi.first.math.geometry.proto
Transform2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Transform2dProto
Transform2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Transform2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Transform2dStruct
Transform3d
- Class in
edu.wpi.first.math.geometry
Represents a transformation for a Pose3d in the pose's frame.
Transform3d()
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs the identity transform -- maps an initial pose to itself.
Transform3d(double, double, double, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs a transform with x, y, and z translations instead of a separate Translation3d.
Transform3d(Pose3d, Pose3d)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs the transform that maps the initial pose to the final pose.
Transform3d(Transform2d)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs a 3D transform from a 2D transform in the X-Y plane.
Transform3d(Translation3d, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs a transform with the given translation and rotation components.
Transform3d(Matrix<N4, N4>)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs a transform with the specified affine transformation matrix.
Transform3d(Distance, Distance, Distance, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Transform3d
Constructs a transform with x, y, and z translations instead of a separate Translation3d.
Transform3dProto
- Class in
edu.wpi.first.math.geometry.proto
Transform3dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Transform3dProto
Transform3dStruct
- Class in
edu.wpi.first.math.geometry.struct
Transform3dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Transform3dStruct
transformBy(Transform2d)
- Method in class edu.wpi.first.math.geometry.
Ellipse2d
Transforms the center of the ellipse and returns the new ellipse.
transformBy(Transform2d)
- Method in class edu.wpi.first.math.geometry.
Pose2d
Transforms the pose by the given transformation and returns the new pose.
transformBy(Transform2d)
- Method in class edu.wpi.first.math.geometry.
Rectangle2d
Transforms the center of the rectangle and returns the new rectangle.
transformBy(Transform2d)
- Method in class edu.wpi.first.math.trajectory.
Trajectory
Transforms all poses in the trajectory by the given transform.
transformBy(Transform3d)
- Method in class edu.wpi.first.math.geometry.
Pose3d
Transforms the pose by the given transformation and returns the new transformed pose.
Translation2d
- Class in
edu.wpi.first.math.geometry
Represents a translation in 2D space.
Translation2d()
- Constructor for class edu.wpi.first.math.geometry.
Translation2d
Constructs a Translation2d with X and Y components equal to zero.
Translation2d(double, double)
- Constructor for class edu.wpi.first.math.geometry.
Translation2d
Constructs a Translation2d with the X and Y components equal to the provided values.
Translation2d(double, Rotation2d)
- Constructor for class edu.wpi.first.math.geometry.
Translation2d
Constructs a Translation2d with the provided distance and angle.
Translation2d(Vector<N2>)
- Constructor for class edu.wpi.first.math.geometry.
Translation2d
Constructs a Translation2d from a 2D translation vector.
Translation2d(Distance, Distance)
- Constructor for class edu.wpi.first.math.geometry.
Translation2d
Constructs a Translation2d with the X and Y components equal to the provided values.
Translation2dProto
- Class in
edu.wpi.first.math.geometry.proto
Translation2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Translation2dProto
Translation2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Translation2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Translation2dStruct
Translation3d
- Class in
edu.wpi.first.math.geometry
Represents a translation in 3D space.
Translation3d()
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a Translation3d with X, Y, and Z components equal to zero.
Translation3d(double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a Translation3d with the X, Y, and Z components equal to the provided values.
Translation3d(double, Rotation3d)
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a Translation3d with the provided distance and angle.
Translation3d(Translation2d)
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a 3D translation from a 2D translation in the X-Y plane.
Translation3d(Vector<N3>)
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a Translation3d from a 3D translation vector.
Translation3d(Distance, Distance, Distance)
- Constructor for class edu.wpi.first.math.geometry.
Translation3d
Constructs a Translation3d with the X, Y, and Z components equal to the provided values.
Translation3dProto
- Class in
edu.wpi.first.math.geometry.proto
Translation3dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Translation3dProto
Translation3dStruct
- Class in
edu.wpi.first.math.geometry.struct
Translation3dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Translation3dStruct
transmitErrorCount
- Variable in class edu.wpi.first.hal.can.
CANStatus
The CAN Bus transmit error count.
transpose()
- Method in class edu.wpi.first.math.
Matrix
Calculates the transpose, Mᵀ of this matrix.
TrapezoidProfile
- Class in
edu.wpi.first.math.trajectory
A trapezoid-shaped velocity profile.
TrapezoidProfile(TrapezoidProfile.Constraints)
- Constructor for class edu.wpi.first.math.trajectory.
TrapezoidProfile
Constructs a TrapezoidProfile.
TrapezoidProfile.Constraints
- Class in
edu.wpi.first.math.trajectory
Profile constraints.
TrapezoidProfile.State
- Class in
edu.wpi.first.math.trajectory
Profile state.
TrapezoidProfileCommand
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a TrapezoidProfile instead
TrapezoidProfileCommand(TrapezoidProfile, Consumer<TrapezoidProfile.State>, Supplier<TrapezoidProfile.State>, Supplier<TrapezoidProfile.State>, Subsystem...)
- Constructor for class edu.wpi.first.wpilibj2.command.
TrapezoidProfileCommand
Deprecated.
Creates a new TrapezoidProfileCommand that will execute the given
TrapezoidProfile
.
TrapezoidProfileSubsystem
- Class in
edu.wpi.first.wpilibj2.command
Deprecated, for removal: This API element is subject to removal in a future version.
Use a TrapezoidProfile instead
TrapezoidProfileSubsystem(TrapezoidProfile.Constraints)
- Constructor for class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Creates a new TrapezoidProfileSubsystem.
TrapezoidProfileSubsystem(TrapezoidProfile.Constraints, double)
- Constructor for class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Creates a new TrapezoidProfileSubsystem.
TrapezoidProfileSubsystem(TrapezoidProfile.Constraints, double, double)
- Constructor for class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Creates a new TrapezoidProfileSubsystem.
TravelingSalesman
- Class in
edu.wpi.first.math.path
Given a list of poses, this class finds the shortest possible route that visits each pose exactly
 once and returns to the origin pose.
TravelingSalesman()
- Constructor for class edu.wpi.first.math.path.
TravelingSalesman
Constructs a traveling salesman problem solver with a cost function defined as the 2D distance
 between poses.
TravelingSalesman(ToDoubleBiFunction<Pose2d, Pose2d>)
- Constructor for class edu.wpi.first.math.path.
TravelingSalesman
Constructs a traveling salesman problem solver with a user-provided cost function.
triangle()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the triangle button's digital signal.
triangle()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the triangle button's digital signal.
triangle(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS4Controller
Constructs an event instance around the triangle button's digital signal.
triangle(EventLoop)
- Method in class edu.wpi.first.wpilibj.
PS5Controller
Constructs an event instance around the triangle button's digital signal.
triangle(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS4Controller
Constructs a Trigger instance around the triangle button's digital signal.
triangle(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandPS5Controller
Constructs a Trigger instance around the triangle button's digital signal.
trigger()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Constructs an event instance around the trigger button's digital signal.
trigger(EventLoop)
- Method in class edu.wpi.first.wpilibj.
Joystick
Constructs an event instance around the trigger button's digital signal.
trigger(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandJoystick
Constructs an event instance around the trigger button's digital signal.
Trigger
- Class in
edu.wpi.first.wpilibj2.command.button
This class provides an easy way to link commands to conditions.
Trigger(EventLoop, BooleanSupplier)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
Trigger
Creates a new trigger based on the given condition.
Trigger(BooleanSupplier)
- Constructor for class edu.wpi.first.wpilibj2.command.button.
Trigger
Creates a new trigger based on the given condition.
tryUpdate(EpilogueBackend, T, ErrorHandler)
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Attempts to update the data log.
Twist2d
- Class in
edu.wpi.first.math.geometry
A change in distance along a 2D arc since the last pose update.
Twist2d()
- Constructor for class edu.wpi.first.math.geometry.
Twist2d
Default constructor.
Twist2d(double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Twist2d
Constructs a Twist2d with the given values.
Twist2dProto
- Class in
edu.wpi.first.math.geometry.proto
Twist2dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Twist2dProto
Twist2dStruct
- Class in
edu.wpi.first.math.geometry.struct
Twist2dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Twist2dStruct
Twist3d
- Class in
edu.wpi.first.math.geometry
A change in distance along a 3D arc since the last pose update.
Twist3d()
- Constructor for class edu.wpi.first.math.geometry.
Twist3d
Default constructor.
Twist3d(double, double, double, double, double, double)
- Constructor for class edu.wpi.first.math.geometry.
Twist3d
Constructs a Twist3d with the given values.
Twist3dProto
- Class in
edu.wpi.first.math.geometry.proto
Twist3dProto()
- Constructor for class edu.wpi.first.math.geometry.proto.
Twist3dProto
Twist3dStruct
- Class in
edu.wpi.first.math.geometry.struct
Twist3dStruct()
- Constructor for class edu.wpi.first.math.geometry.struct.
Twist3dStruct
TWO_PULSE
- Static variable in class edu.wpi.first.hal.
CounterJNI
Two pulse mode.
txFullCount
- Variable in class edu.wpi.first.hal.can.
CANStatus
The CAN Bus TX full count.
type
- Variable in class edu.wpi.first.networktables.
TopicInfo
Topic type.
type
- Variable in class edu.wpi.first.util.datalog.
DataLogRecord.StartRecordData
Type of the stored data for this entry, as a string, e.g.
typeStr
- Variable in class edu.wpi.first.networktables.
TopicInfo
Topic type string.
typeString
- Variable in class edu.wpi.first.util.struct.parser.
ParsedDeclaration
Type string.
U
U()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to +Z in the NWU coordinate system.
Ultrasonic
- Class in
edu.wpi.first.wpilibj
Ultrasonic rangefinder class.
Ultrasonic(int, int)
- Constructor for class edu.wpi.first.wpilibj.
Ultrasonic
Create an instance of the Ultrasonic Sensor.
Ultrasonic(DigitalOutput, DigitalInput)
- Constructor for class edu.wpi.first.wpilibj.
Ultrasonic
Create an instance of an Ultrasonic Sensor from a DigitalInput for the echo channel and a
 DigitalOutput for the ping channel.
UltrasonicSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated
Ultrasonic
.
UltrasonicSim(int, int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
UltrasonicSim
Constructor.
UltrasonicSim(Ultrasonic)
- Constructor for class edu.wpi.first.wpilibj.simulation.
UltrasonicSim
Constructor.
UnaryFunction
- Interface in
edu.wpi.first.units
A function that accepts a single
double
and returns a
double
result.
unaryMinus()
- Method in class edu.wpi.first.math.geometry.
Rotation2d
Takes the inverse of the current rotation.
unaryMinus()
- Method in class edu.wpi.first.math.geometry.
Rotation3d
Takes the inverse of the current rotation.
unaryMinus()
- Method in class edu.wpi.first.math.geometry.
Translation2d
Returns the inverse of the current translation.
unaryMinus()
- Method in class edu.wpi.first.math.geometry.
Translation3d
Returns the inverse of the current translation.
unaryMinus()
- Method in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Returns the inverse of the current ChassisSpeeds.
unaryMinus()
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveWheelSpeeds
Returns the inverse of the current DifferentialDriveWheelSpeeds.
unaryMinus()
- Method in class edu.wpi.first.math.kinematics.
MecanumDriveWheelSpeeds
Returns the inverse of the current MecanumDriveWheelSpeeds.
unaryMinus()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Acceleration
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Angle
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Current
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Distance
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Energy
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Force
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Frequency
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Mass
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Mult
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Per
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Power
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Resistance
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Temperature
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Time
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Torque
unaryMinus()
- Method in interface edu.wpi.first.units.
Measure
Returns a measure equivalent to this one equal to zero minus its current value.
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Velocity
unaryMinus()
- Method in interface edu.wpi.first.units.measure.
Voltage
unaryMinus()
- Method in class edu.wpi.first.units.mutable.
GenericMutableMeasureImpl
UncleanStatusException
- Exception in
edu.wpi.first.hal.util
Exception for bad status codes from the chip object.
UncleanStatusException()
- Constructor for exception edu.wpi.first.hal.util.
UncleanStatusException
Create a new UncleanStatusException.
UncleanStatusException(int)
- Constructor for exception edu.wpi.first.hal.util.
UncleanStatusException
Create a new UncleanStatusException.
UncleanStatusException(int, String)
- Constructor for exception edu.wpi.first.hal.util.
UncleanStatusException
Create a new UncleanStatusException.
UncleanStatusException(String)
- Constructor for exception edu.wpi.first.hal.util.
UncleanStatusException
Create a new UncleanStatusException.
uniqueId
- Variable in class edu.wpi.first.hal.
PowerDistributionVersion
Unique ID.
uniqueId
- Variable in class edu.wpi.first.hal.
REVPHVersion
The device's unique ID.
unit()
- Method in class edu.wpi.first.math.
Vector
Returns the unit vector parallel with this vector.
unit()
- Method in record class edu.wpi.first.units.
ImmutableMeasure
Returns the value of the
unit
record component.
unit()
- Method in interface edu.wpi.first.units.measure.
Acceleration
unit()
- Method in interface edu.wpi.first.units.measure.
Angle
unit()
- Method in interface edu.wpi.first.units.measure.
AngularAcceleration
unit()
- Method in interface edu.wpi.first.units.measure.
AngularMomentum
unit()
- Method in interface edu.wpi.first.units.measure.
AngularVelocity
unit()
- Method in interface edu.wpi.first.units.measure.
Current
unit()
- Method in interface edu.wpi.first.units.measure.
Dimensionless
unit()
- Method in interface edu.wpi.first.units.measure.
Distance
unit()
- Method in interface edu.wpi.first.units.measure.
Energy
unit()
- Method in interface edu.wpi.first.units.measure.
Force
unit()
- Method in interface edu.wpi.first.units.measure.
Frequency
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableAcceleration
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngle
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularAcceleration
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularMomentum
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableAngularVelocity
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableCurrent
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableDimensionless
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableDistance
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableEnergy
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableForce
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableFrequency
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearAcceleration
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearMomentum
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableLinearVelocity
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableMass
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableMomentOfInertia
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableMult
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutablePer
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutablePower
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableResistance
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableTemperature
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableTime
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableTorque
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableVelocity
Returns the value of the
unit
record component.
unit()
- Method in record class edu.wpi.first.units.measure.
ImmutableVoltage
Returns the value of the
unit
record component.
unit()
- Method in interface edu.wpi.first.units.measure.
LinearAcceleration
unit()
- Method in interface edu.wpi.first.units.measure.
LinearMomentum
unit()
- Method in interface edu.wpi.first.units.measure.
LinearVelocity
unit()
- Method in interface edu.wpi.first.units.measure.
Mass
unit()
- Method in interface edu.wpi.first.units.measure.
MomentOfInertia
unit()
- Method in interface edu.wpi.first.units.measure.
Mult
unit()
- Method in interface edu.wpi.first.units.measure.
Per
unit()
- Method in interface edu.wpi.first.units.measure.
Power
unit()
- Method in interface edu.wpi.first.units.measure.
Resistance
unit()
- Method in interface edu.wpi.first.units.measure.
Temperature
unit()
- Method in interface edu.wpi.first.units.measure.
Time
unit()
- Method in interface edu.wpi.first.units.measure.
Torque
unit()
- Method in interface edu.wpi.first.units.
Measure
Gets the units of this measure.
unit()
- Method in interface edu.wpi.first.units.measure.
Velocity
unit()
- Method in interface edu.wpi.first.units.measure.
Voltage
unit()
- Method in class edu.wpi.first.units.mutable.
MutableMeasureBase
Unit
- Class in
edu.wpi.first.units
Unit of measurement that defines a quantity, such as grams, meters, or seconds.
Unit(Unit, double, String, String)
- Constructor for class edu.wpi.first.units.
Unit
Creates a new unit with the given name and multiplier to the base unit.
Unit(Unit, UnaryFunction, UnaryFunction, String, String)
- Constructor for class edu.wpi.first.units.
Unit
Creates a new unit defined by its relationship to some base unit.
unitA()
- Method in class edu.wpi.first.units.
MultUnit
Gets the first unit of the product.
unitB()
- Method in class edu.wpi.first.units.
MultUnit
Gets the second unit of the product.
UnitBuilder
<
U
extends
Unit
> - Class in
edu.wpi.first.units
Builder used for easily deriving new units from existing ones.
UnitBuilder(U)
- Constructor for class edu.wpi.first.units.
UnitBuilder
Creates a new unit builder object, building off of a base unit.
UnitBuilder.MappingBuilder
- Class in
edu.wpi.first.units
Helper class used for safely chaining mapping builder calls.
UnitBuilder.UnitConstructorFunction
<
U
extends
Unit
> - Interface in
edu.wpi.first.units
A functional interface for constructing new units without relying on reflection.
Units
- Class in
edu.wpi.first.math.util
Utility class that converts between commonly used units in FRC.
Units
- Class in
edu.wpi.first.units
Contains a set of predefined units.
Unknown
- Enum constant in enum class edu.wpi.first.hal.
AllianceStationID
Unknown.
unless(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to only run if this condition is not met.
unpack(Controller.ProtobufArmFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
ArmFeedforwardProto
unpack(Controller.ProtobufDifferentialDriveFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveFeedforwardProto
unpack(Controller.ProtobufDifferentialDriveWheelVoltages)
- Method in class edu.wpi.first.math.controller.proto.
DifferentialDriveWheelVoltagesProto
unpack(Controller.ProtobufElevatorFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
ElevatorFeedforwardProto
unpack(Controller.ProtobufSimpleMotorFeedforward)
- Method in class edu.wpi.first.math.controller.proto.
SimpleMotorFeedforwardProto
unpack(Geometry2D.ProtobufEllipse2d)
- Method in class edu.wpi.first.math.geometry.proto.
Ellipse2dProto
unpack(Geometry2D.ProtobufPose2d)
- Method in class edu.wpi.first.math.geometry.proto.
Pose2dProto
unpack(Geometry2D.ProtobufRectangle2d)
- Method in class edu.wpi.first.math.geometry.proto.
Rectangle2dProto
unpack(Geometry2D.ProtobufRotation2d)
- Method in class edu.wpi.first.math.geometry.proto.
Rotation2dProto
unpack(Geometry2D.ProtobufTransform2d)
- Method in class edu.wpi.first.math.geometry.proto.
Transform2dProto
unpack(Geometry2D.ProtobufTranslation2d)
- Method in class edu.wpi.first.math.geometry.proto.
Translation2dProto
unpack(Geometry2D.ProtobufTwist2d)
- Method in class edu.wpi.first.math.geometry.proto.
Twist2dProto
unpack(Geometry3D.ProtobufPose3d)
- Method in class edu.wpi.first.math.geometry.proto.
Pose3dProto
unpack(Geometry3D.ProtobufQuaternion)
- Method in class edu.wpi.first.math.geometry.proto.
QuaternionProto
unpack(Geometry3D.ProtobufRotation3d)
- Method in class edu.wpi.first.math.geometry.proto.
Rotation3dProto
unpack(Geometry3D.ProtobufTransform3d)
- Method in class edu.wpi.first.math.geometry.proto.
Transform3dProto
unpack(Geometry3D.ProtobufTranslation3d)
- Method in class edu.wpi.first.math.geometry.proto.
Translation3dProto
unpack(Geometry3D.ProtobufTwist3d)
- Method in class edu.wpi.first.math.geometry.proto.
Twist3dProto
unpack(Kinematics.ProtobufChassisSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
ChassisSpeedsProto
unpack(Kinematics.ProtobufDifferentialDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveKinematicsProto
unpack(Kinematics.ProtobufDifferentialDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelPositionsProto
unpack(Kinematics.ProtobufDifferentialDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
DifferentialDriveWheelSpeedsProto
unpack(Kinematics.ProtobufMecanumDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveKinematicsProto
unpack(Kinematics.ProtobufMecanumDriveWheelPositions)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelPositionsProto
unpack(Kinematics.ProtobufMecanumDriveWheelSpeeds)
- Method in class edu.wpi.first.math.kinematics.proto.
MecanumDriveWheelSpeedsProto
unpack(Kinematics.ProtobufSwerveDriveKinematics)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveDriveKinematicsProto
unpack(Kinematics.ProtobufSwerveModulePosition)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModulePositionProto
unpack(Kinematics.ProtobufSwerveModuleState)
- Method in class edu.wpi.first.math.kinematics.proto.
SwerveModuleStateProto
unpack(Plant.ProtobufDCMotor)
- Method in class edu.wpi.first.math.system.plant.proto.
DCMotorProto
unpack(Spline.ProtobufCubicHermiteSpline)
- Method in class edu.wpi.first.math.spline.proto.
CubicHermiteSplineProto
unpack(Spline.ProtobufQuinticHermiteSpline)
- Method in class edu.wpi.first.math.spline.proto.
QuinticHermiteSplineProto
unpack(System.ProtobufLinearSystem)
- Method in class edu.wpi.first.math.system.proto.
LinearSystemProto
unpack(Trajectory.ProtobufTrajectory)
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryProto
unpack(Trajectory.ProtobufTrajectoryState)
- Method in class edu.wpi.first.math.trajectory.proto.
TrajectoryStateProto
unpack(Wpimath.ProtobufMatrix)
- Method in class edu.wpi.first.math.proto.
MatrixProto
unpack(Wpimath.ProtobufVector)
- Method in class edu.wpi.first.math.proto.
VectorProto
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.controller.struct.
ArmFeedforwardStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveFeedforwardStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.controller.struct.
DifferentialDriveWheelVoltagesStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.controller.struct.
ElevatorFeedforwardStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.controller.struct.
SimpleMotorFeedforwardStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Ellipse2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Pose2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Pose3dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
QuaternionStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Rectangle2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Rotation2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Rotation3dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Transform2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Transform3dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Translation2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Translation3dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Twist2dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.geometry.struct.
Twist3dStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
ChassisSpeedsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveKinematicsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelPositionsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
DifferentialDriveWheelSpeedsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveKinematicsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelPositionsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
MecanumDriveWheelSpeedsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveDriveKinematicsStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModulePositionStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.kinematics.struct.
SwerveModuleStateStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.spline.struct.
CubicHermiteSplineStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.spline.struct.
QuinticHermiteSplineStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.struct.
MatrixStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.struct.
VectorStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.system.plant.struct.
DCMotorStruct
unpack(ByteBuffer)
- Method in class edu.wpi.first.math.system.struct.
LinearSystemStruct
unpack(ByteBuffer)
- Method in interface edu.wpi.first.util.struct.
Struct
Deserializes an object from a raw struct serialized ByteBuffer starting at the current
 position.
unpack(MessageType)
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Deserializes an object from a protobuf message.
unpackArray(ByteBuffer, int, Struct<T>)
- Static method in interface edu.wpi.first.util.struct.
Struct
Deserializes an array from a raw struct serialized ByteBuffer starting at the current position.
unpackArray(RepeatedDouble)
- Static method in interface edu.wpi.first.util.protobuf.
Protobuf
Unpack a serialized protobuf double array message.
unpackArray(RepeatedMessage<MessageType>, Protobuf<T, MessageType>)
- Static method in interface edu.wpi.first.util.protobuf.
Protobuf
Unpack a serialized protobuf array message.
unpackDoubleArray(ByteBuffer, int)
- Static method in interface edu.wpi.first.util.struct.
Struct
Deserializes a double array from a raw struct serialized ByteBuffer starting at the current
 position.
unpackInto(T, ByteBuffer)
- Method in interface edu.wpi.first.util.struct.
Struct
Updates object contents from a raw struct serialized ByteBuffer starting at the current
 position.
unpackInto(T, MessageType)
- Method in interface edu.wpi.first.util.protobuf.
Protobuf
Updates the object contents from a protobuf message.
unpackRGB(int, Color.RGBChannel)
- Static method in class edu.wpi.first.wpilibj.util.
Color
Unpacks a single color channel from a packed 32-bit RGB integer.
unpublish()
- Method in interface edu.wpi.first.networktables.
BooleanArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
BooleanEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
DoubleArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
DoubleEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
FloatArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
FloatEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
GenericEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
IntegerArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
IntegerEntry
Stops publishing the entry if it's published.
unpublish()
- Method in class edu.wpi.first.networktables.
NetworkTableEntry
Stops publishing the entry if it's been published.
unpublish()
- Method in interface edu.wpi.first.networktables.
ProtobufEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
RawEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
StringArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
StringEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
StructArrayEntry
Stops publishing the entry if it's published.
unpublish()
- Method in interface edu.wpi.first.networktables.
StructEntry
Stops publishing the entry if it's published.
unpublish(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Unpublishes topic.
unregisterAllSubsystems()
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Un-registers all registered Subsystems with the scheduler.
unregisterSubsystem(Subsystem...)
- Method in class edu.wpi.first.wpilibj2.command.
CommandScheduler
Un-registers subsystems with the scheduler.
unreserveCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
unreserveCompressor()
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Unreserve the compressor.
unreserveCompressor()
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
unreserveSolenoids(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticHub
unreserveSolenoids(int)
- Method in interface edu.wpi.first.wpilibj.
PneumaticsBase
Unreserve the solenoids marked in the bitmask.
unreserveSolenoids(int)
- Method in class edu.wpi.first.wpilibj.
PneumaticsControlModule
UnscentedKalmanFilter
<
States
extends
Num
,
Inputs
extends
Num
,
Outputs
extends
Num
> - Class in
edu.wpi.first.math.estimator
A Kalman filter combines predictions from a model and measurements to give an estimate of the
 true system state.
UnscentedKalmanFilter(Nat<States>, Nat<Outputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Outputs, N1>>, Matrix<States, N1>, Matrix<Outputs, N1>, double)
- Constructor for class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Constructs an Unscented Kalman Filter.
UnscentedKalmanFilter(Nat<States>, Nat<Outputs>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<States, N1>>, BiFunction<Matrix<States, N1>, Matrix<Inputs, N1>, Matrix<Outputs, N1>>, Matrix<States, N1>, Matrix<Outputs, N1>, BiFunction<Matrix<States, ?>, Matrix<?, N1>, Matrix<States, N1>>, BiFunction<Matrix<Outputs, ?>, Matrix<?, N1>, Matrix<Outputs, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>, BiFunction<Matrix<Outputs, N1>, Matrix<Outputs, N1>, Matrix<Outputs, N1>>, BiFunction<Matrix<States, N1>, Matrix<States, N1>, Matrix<States, N1>>, double)
- Constructor for class edu.wpi.first.math.estimator.
UnscentedKalmanFilter
Constructs an Unscented Kalman filter with custom mean, residual, and addition functions.
unsubscribe(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Unsubscribes from topic.
unsubscribeMultiple(int)
- Static method in class edu.wpi.first.networktables.
NetworkTablesJNI
Unsubscribes from multiple topics.
until(BooleanSupplier)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with an interrupt condition.
update()
- Method in class edu.wpi.first.epilogue.logging.
LogBackedSendableBuilder
update()
- Method in interface edu.wpi.first.util.sendable.
SendableBuilder
Update the published values by calling the getters for all properties.
update()
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
Shuffleboard
Updates all the values in Shuffleboard.
update()
- Method in class edu.wpi.first.wpilibj.smartdashboard.
SendableBuilderImpl
Update the network table values by calling the getters for all properties.
update(boolean)
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Updates the last value and appends a record to the log if it has changed.
update(boolean[])
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(boolean[], long)
- Method in class edu.wpi.first.util.datalog.
BooleanArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(boolean, long)
- Method in class edu.wpi.first.util.datalog.
BooleanLogEntry
Updates the last value and appends a record to the log if it has changed.
update(byte[])
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(byte[], int, int)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(byte[], int, int, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(byte[], long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(double)
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Updates the last value and appends a record to the log if it has changed.
update(double)
- Method in class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim
Update the drivetrain states with the current time difference.
update(double)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Updates the simulation.
update(double[])
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(double[], long)
- Method in class edu.wpi.first.util.datalog.
DoubleArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(double, long)
- Method in class edu.wpi.first.util.datalog.
DoubleLogEntry
Updates the last value and appends a record to the log if it has changed.
update(float)
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Updates the last value and appends a record to the log if it has changed.
update(float[])
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(float[], long)
- Method in class edu.wpi.first.util.datalog.
FloatArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(float, long)
- Method in class edu.wpi.first.util.datalog.
FloatLogEntry
Updates the last value and appends a record to the log if it has changed.
update(int, double)
- Method in class edu.wpi.first.hal.
DMAJNISample
update(long)
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Updates the last value and appends a record to the log if it has changed.
update(long[])
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(long[], long)
- Method in class edu.wpi.first.util.datalog.
IntegerArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(long, long)
- Method in class edu.wpi.first.util.datalog.
IntegerLogEntry
Updates the last value and appends a record to the log if it has changed.
update(EpilogueBackend, T)
- Method in class edu.wpi.first.epilogue.logging.
ClassSpecificLogger
Updates an object's fields in a data log.
update(ControlWord)
- Method in class edu.wpi.first.hal.
ControlWord
Updates from an existing word.
update(Rotation2d, double, double)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator
Updates the pose estimator with wheel encoder and gyro information.
update(Rotation2d, double, double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry
Updates the robot position on the field using distance measurements from encoders.
update(Rotation2d, SwerveModulePosition[])
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveOdometry
update(Rotation2d, T)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Updates the pose estimator with wheel encoder and gyro information.
update(Rotation2d, T)
- Method in class edu.wpi.first.math.kinematics.
Odometry
Updates the robot's position on the field using forward kinematics and integration of the pose
 over time.
update(Rotation3d, double, double)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator3d
Updates the pose estimator with wheel encoder and gyro information.
update(Rotation3d, double, double)
- Method in class edu.wpi.first.math.kinematics.
DifferentialDriveOdometry3d
Updates the robot position on the field using distance measurements from encoders.
update(Rotation3d, SwerveModulePosition[])
- Method in class edu.wpi.first.math.kinematics.
SwerveDriveOdometry3d
update(Rotation3d, T)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Updates the pose estimator with wheel encoder and gyro information.
update(Rotation3d, T)
- Method in class edu.wpi.first.math.kinematics.
Odometry3d
Updates the robot's position on the field using forward kinematics and integration of the pose
 over time.
update(Sendable)
- Static method in class edu.wpi.first.util.sendable.
SendableRegistry
Updates network table information from an object.
update(DMA, double)
- Method in class edu.wpi.first.wpilibj.
DMASample
Retrieves a new DMA sample.
update(String)
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Updates the last value and appends a record to the log if it has changed.
update(String[])
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(String[], long)
- Method in class edu.wpi.first.util.datalog.
StringArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(String, long)
- Method in class edu.wpi.first.util.datalog.
StringLogEntry
Updates the last value and appends a record to the log if it has changed.
update(ByteBuffer)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(ByteBuffer, int, int)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(ByteBuffer, int, int, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(ByteBuffer, long)
- Method in class edu.wpi.first.util.datalog.
RawLogEntry
Updates the last value and appends a record to the log if it has changed.
update(Collection<T>)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(Collection<T>, long)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T)
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T)
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T[])
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T[], long)
- Method in class edu.wpi.first.util.datalog.
StructArrayLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T, long)
- Method in class edu.wpi.first.util.datalog.
ProtobufLogEntry
Updates the last value and appends a record to the log if it has changed.
update(T, long)
- Method in class edu.wpi.first.util.datalog.
StructLogEntry
Updates the last value and appends a record to the log if it has changed.
updateDutyCycle(double)
- Method in class edu.wpi.first.wpilibj.
DigitalOutput
Change the duty-cycle that is being generated on the line.
updateEntries(NetworkTable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismLigament2d
updateEntries(NetworkTable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismObject2d
Update this object's entries with new ones from a new table.
updateEntries(NetworkTable)
- Method in class edu.wpi.first.wpilibj.smartdashboard.
MechanismRoot2d
updateNotifierAlarm(int, long)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Updates the trigger time for a notifier.
updateValues()
- Static method in class edu.wpi.first.wpilibj.livewindow.
LiveWindow
Tell all the sensors to update (send) their values.
updateValues()
- Static method in class edu.wpi.first.wpilibj.smartdashboard.
SmartDashboard
Puts all sendable data to the dashboard.
updateWithTime(double, Rotation2d, double, double)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator
Updates the pose estimator with wheel encoder and gyro information.
updateWithTime(double, Rotation2d, SwerveModulePosition[])
- Method in class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator
updateWithTime(double, Rotation2d, T)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator
Updates the pose estimator with wheel encoder and gyro information.
updateWithTime(double, Rotation3d, double, double)
- Method in class edu.wpi.first.math.estimator.
DifferentialDrivePoseEstimator3d
Updates the pose estimator with wheel encoder and gyro information.
updateWithTime(double, Rotation3d, SwerveModulePosition[])
- Method in class edu.wpi.first.math.estimator.
SwerveDrivePoseEstimator3d
updateWithTime(double, Rotation3d, T)
- Method in class edu.wpi.first.math.estimator.
PoseEstimator3d
Updates the pose estimator with wheel encoder and gyro information.
updateX(Matrix<N2, N1>, Matrix<N1, N1>, double)
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Updates the state of the elevator.
updateX(Matrix<N2, N1>, Matrix<N1, N1>, double)
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Updates the state of the arm.
updateX(Matrix<States, N1>, Matrix<Inputs, N1>, double)
- Method in class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
Updates the state estimate of the system.
UpDownCounter
- Class in
edu.wpi.first.wpilibj.counter
Up Down Counter.
UpDownCounter(DigitalSource, DigitalSource)
- Constructor for class edu.wpi.first.wpilibj.counter.
UpDownCounter
Constructs a new UpDown Counter.
UsbCamera
- Class in
edu.wpi.first.cscore
A source that represents a USB camera.
UsbCamera(String, int)
- Constructor for class edu.wpi.first.cscore.
UsbCamera
Create a source for a USB camera based on device number.
UsbCamera(String, String)
- Constructor for class edu.wpi.first.cscore.
UsbCamera
Create a source for a USB camera based on device path.
UsbCameraInfo
- Class in
edu.wpi.first.cscore
USB camera information.
UsbCameraInfo(int, String, String, String[], int, int)
- Constructor for class edu.wpi.first.cscore.
UsbCameraInfo
Create a new set of UsbCameraInfo.
USE_CODE_NAME
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Naming
Sets the default naming strategy to use the name of the element as it appears in source code.
USE_HUMAN_NAME
- Enum constant in enum class edu.wpi.first.epilogue.
Logged.Naming
Sets the default naming strategy to use a human-readable name based on the name of the name
 of the element as it appears in source code.
useOutput(double, double)
- Method in class edu.wpi.first.wpilibj2.command.
PIDSubsystem
Deprecated.
Uses the output from the PIDController.
useOutput(double, TrapezoidProfile.State)
- Method in class edu.wpi.first.wpilibj2.command.
ProfiledPIDSubsystem
Deprecated.
Uses the output from the ProfiledPIDController.
useState(TrapezoidProfile.State)
- Method in class edu.wpi.first.wpilibj2.command.
TrapezoidProfileSubsystem
Deprecated.
Users should override this to consume the current state of the motion profile.
V
valid
- Variable in class edu.wpi.first.networktables.
TimeSyncEventData
If serverTimeOffset and RTT are valid.
value
- Variable in class edu.wpi.first.cscore.
VideoEvent
Event value.
value
- Variable in class edu.wpi.first.hal.
AccumulatorResult
The total value accumulated.
value
- Variable in class edu.wpi.first.hal.simulation.
SimDeviceDataJNI.SimValueInfo
value
- Variable in class edu.wpi.first.networktables.
TimestampedBoolean
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedBooleanArray
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedDouble
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedDoubleArray
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedFloat
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedFloatArray
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedInteger
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedIntegerArray
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedObject
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedRaw
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedString
Value.
value
- Variable in class edu.wpi.first.networktables.
TimestampedStringArray
Value.
value
- Variable in class edu.wpi.first.networktables.
ValueEventData
The new value.
value
- Variable in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
The native value for this ColorOrder.
value
- Variable in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
The integer value representing this enumeration.
value
- Variable in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
The integer value representing this enumeration.
value
- Variable in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
Axis value.
value
- Variable in enum class edu.wpi.first.wpilibj.
CompressorConfigType
CompressorConfigType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
Counter.Mode
Mode value.
value
- Variable in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
EncodingType value.
value
- Variable in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
MotorType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
IndexingType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
HIDType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
I2C.Port
Port value.
value
- Variable in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
AxisType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
Joystick.ButtonType
ButtonType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
PowerDistribution.ModuleType
ModuleType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Axis value.
value
- Variable in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Button value.
value
- Variable in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Axis value.
value
- Variable in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Button value.
value
- Variable in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
The native value for this state.
value
- Variable in enum class edu.wpi.first.wpilibj.
RuntimeType
RuntimeType value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
FlowControl value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Parity value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SerialPort.Port
Port value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
StopBits value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SerialPort.WriteBufferMode
WriteBufferMode value.
value
- Variable in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
KitbotGearing value.
value
- Variable in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
KitbotMotor value.
value
- Variable in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
KitbotWheelSize value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SPI.Mode
SPI mode value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SPI.Port
SPI port value.
value
- Variable in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Axis value.
value
- Variable in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Button value.
value
- Variable in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
WaitResult value.
value
- Variable in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Axis value.
value
- Variable in enum class edu.wpi.first.wpilibj.
XboxController.Button
Button value.
value()
- Element in annotation interface edu.wpi.first.epilogue.
CustomLoggerFor
The class or classes of objects able to be logged with the annotated logger.
value(String, double, String)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log a generic data value from the motor.
Value
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard "unitless" unit.
Value
- Static variable in class edu.wpi.first.units.
Units
A dimensionless unit that performs no scaling whatsoever.
valueData
- Variable in class edu.wpi.first.networktables.
NetworkTableEvent
Value data (for value events).
ValueEventData
- Class in
edu.wpi.first.networktables
NetworkTables value event data.
ValueEventData(NetworkTableInstance, int, int, NetworkTableValue)
- Constructor for class edu.wpi.first.networktables.
ValueEventData
Constructor.
valueOf(String)
- Static method in enum class edu.wpi.first.apriltag.
AprilTagFieldLayout.OriginPosition
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.apriltag.
AprilTagFields
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
CameraServerJNI.TelemetryKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
VideoSink.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.cscore.
VideoSource.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.epilogue.
Logged.Importance
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.epilogue.
Logged.Naming
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.epilogue.
Logged.Strategy
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.hal.
AllianceStationID
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.hal.
SimDevice.Direction
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.math.filter.
Debouncer.DebounceType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.math.
MathUsageId
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.networktables.
NetworkTableType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.util.
PixelFormat
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.util.sendable.
SendableBuilder.BackendKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.util.struct.parser.
TokenKind
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.util.struct.
StructFieldType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.util.
TimestampSource
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.IMUAxis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
ADXL362.Range
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Alert.AlertType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
BuiltInAccelerometer.Range
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Counter.Mode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
DoubleSolenoid.Value
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
DriverStation.Alliance
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
GenericHID.RumbleType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
I2C.Port
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Joystick.ButtonType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
LEDPattern.GradientType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PneumaticsModuleType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PowerDistribution.ModuleType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
PWM.PeriodMultiplier
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Relay.Direction
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
Relay.Value
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.romi.
OnBoardIO.ChannelMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
RuntimeType
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.Port
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.WriteBufferMode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInLayouts
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SPI.Mode
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SPI.Port
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.util.
Color.RGBChannel
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj.
XboxController.Button
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj2.command.
Command.InterruptionBehavior
Returns the enum constant of this class with the specified name.
valueOf(String)
- Static method in enum class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Direction
Returns the enum constant of this class with the specified name.
values()
- Static method in enum class edu.wpi.first.apriltag.
AprilTagFieldLayout.OriginPosition
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.apriltag.
AprilTagFields
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
CameraServerJNI.TelemetryKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
HttpCamera.HttpCameraKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
VideoEvent.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
VideoProperty.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
VideoSink.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
VideoSource.ConnectionStrategy
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.cscore.
VideoSource.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.epilogue.
Logged.Importance
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.epilogue.
Logged.Naming
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.epilogue.
Logged.Strategy
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.hal.
AllianceStationID
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.hal.
CANAPITypes.CANDeviceType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.hal.
CANAPITypes.CANManufacturer
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.hal.
SimDevice.Direction
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.math.filter.
Debouncer.DebounceType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.math.
MathUsageId
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.networktables.
NetworkTableEvent.Kind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.networktables.
NetworkTableInstance.NetworkMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.networktables.
NetworkTableType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Method in class edu.wpi.first.units.collections.
LongToObjectHashMap
Gets the values contained in the map.
values()
- Static method in enum class edu.wpi.first.util.
PixelFormat
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.util.sendable.
SendableBuilder.BackendKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.util.struct.parser.
TokenKind
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.util.struct.
StructFieldType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.util.
TimestampSource
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
AddressableLED.ColorOrder
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.IMUAxis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.IMUAxis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Axes
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_I2C.Range
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Axes
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL345_SPI.Range
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL362.Axes
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
ADXL362.Range
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Alert.AlertType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
AnalogTriggerOutput.AnalogTriggerType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
BuiltInAccelerometer.Range
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
CompressorConfigType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.counter.
EdgeConfiguration
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Counter.Mode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
CounterBase.EncodingType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
DMASample.DMAReadStatus
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
DoubleSolenoid.Value
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.drive.
RobotDriveBase.MotorType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
DriverStation.Alliance
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
DriverStation.MatchType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Encoder.IndexingType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
GenericHID.HIDType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
GenericHID.RumbleType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
I2C.Port
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Joystick.AxisType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Joystick.ButtonType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
LEDPattern.GradientType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PneumaticsModuleType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PowerDistribution.ModuleType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PS4Controller.Axis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PS4Controller.Button
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PS5Controller.Axis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PS5Controller.Button
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
PWM.PeriodMultiplier
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Relay.Direction
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
Relay.Value
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
RobotController.RadioLEDState
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.romi.
OnBoardIO.ChannelMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
RuntimeType
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.FlowControl
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.Parity
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.Port
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.StopBits
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SerialPort.WriteBufferMode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInLayouts
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
BuiltInWidgets
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.shuffleboard.
EventImportance
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotGearing
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotMotor
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.simulation.
DifferentialDrivetrainSim.KitbotWheelSize
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SPI.Mode
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SPI.Port
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
StadiaController.Axis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
StadiaController.Button
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
SynchronousInterrupt.WaitResult
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.State
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.util.
Color.RGBChannel
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
XboxController.Axis
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj.
XboxController.Button
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj2.command.
Command.InterruptionBehavior
Returns an array containing the constants of this enum class, in
the order they are declared.
values()
- Static method in enum class edu.wpi.first.wpilibj2.command.sysid.
SysIdRoutine.Direction
Returns an array containing the constants of this enum class, in
the order they are declared.
valueStr
- Variable in class edu.wpi.first.cscore.
VideoEvent
Event value as a string.
VecBuilder
- Class in
edu.wpi.first.math
A class for constructing vectors (Nx1 matrices).
Vector
<
R
extends
Num
> - Class in
edu.wpi.first.math
A shape-safe wrapper over Efficient Java Matrix Library (EJML) matrices.
Vector(Matrix<R, N1>)
- Constructor for class edu.wpi.first.math.
Vector
Constructs a new vector with the storage of the supplied matrix.
Vector(Nat<R>)
- Constructor for class edu.wpi.first.math.
Vector
Constructs an empty zero vector of the given dimensions.
Vector(SimpleMatrix)
- Constructor for class edu.wpi.first.math.
Vector
Constructs a new
Vector
with the given storage.
VectorProto
<
R
extends
Num
> - Class in
edu.wpi.first.math.proto
VectorProto(Nat<R>)
- Constructor for class edu.wpi.first.math.proto.
VectorProto
Constructs the
Protobuf
implementation.
VectorStruct
<
R
extends
Num
> - Class in
edu.wpi.first.math.struct
VectorStruct(Nat<R>)
- Constructor for class edu.wpi.first.math.struct.
VectorStruct
Constructs the
Struct
implementation.
velocity
- Variable in class edu.wpi.first.math.trajectory.
ExponentialProfile.State
The velocity at this state.
velocity
- Variable in class edu.wpi.first.math.trajectory.
TrapezoidProfile.State
The velocity at this state.
Velocity
<
D
extends
Unit
> - Interface in
edu.wpi.first.units.measure
velocityMetersPerSecond
- Variable in class edu.wpi.first.math.trajectory.
Trajectory.State
The speed at that point of the trajectory.
VelocityUnit
<
D
extends
Unit
> - Class in
edu.wpi.first.units
Unit of velocity dimension that is a combination of a distance unit (numerator) and a time unit
 (denominator).
vendorId
- Variable in class edu.wpi.first.cscore.
UsbCameraInfo
USB vendor id.
verifySensor(int, int, byte[])
- Method in class edu.wpi.first.wpilibj.
I2C
Verify that a device's registers contain expected values.
Version
- Static variable in class edu.wpi.first.wpilibj.util.
WPILibVersion
The version number.
Victor
- Class in
edu.wpi.first.wpilibj.motorcontrol
Vex Robotics Victor 888 Motor Controller.
Victor(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
Victor
Constructor.
VictorSP
- Class in
edu.wpi.first.wpilibj.motorcontrol
Vex Robotics Victor SP Motor Controller.
VictorSP(int)
- Constructor for class edu.wpi.first.wpilibj.motorcontrol.
VictorSP
Constructor.
VideoCamera
- Class in
edu.wpi.first.cscore
A source that represents a video camera.
VideoCamera(int)
- Constructor for class edu.wpi.first.cscore.
VideoCamera
Constructs a VideoCamera.
VideoCamera.WhiteBalance
- Class in
edu.wpi.first.cscore
White balance.
VideoEvent
- Class in
edu.wpi.first.cscore
Video event.
VideoEvent.Kind
- Enum Class in
edu.wpi.first.cscore
VideoEvent kind.
VideoException
- Exception in
edu.wpi.first.cscore
An exception raised by the camera server.
VideoException(String)
- Constructor for exception edu.wpi.first.cscore.
VideoException
Constructs the exception with the given message.
VideoListener
- Class in
edu.wpi.first.cscore
An event listener.
VideoListener(Consumer<VideoEvent>, int, boolean)
- Constructor for class edu.wpi.first.cscore.
VideoListener
Create an event listener.
VideoMode
- Class in
edu.wpi.first.cscore
Video mode.
VideoMode(int, int, int, int)
- Constructor for class edu.wpi.first.cscore.
VideoMode
Create a new video mode.
VideoMode(PixelFormat, int, int, int)
- Constructor for class edu.wpi.first.cscore.
VideoMode
Create a new video mode.
VideoProperty
- Class in
edu.wpi.first.cscore
A source or sink property.
VideoProperty.Kind
- Enum Class in
edu.wpi.first.cscore
VideoProperty property types.
VideoSink
- Class in
edu.wpi.first.cscore
A sink for video that accepts a sequence of frames.
VideoSink(int)
- Constructor for class edu.wpi.first.cscore.
VideoSink
Constructs a VideoSink.
VideoSink.Kind
- Enum Class in
edu.wpi.first.cscore
Video sink types.
VideoSource
- Class in
edu.wpi.first.cscore
A source for video that provides a sequence of frames.
VideoSource(int)
- Constructor for class edu.wpi.first.cscore.
VideoSource
Constructs a VideoSource.
VideoSource.ConnectionStrategy
- Enum Class in
edu.wpi.first.cscore
Connection strategy.
VideoSource.Kind
- Enum Class in
edu.wpi.first.cscore
Video source kind.
VisionPipeline
- Interface in
edu.wpi.first.vision
A vision pipeline is responsible for running a group of OpenCV algorithms to extract data from an
 image.
VisionRunner
<
P
extends
VisionPipeline
> - Class in
edu.wpi.first.vision
A vision runner is a convenient wrapper object to make it easy to run vision pipelines from robot
 code.
VisionRunner(VideoSource, P, VisionRunner.Listener<? super P>)
- Constructor for class edu.wpi.first.vision.
VisionRunner
Creates a new vision runner.
VisionRunner.Listener
<
P
extends
VisionPipeline
> - Interface in
edu.wpi.first.vision
Listener interface for a callback that should run after a pipeline has processed its input.
VisionThread
- Class in
edu.wpi.first.vision
A vision thread is a special thread that runs a vision pipeline.
VisionThread(VideoSource, P, VisionRunner.Listener<? super P>)
- Constructor for class edu.wpi.first.vision.
VisionThread
Creates a new vision thread that continuously runs the given vision pipeline.
VisionThread(VisionRunner<?>)
- Constructor for class edu.wpi.first.vision.
VisionThread
Creates a vision thread that continuously runs a
VisionPipeline
.
Volt
- Static variable in class edu.wpi.first.units.
Units
The base unit of electric potential.
voltage(Voltage)
- Method in class edu.wpi.first.wpilibj.sysid.
SysIdRoutineLog.MotorLog
Log the voltage applied to the motor.
Voltage
- Interface in
edu.wpi.first.units.measure
VOLTAGE_OUT_OF_RANGE
- Static variable in class edu.wpi.first.hal.
HALUtil
Voltage to convert to raw value is out of range [0; 5].
VoltageUnit
- Class in
edu.wpi.first.units
Unit of electric voltage dimension.
VoltageUnit
- Static variable in class edu.wpi.first.units.
BaseUnits
The standard unit of voltage, volts.
Volts
- Static variable in class edu.wpi.first.units.
Units
The base unit of electric potential.
VoltsPerMeterPerSecond
- Static variable in class edu.wpi.first.units.
Units
A standard unit for measuring linear mechanisms' feedforward voltages based on a model of the
 system and a desired commanded linear velocity.
VoltsPerMeterPerSecondSquared
- Static variable in class edu.wpi.first.units.
Units
A standard unit for measuring linear mechanisms' feedforward voltages based on a model of the
 system and a desired commanded linear acceleration.
VoltsPerRadianPerSecond
- Static variable in class edu.wpi.first.units.
Units
A standard unit for measuring angular mechanisms' feedforward voltages based on a model of the
 system and a desired commanded angular velocity.
VoltsPerRadianPerSecondSquared
- Static variable in class edu.wpi.first.units.
Units
A standard unit for measuring angular mechanisms' feedforward voltages based on a model of the
 system and a desired commanded angular acceleration.
vxMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Velocity along the x-axis.
vyMetersPerSecond
- Variable in class edu.wpi.first.math.kinematics.
ChassisSpeeds
Velocity along the y-axis.
W
W()
- Static method in class edu.wpi.first.math.geometry.
CoordinateAxis
Returns a coordinate axis corresponding to +Y in the NWU coordinate system.
WaitCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that does nothing but takes a specified amount of time to finish.
WaitCommand(double)
- Constructor for class edu.wpi.first.wpilibj2.command.
WaitCommand
Creates a new WaitCommand.
WaitCommand(Time)
- Constructor for class edu.wpi.first.wpilibj2.command.
WaitCommand
Creates a new WaitCommand.
waitForDsConnection(double)
- Static method in class edu.wpi.first.wpilibj.
DriverStation
Wait for a DS connection.
waitForInterrupt(double)
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Wait for an interrupt, ignoring any previously occurring interrupts.
waitForInterrupt(double, boolean)
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Wait for an interrupt.
waitForInterrupt(int, double, boolean)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Waits for the defined interrupt to occur.
waitForListenerQueue(double)
- Method in class edu.wpi.first.networktables.
NetworkTableInstance
Wait for the listener queue to be empty.
waitForMultipleInterrupts(int, long, double, boolean)
- Static method in class edu.wpi.first.hal.
InterruptJNI
Waits for any interrupt covered by the mask to occur.
waitForNotifierAlarm(int)
- Static method in class edu.wpi.first.hal.
NotifierJNI
Waits for the next alarm for the specific notifier.
waitForObject(int)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Waits for a handle to be signaled.
waitForObjects(int[])
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Waits for one or more handles to be signaled.
waitForObjectsTimeout(int[], double)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Waits for one or more handles to be signaled, with timeout.
waitForObjectTimeout(int, double)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Waits for a handle to be signaled, with timeout.
waitForProgramStart()
- Static method in class edu.wpi.first.hal.simulation.
SimulatorJNI
waitForProgramStart()
- Static method in class edu.wpi.first.wpilibj.simulation.
SimHooks
Waits until the user program has started.
waitForQueue(double)
- Method in class edu.wpi.first.networktables.
NetworkTableListener
Wait for the topic listener queue to be empty.
waitSeconds(double)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that does nothing, finishing after a specified duration.
waitTime(Time)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that does nothing, finishing after a specified duration.
waitUntil(BooleanSupplier)
- Static method in class edu.wpi.first.wpilibj2.command.
Commands
Constructs a command that does nothing, finishing once a condition becomes true.
WaitUntilCommand
- Class in
edu.wpi.first.wpilibj2.command
A command that does nothing but ends after a specified match time or condition.
WaitUntilCommand(double)
- Constructor for class edu.wpi.first.wpilibj2.command.
WaitUntilCommand
Creates a new WaitUntilCommand that ends after a given match time.
WaitUntilCommand(BooleanSupplier)
- Constructor for class edu.wpi.first.wpilibj2.command.
WaitUntilCommand
Creates a new WaitUntilCommand that ends after a given condition becomes true.
wakeup()
- Method in class edu.wpi.first.util.
EventVector
Wakes up all events in the event vector.
wakeupWaitingInterrupt()
- Method in class edu.wpi.first.wpilibj.
SynchronousInterrupt
Force triggering of any waiting interrupt, which will be seen as a timeout.
warnForNonLoggableTypes()
- Element in annotation interface edu.wpi.first.epilogue.
Logged
Class-level only: if
Logged.strategy()
is
Logged.Strategy.OPT_OUT
, this can be used to quiet
 the warnings that are printed for non-loggable fields and methods detected within the class.
Watchdog
- Class in
edu.wpi.first.wpilibj
A class that's a wrapper around a watchdog timer.
Watchdog(double, Runnable)
- Constructor for class edu.wpi.first.wpilibj.
Watchdog
Watchdog constructor.
Watt
- Static variable in class edu.wpi.first.units.
Units
The base unit of power.
Watts
- Static variable in class edu.wpi.first.units.
Units
The base unit of power.
WebServer
- Class in
edu.wpi.first.net
A web server using the HTTP protocol.
WheelSpeeds()
- Constructor for class edu.wpi.first.wpilibj.drive.
DifferentialDrive.WheelSpeeds
Constructs a WheelSpeeds with zeroes for left and right speeds.
WheelSpeeds()
- Constructor for class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Constructs a WheelSpeeds with zeroes for all four speeds.
WheelSpeeds(double, double)
- Constructor for class edu.wpi.first.wpilibj.drive.
DifferentialDrive.WheelSpeeds
Constructs a WheelSpeeds.
WheelSpeeds(double, double, double, double)
- Constructor for class edu.wpi.first.wpilibj.drive.
MecanumDrive.WheelSpeeds
Constructs a WheelSpeeds.
whileFalse(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Starts the given command when the condition changes to `false` and cancels it when the
 condition changes to `true`.
whileTrue(Command)
- Method in class edu.wpi.first.wpilibj2.command.button.
Trigger
Starts the given command when the condition changes to `true` and cancels it when the condition
 changes to `false`.
WhiteBalance()
- Constructor for class edu.wpi.first.cscore.
VideoCamera.WhiteBalance
Default constructor.
WidgetType
- Interface in
edu.wpi.first.wpilibj.shuffleboard
Represents the type of a widget in Shuffleboard.
width
- Variable in class edu.wpi.first.cscore.
VideoMode
Width in pixels.
withDeadline(Command)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Creates a new command that runs this command and the deadline in parallel, finishing (and
 interrupting this command) when the deadline finishes.
withInterruptBehavior(Command.InterruptionBehavior)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command to have a different
interruption behavior
.
withName(String)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this Command with a name.
withPosition(int, int)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Sets the position of this component in the tab.
withProperties(Map<String, Object>)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Sets custom properties for this component.
withReduction(double)
- Method in class edu.wpi.first.math.system.plant.
DCMotor
Returns a copy of this motor with the given gearbox reduction applied.
withSize(int, int)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ShuffleboardComponent
Sets the size of this component in the tab.
withTimeout(double)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a timeout.
withTimeout(Time)
- Method in class edu.wpi.first.wpilibj2.command.
Command
Decorates this command with a timeout.
withWidget(WidgetType)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ComplexWidget
Sets the type of widget used to display the data.
withWidget(String)
- Method in class edu.wpi.first.wpilibj.shuffleboard.
ComplexWidget
Sets the type of widget used to display the data.
wouldHitLowerLimit(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns whether the elevator would hit the lower limit.
wouldHitLowerLimit(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns whether the arm would hit the lower limit.
wouldHitUpperLimit(double)
- Method in class edu.wpi.first.wpilibj.simulation.
ElevatorSim
Returns whether the elevator would hit the upper limit.
wouldHitUpperLimit(double)
- Method in class edu.wpi.first.wpilibj.simulation.
SingleJointedArmSim
Returns whether the arm would hit the upper limit.
WPICleaner
- Class in
edu.wpi.first.util
Cleaner object for WPILib objects.
WPILibVersion
- Class in
edu.wpi.first.wpilibj.util
Autogenerated file! Do not manually edit this file.
Wpimath
- Class in
edu.wpi.first.math.proto
Wpimath()
- Constructor for class edu.wpi.first.math.proto.
Wpimath
Wpimath.ProtobufMatrix
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufMatrix
Wpimath.ProtobufVector
- Class in
edu.wpi.first.math.proto
Protobuf type
ProtobufVector
WPIMathJNI
- Class in
edu.wpi.first.math.jni
Base class for all WPIMath JNI wrappers.
WPIMathJNI()
- Constructor for class edu.wpi.first.math.jni.
WPIMathJNI
Utility class.
WPIMathJNI.Helper
- Class in
edu.wpi.first.math.jni
Sets whether JNI should be loaded in the static block.
WPINetJNI
- Class in
edu.wpi.first.net
WPINet JNI.
WPINetJNI.Helper
- Class in
edu.wpi.first.net
Sets whether JNI should be loaded in the static block.
WPISerializable
- Interface in
edu.wpi.first.util
Marker interface to indicate a class is serializable using WPI serialization methods.
WPIUtilJNI
- Class in
edu.wpi.first.util
WPIUtil JNI.
WPIUtilJNI()
- Constructor for class edu.wpi.first.util.
WPIUtilJNI
Utility class.
WPIUtilJNI.Helper
- Class in
edu.wpi.first.util
Sets whether JNI should be loaded in the static block.
wrap(VideoSource)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
SendableCameraWrapper
Gets a sendable wrapper object for the given video source, creating the wrapper if one does not
 already exist for the source.
wrap(NetworkTableInstance, int, Protobuf<T, ?>)
- Static method in class edu.wpi.first.networktables.
ProtobufTopic
Create a ProtobufTopic from a native handle; generally NetworkTableInstance.getProtobufTopic()
 should be used instead.
wrap(NetworkTableInstance, int, Struct<T>)
- Static method in class edu.wpi.first.networktables.
StructArrayTopic
Create a StructArrayTopic from a native handle; generally
 NetworkTableInstance.getStructArrayTopic() should be used instead.
wrap(NetworkTableInstance, int, Struct<T>)
- Static method in class edu.wpi.first.networktables.
StructTopic
Create a StructTopic from a native handle; generally NetworkTableInstance.getStructTopic()
 should be used instead.
wrap(Topic, Protobuf<T, ?>)
- Static method in class edu.wpi.first.networktables.
ProtobufTopic
Create a ProtobufTopic from a generic topic.
wrap(Topic, Struct<T>)
- Static method in class edu.wpi.first.networktables.
StructArrayTopic
Create a StructArrayTopic from a generic topic.
wrap(Topic, Struct<T>)
- Static method in class edu.wpi.first.networktables.
StructTopic
Create a StructTopic from a generic topic.
wrap(StructDescriptor, ByteBuffer)
- Static method in class edu.wpi.first.util.struct.
DynamicStruct
Constructs a new dynamic struct object.
wrap(String, String...)
- Static method in class edu.wpi.first.wpilibj.shuffleboard.
SendableCameraWrapper
Creates a wrapper for an arbitrary camera stream.
WrapperCommand
- Class in
edu.wpi.first.wpilibj2.command
A class used internally to wrap commands while overriding a specific method; all other methods
 will call through to the wrapped command.
WrapperCommand(Command)
- Constructor for class edu.wpi.first.wpilibj2.command.
WrapperCommand
Wrap a command.
write(byte[], int)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Write raw bytes to the serial port.
write(byte[], int)
- Method in class edu.wpi.first.wpilibj.
SPI
Write data to the peripheral device.
write(int, int)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a write transaction with the device.
write(ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
SPI
Write data to the peripheral device.
write(T)
- Method in class edu.wpi.first.util.protobuf.
ProtobufBuffer
Serializes a value to a ByteBuffer.
write(T)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Serializes a value to a ByteBuffer.
writeArray(Collection<T>)
- Method in class edu.wpi.first.util.struct.
StructBuffer
Serializes a collection of values to a ByteBuffer.
writeArray(T[])
- Method in class edu.wpi.first.util.struct.
StructBuffer
Serializes an array of values to a ByteBuffer.
writeBulk(byte[])
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a write transaction with the device.
writeBulk(byte[], int)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a write transaction with the device.
writeBulk(ByteBuffer, int)
- Method in class edu.wpi.first.wpilibj.
I2C
Execute a write transaction with the device.
writeCANPacket(int, byte[], int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes a packet to the CAN device with a specific ID.
writeCANPacketNoThrow(int, byte[], int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes a packet to the CAN device with a specific ID without throwing on error.
writeCANPacketRepeating(int, byte[], int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes a repeating packet to the CAN device with a specific ID.
writeCANPacketRepeatingNoThrow(int, byte[], int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes a repeating packet to the CAN device with a specific ID without throwing on error.
writeCANRTRFrame(int, int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes an RTR frame of the specified length to the CAN device with the specific ID.
writeCANRTRFrameNoThrow(int, int, int)
- Static method in class edu.wpi.first.hal.
CANAPIJNI
Writes an RTR frame of the specified length to the CAN device with the specific ID without
 throwing on error.
writePacket(byte[], int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write a packet to the CAN device with a specific ID.
writePacketNoThrow(byte[], int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write a packet to the CAN device with a specific ID.
writePacketRepeating(byte[], int, int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write a repeating packet to the CAN device with a specific ID.
writePacketRepeatingNoThrow(byte[], int, int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write a repeating packet to the CAN device with a specific ID.
writeRTRFrame(int, int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write an RTR frame to the CAN device with a specific ID.
writeRTRFrameNoThrow(int, int)
- Method in class edu.wpi.first.wpilibj.
CAN
Write an RTR frame to the CAN device with a specific ID.
writeStderr(String)
- Static method in class edu.wpi.first.util.
WPIUtilJNI
Write the given string to stderr.
writeString(String)
- Method in class edu.wpi.first.wpilibj.
SerialPort
Write a string to the serial port.
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
writeTo(JsonSink)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufArmFeedforward
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveFeedforward
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufDifferentialDriveWheelVoltages
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufElevatorFeedforward
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Controller.ProtobufSimpleMotorFeedforward
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufEllipse2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufPose2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRectangle2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufRotation2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTransform2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTranslation2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry2D.ProtobufTwist2d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufPose3d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufQuaternion
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufRotation3d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTransform3d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTranslation3d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Geometry3D.ProtobufTwist3d
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufChassisSpeeds
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveKinematics
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelPositions
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufDifferentialDriveWheelSpeeds
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveKinematics
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelPositions
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufMecanumDriveWheelSpeeds
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveDriveKinematics
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModulePosition
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Kinematics.ProtobufSwerveModuleState
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Plant.ProtobufDCMotor
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufCubicHermiteSpline
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Spline.ProtobufQuinticHermiteSpline
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
System.ProtobufLinearSystem
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectory
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Trajectory.ProtobufTrajectoryState
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufMatrix
writeTo(ProtoSink)
- Method in class edu.wpi.first.math.proto.
Wpimath.ProtobufVector
X
x
- Variable in class edu.wpi.first.math.spline.
Spline.ControlVector
The x components of the control vector.
x()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the X button's digital signal.
x()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the X button's digital signal.
x(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the X button's digital signal.
x(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the X button's digital signal.
x(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the X button's digital signal.
x(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the X button's digital signal.
XAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_I2C.AllAxes
Acceleration along the X axis in g-forces.
XAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_SPI.AllAxes
Acceleration along the X axis in g-forces.
XAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL362.AllAxes
Acceleration along the X axis in g-forces.
XboxController
- Class in
edu.wpi.first.wpilibj
Handle input from Xbox controllers connected to the Driver Station.
XboxController(int)
- Constructor for class edu.wpi.first.wpilibj.
XboxController
Construct an instance of a controller.
XboxController.Axis
- Enum Class in
edu.wpi.first.wpilibj
Represents an axis on an XboxController.
XboxController.Button
- Enum Class in
edu.wpi.first.wpilibj
Represents a digital button on a XboxController.
XboxControllerSim
- Class in
edu.wpi.first.wpilibj.simulation
Class to control a simulated Xbox controller.
XboxControllerSim(int)
- Constructor for class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Constructs from a joystick port number.
XboxControllerSim(XboxController)
- Constructor for class edu.wpi.first.wpilibj.simulation.
XboxControllerSim
Constructs from a XboxController object.
xFinalControlVector
- Variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
The control vector for the final point in the x dimension.
xFinalControlVector
- Variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
The control vector for the final point in the x dimension.
xHat
- Variable in class edu.wpi.first.math.estimator.
KalmanFilterLatencyCompensator.ObserverSnapshot
The state estimate.
xInitialControlVector
- Variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
The control vector for the initial point in the x dimension.
xInitialControlVector
- Variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
The control vector for the initial point in the x dimension.
XRPGyro
- Class in
edu.wpi.first.wpilibj.xrp
Use a rate gyro to return the robots heading relative to a starting position.
XRPGyro()
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPGyro
Constructs an XRPGyro.
XRPMotor
- Class in
edu.wpi.first.wpilibj.xrp
XRPMotor.
XRPMotor(int)
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPMotor
Constructs an XRPMotor.
XRPOnBoardIO
- Class in
edu.wpi.first.wpilibj.xrp
This class represents the onboard IO of the XRP Reference Robot.
XRPOnBoardIO()
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPOnBoardIO
Constructor.
XRPRangefinder
- Class in
edu.wpi.first.wpilibj.xrp
This class represents the ultrasonic rangefinder on an XRP robot.
XRPRangefinder()
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPRangefinder
Constructs an XRPRangefinder.
XRPReflectanceSensor
- Class in
edu.wpi.first.wpilibj.xrp
This class represents the reflectance sensor pair on an XRP robot.
XRPReflectanceSensor()
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPReflectanceSensor
Constructs an XRPReflectanceSensor.
XRPServo
- Class in
edu.wpi.first.wpilibj.xrp
XRPServo.
XRPServo(int)
- Constructor for class edu.wpi.first.wpilibj.xrp.
XRPServo
Constructs an XRPServo.
Y
y
- Variable in class edu.wpi.first.math.spline.
Spline.ControlVector
The y components of the control vector.
y()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the Y button's digital signal.
y()
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the Y button's digital signal.
y(EventLoop)
- Method in class edu.wpi.first.wpilibj.
StadiaController
Constructs an event instance around the Y button's digital signal.
y(EventLoop)
- Method in class edu.wpi.first.wpilibj.
XboxController
Constructs an event instance around the Y button's digital signal.
y(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandStadiaController
Constructs a Trigger instance around the Y button's digital signal.
y(EventLoop)
- Method in class edu.wpi.first.wpilibj2.command.button.
CommandXboxController
Constructs a Trigger instance around the Y button's digital signal.
YAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_I2C.AllAxes
Acceleration along the Y axis in g-forces.
YAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_SPI.AllAxes
Acceleration along the Y axis in g-forces.
YAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL362.AllAxes
Acceleration along the Y axis in g-forces.
yFinalControlVector
- Variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
The control vector for the final point in the y dimension.
yFinalControlVector
- Variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
The control vector for the final point in the y dimension.
yInitialControlVector
- Variable in class edu.wpi.first.math.spline.
CubicHermiteSpline
The control vector for the initial point in the y dimension.
yInitialControlVector
- Variable in class edu.wpi.first.math.spline.
QuinticHermiteSpline
The control vector for the initial point in the y dimension.
Z
ZAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_I2C.AllAxes
Acceleration along the Z axis in g-forces.
ZAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL345_SPI.AllAxes
Acceleration along the Z axis in g-forces.
ZAxis
- Variable in class edu.wpi.first.wpilibj.
ADXL362.AllAxes
Acceleration along the Z axis in g-forces.
zero()
- Method in class edu.wpi.first.units.
AccelerationUnit
zero()
- Method in class edu.wpi.first.units.
AngleUnit
zero()
- Method in class edu.wpi.first.units.
AngularAccelerationUnit
zero()
- Method in class edu.wpi.first.units.
AngularMomentumUnit
zero()
- Method in class edu.wpi.first.units.
AngularVelocityUnit
zero()
- Method in class edu.wpi.first.units.
CurrentUnit
zero()
- Method in class edu.wpi.first.units.
DimensionlessUnit
zero()
- Method in class edu.wpi.first.units.
DistanceUnit
zero()
- Method in class edu.wpi.first.units.
EnergyUnit
zero()
- Method in class edu.wpi.first.units.
ForceUnit
zero()
- Method in class edu.wpi.first.units.
FrequencyUnit
zero()
- Method in class edu.wpi.first.units.
LinearAccelerationUnit
zero()
- Method in class edu.wpi.first.units.
LinearMomentumUnit
zero()
- Method in class edu.wpi.first.units.
LinearVelocityUnit
zero()
- Method in class edu.wpi.first.units.
MassUnit
zero()
- Method in class edu.wpi.first.units.
MomentOfInertiaUnit
zero()
- Method in class edu.wpi.first.units.
MultUnit
zero()
- Method in class edu.wpi.first.units.
PerUnit
zero()
- Method in class edu.wpi.first.units.
PowerUnit
zero()
- Method in class edu.wpi.first.units.
ResistanceUnit
zero()
- Method in class edu.wpi.first.units.
TemperatureUnit
zero()
- Method in class edu.wpi.first.units.
TimeUnit
zero()
- Method in class edu.wpi.first.units.
TorqueUnit
zero()
- Method in class edu.wpi.first.units.
Unit
Gets a measure of zero magnitude in terms of this unit.
zero()
- Method in class edu.wpi.first.units.
VelocityUnit
zero()
- Method in class edu.wpi.first.units.
VoltageUnit
_
_128ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
128 ms calibration time.
_128ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
128 ms calibration time.
_16s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
16 s calibration time.
_16s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
16 s calibration time.
_1s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
1 s calibration time.
_1s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
1 s calibration time.
_256ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
256 ms calibration time.
_256ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
256 ms calibration time.
_2s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
2 s calibration time.
_2s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
2 s calibration time.
_32ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
32 ms calibration time.
_32ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
32 ms calibration time.
_32s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
32 s calibration time.
_32s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
32 s calibration time.
_4s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
4 s calibration time.
_4s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
4 s calibration time.
_512ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
512 ms calibration time.
_512ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
512 ms calibration time.
_64ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
64 ms calibration time.
_64ms
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
64 ms calibration time.
_64s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
64 s calibration time.
_64s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
64 s calibration time.
_8s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16448_IMU.CalibrationTime
8 s calibration time.
_8s
- Enum constant in enum class edu.wpi.first.wpilibj.
ADIS16470_IMU.CalibrationTime
8 s calibration time.
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
_
All Classes and Interfaces
|
All Packages
|
Constant Field Values
|
Serialized Form