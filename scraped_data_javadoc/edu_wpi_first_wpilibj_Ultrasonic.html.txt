Package
edu.wpi.first.wpilibj
Class Ultrasonic
java.lang.Object
edu.wpi.first.wpilibj.Ultrasonic
All Implemented Interfaces:
Sendable
,
AutoCloseable
public class
Ultrasonic
extends
Object
implements
Sendable
,
AutoCloseable
Ultrasonic rangefinder class. The Ultrasonic rangefinder measures absolute distance based on the
 round-trip time of a ping generated by the controller. These sensors use two transducers, a
 speaker and a microphone both tuned to the ultrasonic range. A common ultrasonic sensor, the
 Daventech SRF04 requires a short pulse to be generated on a digital channel. This causes the
 chirp to be emitted. A second line becomes high as the ping is transmitted and goes low when the
 echo is received. The time that the line is high determines the round trip distance (time of
 flight).
Constructor Summary
Constructors
Constructor
Description
Ultrasonic
(int pingChannel,
 int echoChannel)
Create an instance of the Ultrasonic Sensor.
Ultrasonic
(
DigitalOutput
pingChannel,
DigitalInput
echoChannel)
Create an instance of an Ultrasonic Sensor from a DigitalInput for the echo channel and a
 DigitalOutput for the ping channel.
Method Summary
All Methods
Static Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
close
()
Destructor for the ultrasonic sensor.
int
getEchoChannel
()
Returns the echo channel.
double
getRangeInches
()
Get the range in inches from the ultrasonic sensor.
double
getRangeMM
()
Get the range in millimeters from the ultrasonic sensor.
void
initSendable
(
SendableBuilder
builder)
Initializes this
Sendable
object.
boolean
isEnabled
()
Is the ultrasonic enabled.
boolean
isRangeValid
()
Check if there is a valid range measurement.
void
ping
()
Single ping to ultrasonic sensor.
static void
setAutomaticMode
(boolean enabling)
Turn Automatic mode on/off for all sensors.
void
setEnabled
(boolean enable)
Set if the ultrasonic is enabled.
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
Ultrasonic
public
Ultrasonic
(int pingChannel,
 int echoChannel)
Create an instance of the Ultrasonic Sensor. This is designed to support the Daventech SRF04
 and Vex ultrasonic sensors.
Parameters:
pingChannel
- The digital output channel that sends the pulse to initiate the sensor
     sending the ping.
echoChannel
- The digital input channel that receives the echo. The length of time that
     the echo is high represents the round trip time of the ping, and the distance.
Ultrasonic
public
Ultrasonic
(
DigitalOutput
pingChannel,
DigitalInput
echoChannel)
Create an instance of an Ultrasonic Sensor from a DigitalInput for the echo channel and a
 DigitalOutput for the ping channel.
Parameters:
pingChannel
- The digital output object that starts the sensor doing a ping. Requires a
     10uS pulse to start.
echoChannel
- The digital input object that times the return pulse to determine the range.
Method Details
getEchoChannel
public
int
getEchoChannel
()
Returns the echo channel.
Returns:
The echo channel.
close
public
void
close
()
Destructor for the ultrasonic sensor. Delete the instance of the ultrasonic sensor by freeing
 the allocated digital channels. If the system was in automatic mode (round-robin), then it is
 stopped, then started again after this sensor is removed (provided this wasn't the last
 sensor).
Specified by:
close
in interface
AutoCloseable
setAutomaticMode
public static
void
setAutomaticMode
(boolean enabling)
Turn Automatic mode on/off for all sensors.
When in Automatic mode, all sensors will fire in round-robin, waiting a set time between
 each sensor.
Parameters:
enabling
- Set to true if round-robin scheduling should start for all the ultrasonic
     sensors. This scheduling method assures that the sensors are non-interfering because no two
     sensors fire at the same time. If another scheduling algorithm is preferred, it can be
     implemented by pinging the sensors manually and waiting for the results to come back.
ping
public
void
ping
()
Single ping to ultrasonic sensor. Send out a single ping to the ultrasonic sensor. This only
 works if automatic (round-robin) mode is disabled. A single ping is sent out, and the counter
 should count the semi-period when it comes in. The counter is reset to make the current value
 invalid.
isRangeValid
public
boolean
isRangeValid
()
Check if there is a valid range measurement. The ranges are accumulated in a counter that will
 increment on each edge of the echo (return) signal. If the count is not at least 2, then the
 range has not yet been measured, and is invalid.
Returns:
true if the range is valid
getRangeInches
public
double
getRangeInches
()
Get the range in inches from the ultrasonic sensor. If there is no valid value yet, i.e. at
 least one measurement hasn't completed, then return 0.
Returns:
double Range in inches of the target returned from the ultrasonic sensor.
getRangeMM
public
double
getRangeMM
()
Get the range in millimeters from the ultrasonic sensor. If there is no valid value yet, i.e.
 at least one measurement hasn't completed, then return 0.
Returns:
double Range in millimeters of the target returned by the ultrasonic sensor.
isEnabled
public
boolean
isEnabled
()
Is the ultrasonic enabled.
Returns:
true if the ultrasonic is enabled
setEnabled
public
void
setEnabled
(boolean enable)
Set if the ultrasonic is enabled.
Parameters:
enable
- set to true to enable the ultrasonic
initSendable
public
void
initSendable
(
SendableBuilder
builder)
Description copied from interface:
Sendable
Initializes this
Sendable
object.
Specified by:
initSendable
in interface
Sendable
Parameters:
builder
- sendable builder