001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.hal.simulation;
006
007
import edu.wpi.first.hal.JNIWrapper;
008
009
/** JNI for DIO data. */
010
public class DIODataJNI extends JNIWrapper {
011
public static native int registerInitializedCallback(
012
int index, NotifyCallback callback, boolean initialNotify);
013
014
public static native void cancelInitializedCallback(int index, int uid);
015
016
public static native boolean getInitialized(int index);
017
018
public static native void setInitialized(int index, boolean initialized);
019
020
public static native int registerValueCallback(
021
int index, NotifyCallback callback, boolean initialNotify);
022
023
public static native void cancelValueCallback(int index, int uid);
024
025
public static native boolean getValue(int index);
026
027
public static native void setValue(int index, boolean value);
028
029
public static native int registerPulseLengthCallback(
030
int index, NotifyCallback callback, boolean initialNotify);
031
032
public static native void cancelPulseLengthCallback(int index, int uid);
033
034
public static native double getPulseLength(int index);
035
036
public static native void setPulseLength(int index, double pulseLength);
037
038
public static native int registerIsInputCallback(
039
int index, NotifyCallback callback, boolean initialNotify);
040
041
public static native void cancelIsInputCallback(int index, int uid);
042
043
public static native boolean getIsInput(int index);
044
045
public static native void setIsInput(int index, boolean isInput);
046
047
public static native int registerFilterIndexCallback(
048
int index, NotifyCallback callback, boolean initialNotify);
049
050
public static native void cancelFilterIndexCallback(int index, int uid);
051
052
public static native int getFilterIndex(int index);
053
054
public static native void setFilterIndex(int index, int filterIndex);
055
056
public static native void resetData(int index);
057
058
/** Utility class. */
059
private DIODataJNI() {}
060
}