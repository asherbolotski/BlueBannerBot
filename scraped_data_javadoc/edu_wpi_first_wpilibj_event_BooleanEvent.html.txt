Package
edu.wpi.first.wpilibj.event
Class BooleanEvent
java.lang.Object
edu.wpi.first.wpilibj.event.BooleanEvent
All Implemented Interfaces:
BooleanSupplier
Direct Known Subclasses:
NetworkBooleanEvent
public class
BooleanEvent
extends
Object
implements
BooleanSupplier
This class provides an easy way to link actions to active high logic signals. Each object
 represents a digital signal to which callback actions can be bound using
ifHigh(Runnable)
.
BooleanEvents can easily be composed for advanced functionality using
and(BooleanSupplier)
,
or(BooleanSupplier)
, and
negate()
.
To get a new BooleanEvent that triggers when this one changes see
falling()
and
rising()
.
Field Summary
Fields
Modifier and Type
Field
Description
protected final
EventLoop
m_loop
Poller loop.
Constructor Summary
Constructors
Constructor
Description
BooleanEvent
(
EventLoop
loop,
BooleanSupplier
signal)
Creates a new event that is active when the condition is true.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
BooleanEvent
and
(
BooleanSupplier
other)
Composes this event with another event, returning a new event that is active when both events
 are active.
<T extends
BooleanSupplier
>
T
castTo
(
BiFunction
<
EventLoop
,
BooleanSupplier
,
T> ctor)
A method to "downcast" a BooleanEvent instance to a subclass (for example, to a command-based
 version of this class).
BooleanEvent
debounce
(double seconds)
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
BooleanEvent
debounce
(double seconds,
Debouncer.DebounceType
type)
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
BooleanEvent
falling
()
Creates a new event that triggers when this one changes from true to false.
final boolean
getAsBoolean
()
Returns the state of this signal (high or low) as of the last loop poll.
final void
ifHigh
(
Runnable
action)
Bind an action to this event.
BooleanEvent
negate
()
Creates a new event that is active when this event is inactive.
BooleanEvent
or
(
BooleanSupplier
other)
Composes this event with another event, returning a new event that is active when either event
 is active.
BooleanEvent
rising
()
Creates a new event that triggers when this one changes from false to true.
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
m_loop
protected final
EventLoop
m_loop
Poller loop.
Constructor Details
BooleanEvent
public
BooleanEvent
(
EventLoop
loop,
BooleanSupplier
signal)
Creates a new event that is active when the condition is true.
Parameters:
loop
- the loop that polls this event.
signal
- the digital signal represented by this object.
Method Details
getAsBoolean
public final
boolean
getAsBoolean
()
Returns the state of this signal (high or low) as of the last loop poll.
Specified by:
getAsBoolean
in interface
BooleanSupplier
Returns:
true for the high state, false for the low state. If the event was never polled, it
     returns the state at event construction.
ifHigh
public final
void
ifHigh
(
Runnable
action)
Bind an action to this event.
Parameters:
action
- the action to run if this event is active.
castTo
public
<T extends
BooleanSupplier
>
T
castTo
(
BiFunction
<
EventLoop
,
BooleanSupplier
,
T> ctor)
A method to "downcast" a BooleanEvent instance to a subclass (for example, to a command-based
 version of this class).
Type Parameters:
T
- the subclass type
Parameters:
ctor
- a method reference to the constructor of the subclass that accepts the loop as the
     first parameter and the condition/signal as the second.
Returns:
an instance of the subclass.
negate
public
BooleanEvent
negate
()
Creates a new event that is active when this event is inactive.
Returns:
the new event.
and
public
BooleanEvent
and
(
BooleanSupplier
other)
Composes this event with another event, returning a new event that is active when both events
 are active.
The events must use the same event loop. If the events use different event loops, the
 composed signal won't update until both loops are polled.
Parameters:
other
- the event to compose with.
Returns:
the new event.
or
public
BooleanEvent
or
(
BooleanSupplier
other)
Composes this event with another event, returning a new event that is active when either event
 is active.
The events must use the same event loop. If the events use different event loops, the
 composed signal won't update until both loops are polled.
Parameters:
other
- the event to compose with.
Returns:
the new event.
rising
public
BooleanEvent
rising
()
Creates a new event that triggers when this one changes from false to true.
Returns:
the new event.
falling
public
BooleanEvent
falling
()
Creates a new event that triggers when this one changes from true to false.
Returns:
the event.
debounce
public
BooleanEvent
debounce
(double seconds)
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
Parameters:
seconds
- The debounce period.
Returns:
The debounced event (rising edges debounced only).
debounce
public
BooleanEvent
debounce
(double seconds,
Debouncer.DebounceType
type)
Creates a new debounced event from this event - it will become active when this event has been
 active for longer than the specified period.
Parameters:
seconds
- The debounce period.
type
- The debounce type.
Returns:
The debounced event.