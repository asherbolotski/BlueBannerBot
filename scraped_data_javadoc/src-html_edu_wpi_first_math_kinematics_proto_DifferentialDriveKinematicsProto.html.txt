001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.math.kinematics.proto;
006
007
import edu.wpi.first.math.kinematics.DifferentialDriveKinematics;
008
import edu.wpi.first.math.proto.Kinematics.ProtobufDifferentialDriveKinematics;
009
import edu.wpi.first.util.protobuf.Protobuf;
010
import us.hebi.quickbuf.Descriptors.Descriptor;
011
012
public class DifferentialDriveKinematicsProto
013
implements Protobuf<DifferentialDriveKinematics, ProtobufDifferentialDriveKinematics> {
014
@Override
015
public Class<DifferentialDriveKinematics> getTypeClass() {
016
return DifferentialDriveKinematics.class;
017
}
018
019
@Override
020
public Descriptor getDescriptor() {
021
return ProtobufDifferentialDriveKinematics.getDescriptor();
022
}
023
024
@Override
025
public ProtobufDifferentialDriveKinematics createMessage() {
026
return ProtobufDifferentialDriveKinematics.newInstance();
027
}
028
029
@Override
030
public DifferentialDriveKinematics unpack(ProtobufDifferentialDriveKinematics msg) {
031
return new DifferentialDriveKinematics(msg.getTrackWidth());
032
}
033
034
@Override
035
public void pack(ProtobufDifferentialDriveKinematics msg, DifferentialDriveKinematics value) {
036
msg.setTrackWidth(value.trackWidthMeters);
037
}
038
}