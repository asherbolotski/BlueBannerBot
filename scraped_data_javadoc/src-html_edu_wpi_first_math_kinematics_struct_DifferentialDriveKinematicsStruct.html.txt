001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.math.kinematics.struct;
006
007
import edu.wpi.first.math.kinematics.DifferentialDriveKinematics;
008
import edu.wpi.first.util.struct.Struct;
009
import java.nio.ByteBuffer;
010
011
public class DifferentialDriveKinematicsStruct implements Struct<DifferentialDriveKinematics> {
012
@Override
013
public Class<DifferentialDriveKinematics> getTypeClass() {
014
return DifferentialDriveKinematics.class;
015
}
016
017
@Override
018
public String getTypeName() {
019
return "DifferentialDriveKinematics";
020
}
021
022
@Override
023
public int getSize() {
024
return kSizeDouble;
025
}
026
027
@Override
028
public String getSchema() {
029
return "double track_width";
030
}
031
032
@Override
033
public DifferentialDriveKinematics unpack(ByteBuffer bb) {
034
double trackWidth = bb.getDouble();
035
return new DifferentialDriveKinematics(trackWidth);
036
}
037
038
@Override
039
public void pack(ByteBuffer bb, DifferentialDriveKinematics value) {
040
bb.putDouble(value.trackWidthMeters);
041
}
042
}