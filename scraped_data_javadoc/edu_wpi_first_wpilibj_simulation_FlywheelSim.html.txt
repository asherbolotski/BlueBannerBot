Package
edu.wpi.first.wpilibj.simulation
Class FlywheelSim
java.lang.Object
edu.wpi.first.wpilibj.simulation.LinearSystemSim
<
N1
,
N1
,
N1
>
edu.wpi.first.wpilibj.simulation.FlywheelSim
public class
FlywheelSim
extends
LinearSystemSim
<
N1
,
N1
,
N1
>
Represents a simulated flywheel mechanism.
Field Summary
Fields inherited from class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
m_measurementStdDevs
,
m_plant
,
m_u
,
m_x
,
m_y
Constructor Summary
Constructors
Constructor
Description
FlywheelSim
(
LinearSystem
<
N1
,
N1
,
N1
> plant,
DCMotor
gearbox,
 double... measurementStdDevs)
Creates a simulated flywheel mechanism.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
AngularAcceleration
getAngularAcceleration
()
Returns the flywheel's acceleration.
double
getAngularAccelerationRadPerSecSq
()
Returns the flywheel's acceleration in Radians Per Second Squared.
AngularVelocity
getAngularVelocity
()
Returns the flywheel's velocity.
double
getAngularVelocityRadPerSec
()
Returns the flywheel's velocity in Radians Per Second.
double
getAngularVelocityRPM
()
Returns the flywheel's velocity in RPM.
double
getCurrentDrawAmps
()
Returns the flywheel's current draw.
DCMotor
getGearbox
()
Returns the gearbox for the flywheel.
double
getGearing
()
Returns the gear ratio of the flywheel.
double
getInputVoltage
()
Gets the input voltage for the flywheel.
double
getJKgMetersSquared
()
Returns the moment of inertia in kilograms meters squared.
double
getTorqueNewtonMeters
()
Returns the flywheel's torque in Newton-Meters.
void
setAngularVelocity
(double velocityRadPerSec)
Sets the flywheel's angular velocity.
void
setInputVoltage
(double volts)
Sets the input voltage for the flywheel.
Methods inherited from class edu.wpi.first.wpilibj.simulation.
LinearSystemSim
clampInput
,
getInput
,
getInput
,
getOutput
,
getOutput
,
setInput
,
setInput
,
setInput
,
setState
,
update
,
updateX
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
FlywheelSim
public
FlywheelSim
(
LinearSystem
<
N1
,
N1
,
N1
> plant,
DCMotor
gearbox,
 double... measurementStdDevs)
Creates a simulated flywheel mechanism.
Parameters:
plant
- The linear system that represents the flywheel. Use either
LinearSystemId.createFlywheelSystem(DCMotor, double, double)
if using physical constants
     or
LinearSystemId.identifyVelocitySystem(double, double)
if using system
     characterization.
gearbox
- The type of and number of motors in the flywheel gearbox.
measurementStdDevs
- The standard deviations of the measurements. Can be omitted if no
     noise is desired. If present must have 1 element for velocity.
Method Details
setAngularVelocity
public
void
setAngularVelocity
(double velocityRadPerSec)
Sets the flywheel's angular velocity.
Parameters:
velocityRadPerSec
- The new velocity in radians per second.
getGearing
public
double
getGearing
()
Returns the gear ratio of the flywheel.
Returns:
the flywheel's gear ratio.
getJKgMetersSquared
public
double
getJKgMetersSquared
()
Returns the moment of inertia in kilograms meters squared.
Returns:
The flywheel's moment of inertia.
getGearbox
public
DCMotor
getGearbox
()
Returns the gearbox for the flywheel.
Returns:
The flywheel's gearbox.
getAngularVelocityRadPerSec
public
double
getAngularVelocityRadPerSec
()
Returns the flywheel's velocity in Radians Per Second.
Returns:
The flywheel's velocity in Radians Per Second.
getAngularVelocityRPM
public
double
getAngularVelocityRPM
()
Returns the flywheel's velocity in RPM.
Returns:
The flywheel's velocity in RPM.
getAngularVelocity
public
AngularVelocity
getAngularVelocity
()
Returns the flywheel's velocity.
Returns:
The flywheel's velocity
getAngularAccelerationRadPerSecSq
public
double
getAngularAccelerationRadPerSecSq
()
Returns the flywheel's acceleration in Radians Per Second Squared.
Returns:
The flywheel's acceleration in Radians Per Second Squared.
getAngularAcceleration
public
AngularAcceleration
getAngularAcceleration
()
Returns the flywheel's acceleration.
Returns:
The flywheel's acceleration.
getTorqueNewtonMeters
public
double
getTorqueNewtonMeters
()
Returns the flywheel's torque in Newton-Meters.
Returns:
The flywheel's torque in Newton-Meters.
getCurrentDrawAmps
public
double
getCurrentDrawAmps
()
Returns the flywheel's current draw.
Returns:
The flywheel's current draw.
getInputVoltage
public
double
getInputVoltage
()
Gets the input voltage for the flywheel.
Returns:
The flywheel's input voltage.
setInputVoltage
public
void
setInputVoltage
(double volts)
Sets the input voltage for the flywheel.
Parameters:
volts
- The input voltage.