001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.hal.simulation;
006
007
import edu.wpi.first.hal.JNIWrapper;
008
009
/** JNI for PWM data. */
010
public class PWMDataJNI extends JNIWrapper {
011
public static native int registerInitializedCallback(
012
int index, NotifyCallback callback, boolean initialNotify);
013
014
public static native void cancelInitializedCallback(int index, int uid);
015
016
public static native boolean getInitialized(int index);
017
018
public static native void setInitialized(int index, boolean initialized);
019
020
public static native int registerPulseMicrosecondCallback(
021
int index, NotifyCallback callback, boolean initialNotify);
022
023
public static native void cancelPulseMicrosecondCallback(int index, int uid);
024
025
public static native int getPulseMicrosecond(int index);
026
027
public static native void setPulseMicrosecond(int index, int microsecondPulseTime);
028
029
public static native int registerSpeedCallback(
030
int index, NotifyCallback callback, boolean initialNotify);
031
032
public static native void cancelSpeedCallback(int index, int uid);
033
034
public static native double getSpeed(int index);
035
036
public static native void setSpeed(int index, double speed);
037
038
public static native int registerPositionCallback(
039
int index, NotifyCallback callback, boolean initialNotify);
040
041
public static native void cancelPositionCallback(int index, int uid);
042
043
public static native double getPosition(int index);
044
045
public static native void setPosition(int index, double position);
046
047
public static native int registerPeriodScaleCallback(
048
int index, NotifyCallback callback, boolean initialNotify);
049
050
public static native void cancelPeriodScaleCallback(int index, int uid);
051
052
public static native int getPeriodScale(int index);
053
054
public static native void setPeriodScale(int index, int periodScale);
055
056
public static native int registerZeroLatchCallback(
057
int index, NotifyCallback callback, boolean initialNotify);
058
059
public static native void cancelZeroLatchCallback(int index, int uid);
060
061
public static native boolean getZeroLatch(int index);
062
063
public static native void setZeroLatch(int index, boolean zeroLatch);
064
065
public static native void resetData(int index);
066
067
/** Utility class. */
068
private PWMDataJNI() {}
069
}