001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.math.controller.proto;
006
007
import edu.wpi.first.math.controller.SimpleMotorFeedforward;
008
import edu.wpi.first.math.proto.Controller.ProtobufSimpleMotorFeedforward;
009
import edu.wpi.first.util.protobuf.Protobuf;
010
import us.hebi.quickbuf.Descriptors.Descriptor;
011
012
public final class SimpleMotorFeedforwardProto
013
implements Protobuf<SimpleMotorFeedforward, ProtobufSimpleMotorFeedforward> {
014
@Override
015
public Class<SimpleMotorFeedforward> getTypeClass() {
016
return SimpleMotorFeedforward.class;
017
}
018
019
@Override
020
public Descriptor getDescriptor() {
021
return ProtobufSimpleMotorFeedforward.getDescriptor();
022
}
023
024
@Override
025
public ProtobufSimpleMotorFeedforward createMessage() {
026
return ProtobufSimpleMotorFeedforward.newInstance();
027
}
028
029
@Override
030
public SimpleMotorFeedforward unpack(ProtobufSimpleMotorFeedforward msg) {
031
return new SimpleMotorFeedforward(msg.getKs(), msg.getKv(), msg.getKa(), msg.getDt());
032
}
033
034
@Override
035
public void pack(ProtobufSimpleMotorFeedforward msg, SimpleMotorFeedforward value) {
036
msg.setKs(value.getKs()).setKv(value.getKv()).setKa(value.getKa()).setDt(value.getDt());
037
}
038
}