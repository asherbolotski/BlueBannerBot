Package
edu.wpi.first.wpilibj.simulation
Class BuiltInAccelerometerSim
java.lang.Object
edu.wpi.first.wpilibj.simulation.BuiltInAccelerometerSim
public class
BuiltInAccelerometerSim
extends
Object
Class to control a simulated built-in accelerometer.
Constructor Summary
Constructors
Constructor
Description
BuiltInAccelerometerSim
()
Constructs for the first built-in accelerometer.
BuiltInAccelerometerSim
(
BuiltInAccelerometer
accel)
Constructs from a BuiltInAccelerometer object.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
boolean
getActive
()
Check whether the accelerometer is active.
int
getRange
()
Check the range of this accelerometer.
double
getX
()
Measure the X axis value.
double
getY
()
Measure the Y axis value.
double
getZ
()
Measure the Z axis value.
CallbackStore
registerActiveCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run when this accelerometer activates.
CallbackStore
registerRangeCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the range changes.
CallbackStore
registerXCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the X axis value changes.
CallbackStore
registerYCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the Y axis value changes.
CallbackStore
registerZCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the Z axis value changes.
void
resetData
()
Reset all simulation data of this object.
void
setActive
(boolean active)
Define whether this accelerometer is active.
void
setRange
(int range)
Change the range of this accelerometer.
void
setX
(double x)
Change the X axis value of the accelerometer.
void
setY
(double y)
Change the Y axis value of the accelerometer.
void
setZ
(double z)
Change the Z axis value of the accelerometer.
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
BuiltInAccelerometerSim
public
BuiltInAccelerometerSim
()
Constructs for the first built-in accelerometer.
BuiltInAccelerometerSim
public
BuiltInAccelerometerSim
(
BuiltInAccelerometer
accel)
Constructs from a BuiltInAccelerometer object.
Parameters:
accel
- BuiltInAccelerometer to simulate
Method Details
registerActiveCallback
public
CallbackStore
registerActiveCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run when this accelerometer activates.
Parameters:
callback
- the callback
initialNotify
- whether to run the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getActive
public
boolean
getActive
()
Check whether the accelerometer is active.
Returns:
true if active
setActive
public
void
setActive
(boolean active)
Define whether this accelerometer is active.
Parameters:
active
- the new state
registerRangeCallback
public
CallbackStore
registerRangeCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the range changes.
Parameters:
callback
- the callback
initialNotify
- whether to call the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getRange
public
int
getRange
()
Check the range of this accelerometer.
Returns:
the accelerometer range
setRange
public
void
setRange
(int range)
Change the range of this accelerometer.
Parameters:
range
- the new accelerometer range
registerXCallback
public
CallbackStore
registerXCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the X axis value changes.
Parameters:
callback
- the callback
initialNotify
- whether to call the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getX
public
double
getX
()
Measure the X axis value.
Returns:
the X axis measurement
setX
public
void
setX
(double x)
Change the X axis value of the accelerometer.
Parameters:
x
- the new reading of the X axis
registerYCallback
public
CallbackStore
registerYCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the Y axis value changes.
Parameters:
callback
- the callback
initialNotify
- whether to call the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getY
public
double
getY
()
Measure the Y axis value.
Returns:
the Y axis measurement
setY
public
void
setY
(double y)
Change the Y axis value of the accelerometer.
Parameters:
y
- the new reading of the Y axis
registerZCallback
public
CallbackStore
registerZCallback
(
NotifyCallback
callback,
 boolean initialNotify)
Register a callback to be run whenever the Z axis value changes.
Parameters:
callback
- the callback
initialNotify
- whether to call the callback with the initial state
Returns:
the
CallbackStore
object associated with this callback.
getZ
public
double
getZ
()
Measure the Z axis value.
Returns:
the Z axis measurement
setZ
public
void
setZ
(double z)
Change the Z axis value of the accelerometer.
Parameters:
z
- the new reading of the Z axis
resetData
public
void
resetData
()
Reset all simulation data of this object.