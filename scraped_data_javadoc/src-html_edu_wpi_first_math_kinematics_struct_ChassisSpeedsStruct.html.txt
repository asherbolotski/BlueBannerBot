001
// Copyright (c) FIRST and other WPILib contributors.
002
// Open Source Software; you can modify and/or share it under the terms of
003
// the WPILib BSD license file in the root directory of this project.
004
005
package edu.wpi.first.math.kinematics.struct;
006
007
import edu.wpi.first.math.kinematics.ChassisSpeeds;
008
import edu.wpi.first.util.struct.Struct;
009
import java.nio.ByteBuffer;
010
011
public class ChassisSpeedsStruct implements Struct<ChassisSpeeds> {
012
@Override
013
public Class<ChassisSpeeds> getTypeClass() {
014
return ChassisSpeeds.class;
015
}
016
017
@Override
018
public String getTypeName() {
019
return "ChassisSpeeds";
020
}
021
022
@Override
023
public int getSize() {
024
return kSizeDouble * 3;
025
}
026
027
@Override
028
public String getSchema() {
029
return "double vx;double vy;double omega";
030
}
031
032
@Override
033
public ChassisSpeeds unpack(ByteBuffer bb) {
034
double vx = bb.getDouble();
035
double vy = bb.getDouble();
036
double omega = bb.getDouble();
037
return new ChassisSpeeds(vx, vy, omega);
038
}
039
040
@Override
041
public void pack(ByteBuffer bb, ChassisSpeeds value) {
042
bb.putDouble(value.vxMetersPerSecond);
043
bb.putDouble(value.vyMetersPerSecond);
044
bb.putDouble(value.omegaRadiansPerSecond);
045
}
046
}