Package
edu.wpi.first.wpilibj2.command
Class WrapperCommand
java.lang.Object
edu.wpi.first.wpilibj2.command.Command
edu.wpi.first.wpilibj2.command.WrapperCommand
All Implemented Interfaces:
Sendable
public abstract class
WrapperCommand
extends
Command
A class used internally to wrap commands while overriding a specific method; all other methods
 will call through to the wrapped command.
The rules for command compositions apply: command instances that are passed to it cannot be
 added to any other composition or scheduled individually, and the composition requires all
 subsystems its components require.
Nested Class Summary
Nested classes/interfaces inherited from class edu.wpi.first.wpilibj2.command.
Command
Command.InterruptionBehavior
Field Summary
Fields
Modifier and Type
Field
Description
protected final
Command
m_command
Command being wrapped.
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
WrapperCommand
(
Command
command)
Wrap a command.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
end
(boolean interrupted)
The action to take when the command ends.
void
execute
()
The main body of a command.
Command.InterruptionBehavior
getInterruptionBehavior
()
How the command behaves when another command with a shared requirement is scheduled.
Set
<
Subsystem
>
getRequirements
()
Specifies the set of subsystems used by this command.
void
initialize
()
The initial subroutine of a command.
boolean
isFinished
()
Whether the command has finished.
boolean
runsWhenDisabled
()
Whether the given command should run when the robot is disabled.
Methods inherited from class edu.wpi.first.wpilibj2.command.
Command
addRequirements
,
addRequirements
,
alongWith
,
andThen
,
andThen
,
asProxy
,
beforeStarting
,
beforeStarting
,
cancel
,
deadlineFor
,
deadlineWith
,
finallyDo
,
finallyDo
,
getName
,
getSubsystem
,
handleInterrupt
,
hasRequirement
,
ignoringDisable
,
initSendable
,
isScheduled
,
onlyIf
,
onlyWhile
,
raceWith
,
repeatedly
,
schedule
,
setName
,
setSubsystem
,
unless
,
until
,
withDeadline
,
withInterruptBehavior
,
withName
,
withTimeout
,
withTimeout
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
m_command
protected final
Command
m_command
Command being wrapped.
Constructor Details
WrapperCommand
protected
WrapperCommand
(
Command
command)
Wrap a command.
Parameters:
command
- the command being wrapped. Trying to directly schedule this command or add it to
     a composition will throw an exception.
Method Details
initialize
public
void
initialize
()
The initial subroutine of a command. Called once when the command is initially scheduled.
Overrides:
initialize
in class
Command
execute
public
void
execute
()
The main body of a command. Called repeatedly while the command is scheduled.
Overrides:
execute
in class
Command
end
public
void
end
(boolean interrupted)
The action to take when the command ends. Called when either the command finishes normally, or
 when it interrupted/canceled.
Do not schedule commands here that share requirements with this command. Use
Command.andThen(Command...)
instead.
Overrides:
end
in class
Command
Parameters:
interrupted
- whether the command was interrupted/canceled
isFinished
public
boolean
isFinished
()
Whether the command has finished. Once a command finishes, the scheduler will call its end()
 method and un-schedule it.
Overrides:
isFinished
in class
Command
Returns:
whether the command has finished.
getRequirements
public
Set
<
Subsystem
>
getRequirements
()
Specifies the set of subsystems used by this command. Two commands cannot use the same
 subsystem at the same time. If the command is scheduled as interruptible and another command is
 scheduled that shares a requirement, the command will be interrupted. Else, the command will
 not be scheduled. If no subsystems are required, return an empty set.
Note: it is recommended that user implementations contain the requirements as a field, and
 return that field here, rather than allocating a new set every time this is called.
Overrides:
getRequirements
in class
Command
Returns:
the set of subsystems that are required
See Also:
Command.InterruptionBehavior
runsWhenDisabled
public
boolean
runsWhenDisabled
()
Whether the given command should run when the robot is disabled. Override to return true if the
 command should run when disabled.
Overrides:
runsWhenDisabled
in class
Command
Returns:
whether the command should run when the robot is disabled
getInterruptionBehavior
public
Command.InterruptionBehavior
getInterruptionBehavior
()
Description copied from class:
Command
How the command behaves when another command with a shared requirement is scheduled.
Overrides:
getInterruptionBehavior
in class
Command
Returns:
a variant of
Command.InterruptionBehavior
, defaulting to
kCancelSelf
.