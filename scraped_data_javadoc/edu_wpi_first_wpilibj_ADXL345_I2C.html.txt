Package
edu.wpi.first.wpilibj
Class ADXL345_I2C
java.lang.Object
edu.wpi.first.wpilibj.ADXL345_I2C
All Implemented Interfaces:
NTSendable
,
Sendable
,
AutoCloseable
public class
ADXL345_I2C
extends
Object
implements
NTSendable
,
AutoCloseable
ADXL345 I2C Accelerometer.
The Onboard I2C port is subject to system lockups. See
WPILib Known Issues
page for details.
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
static class
ADXL345_I2C.AllAxes
Container type for accelerations from all axes.
static enum
ADXL345_I2C.Axes
Accelerometer axes.
static enum
ADXL345_I2C.Range
Accelerometer range.
Field Summary
Fields
Modifier and Type
Field
Description
static final byte
kAddress
Default I2C device address.
Constructor Summary
Constructors
Constructor
Description
ADXL345_I2C
(
I2C.Port
port,
ADXL345_I2C.Range
range)
Constructs the ADXL345 Accelerometer with I2C address 0x1D.
ADXL345_I2C
(
I2C.Port
port,
ADXL345_I2C.Range
range,
 int deviceAddress)
Constructs the ADXL345 Accelerometer over I2C.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
void
close
()
double
getAcceleration
(
ADXL345_I2C.Axes
axis)
Get the acceleration of one axis in Gs.
ADXL345_I2C.AllAxes
getAccelerations
()
Get the acceleration of all axes in Gs.
int
getDeviceAddress
()
Returns the I2C device address.
int
getPort
()
Returns the I2C port.
double
getX
()
Returns the acceleration along the X axis in g-forces.
double
getY
()
Returns the acceleration along the Y axis in g-forces.
double
getZ
()
Returns the acceleration along the Z axis in g-forces.
void
initSendable
(
NTSendableBuilder
builder)
Initializes this
Sendable
object.
final void
setRange
(
ADXL345_I2C.Range
range)
Set the measuring range of the accelerometer.
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Methods inherited from interface edu.wpi.first.networktables.
NTSendable
initSendable
Field Details
kAddress
public static final
byte
kAddress
Default I2C device address.
See Also:
Constant Field Values
Constructor Details
ADXL345_I2C
public
ADXL345_I2C
(
I2C.Port
port,
ADXL345_I2C.Range
range)
Constructs the ADXL345 Accelerometer with I2C address 0x1D.
Parameters:
port
- The I2C port the accelerometer is attached to
range
- The range (+ or -) that the accelerometer will measure.
ADXL345_I2C
public
ADXL345_I2C
(
I2C.Port
port,
ADXL345_I2C.Range
range,
 int deviceAddress)
Constructs the ADXL345 Accelerometer over I2C.
Parameters:
port
- The I2C port the accelerometer is attached to
range
- The range (+ or -) that the accelerometer will measure.
deviceAddress
- I2C address of the accelerometer (0x1D or 0x53)
Method Details
getPort
public
int
getPort
()
Returns the I2C port.
Returns:
The I2C port.
getDeviceAddress
public
int
getDeviceAddress
()
Returns the I2C device address.
Returns:
The I2C device address.
close
public
void
close
()
Specified by:
close
in interface
AutoCloseable
setRange
public final
void
setRange
(
ADXL345_I2C.Range
range)
Set the measuring range of the accelerometer.
Parameters:
range
- The maximum acceleration, positive or negative, that the accelerometer will
     measure.
getX
public
double
getX
()
Returns the acceleration along the X axis in g-forces.
Returns:
The acceleration along the X axis in g-forces.
getY
public
double
getY
()
Returns the acceleration along the Y axis in g-forces.
Returns:
The acceleration along the Y axis in g-forces.
getZ
public
double
getZ
()
Returns the acceleration along the Z axis in g-forces.
Returns:
The acceleration along the Z axis in g-forces.
getAcceleration
public
double
getAcceleration
(
ADXL345_I2C.Axes
axis)
Get the acceleration of one axis in Gs.
Parameters:
axis
- The axis to read from.
Returns:
Acceleration of the ADXL345 in Gs.
getAccelerations
public
ADXL345_I2C.AllAxes
getAccelerations
()
Get the acceleration of all axes in Gs.
Returns:
An object containing the acceleration measured on each axis of the ADXL345 in Gs.
initSendable
public
void
initSendable
(
NTSendableBuilder
builder)
Description copied from interface:
NTSendable
Initializes this
Sendable
object.
Specified by:
initSendable
in interface
NTSendable
Parameters:
builder
- sendable builder