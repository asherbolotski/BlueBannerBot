DUO Control System
Introduction
Getting Started with Control Hub
Connect to the Robot Controller Console
Updating Wi-Fi Settings
Connecting Driver Station to Control Hub
Wiring Diagram
Next Steps
Getting Started with Driver Hub
Adding More Motors
SPARKmini Motor Controller
Adding an Expansion Hub
Troubleshooting the Control System
General Troubleshooting
Control Hub Troubleshooting
Driver Hub Troubleshooting
Driver Hub Battery Troubleshooting
Expansion Hub Troubleshooting
Status LED Blink Codes
12V Battery Best Practices and Troubleshooting
System Overview
Control Hub Specifications
Expansion Hub Specifications
Driver Hub Specifications
Port Pinouts
Protection Features
Cables and Connectors
XT-30 - Power Cable
JST VH - Motor Power
JST PH - Sensors and RS485
Integrated Sensors
Dimensions and Important Component Locations
Updating and Managing
Managing Wi-Fi on the Control Hub
REV Hardware Client
Updating Firmware
Firmware Changelog
Updating Operating System
Control Hub Operating System Changelog
Updating Robot Controller Application
Updating Robot Controller Application via Android Studio
Updating the Driver Hub
Driver Hub OS - Change Log
Accessing Log Files
Android Studio - Deploying Code Wirelessly
Hello Robot - Intro to Blocks Programming
Welcome to Hello Robot!
Where to Program - Client vs. Browser
What is an OpMode?
Setting up a Configuration
Common Errors in Configuration
Using a Gamepad
Part 1: Tackling the Basics
Tackling the Basics Directory - Blocks
Creating an OpMode - Blocks
Programming Essentials
Programming Servos
Programming Servo Basics
Using a Gamepad with a Servo
Programming Servo Telemetry
Programming Motors
Programming Motors Basics
Programming a Motor with a Gamepad
Programming Motor Telemetry
Programming Touch Sensors
Programming Color Sensors
Color Sensor Telemetry
Detecting Color
Part 2: Robot Control
Robot Control Blocks Directory
Programming Drivetrain Motors
Arcade Style TeleOp - Blocks
Establishing Variables in Blocks
Motor Power vs. Robot Movement
Programming Arcade Drive
Arm Control - Blocks
Adding a Limit Switch
Robot Control Full Program
Part 3: Autonomous and Encoders
ElapsedTime - Blocks
ElapsedTime Setup
ElapsedTime Logic
ElapsedTime - Multiple Movements
Encoder Basics
Drivetrain Encoders - Blocks
Converting Encoder Ticks to a Distance
Moving to a Target Distance
Setting Velocity
Turning the Drivetrain Using RUN_TO_POSITION
Arm Control with Encoders - Blocks
Estimating the Position of the Arm
Calculating Target Position
Using Limits to Control Range of Motion
Part 4: Going Beyond!
Exploring Functions
Programming Mecanum - Simplified
Programming Mecanum - Refined
Hello Robot - Intro to OnBot Java Programming
Welcome to Hello Robot!
Where to Program - Client vs. Browser
What is an OpMode?
Setting up a Configuration
Common Errors in Configuration
Using a Gamepad
Part 1: Tackling the Basics
Tackling the Basics Directory - OnBot
Creating an OpMode - OnBot
Programming Essentials
Programming Servos
Programming Servo Basics
Using a Gamepad with a Servo
Programming Servo Telemetry
Programming Motors
Programming Motor Basics
Programming a Motor with a Gamepad
Programming Motor Telemetry
Programming Touch Sensors
Programming Color Sensors
Color Sensor Telemetry
Detecting Color
Part 2: Robot Control
Robot Control OnBot Java Directory
Programming Drivetrain Motors
Arcade Style TeleOp - OnBot Java
Establishing Variables in OnBot Java
Motor Power vs. Robot Movement
Programming Arcade Drive
Arm Control - OnBot Java
Adding a Limit Switch
Robot Control Full Program
Part 3: Autonomous and Encoders
ElapsedTime - OnBot Java
ElapsedTime Setup
ElapsedTime Logic
ElapsedTime - Multiple Movements
Encoder Basics
Drivetrain Encoders - OnBot Java
Converting Encoder Ticks to a Distance
Moving to a Target Distance
Setting Velocity
Turning the Drivetrain Using RUN_TO_POSITION
Arm Control with Encoders - OnBot Java
Estimating the Position of the Arm
Calculating Target Position
Using Limits to Control Range of Motion
Sensors
Introduction to Sensors
Digital
Analog
I2C
IMU
Orientating the IMU
Adding an External IMU to your Hub
Encoders
REV Motor Encoders
Through Bore Encoder
Using 3rd Party Sensors
Sensor Compatibility Chart
Useful Links
REV DUO Build System
Legacy Documentation
Configuring Your Android Devices
Expansion Hub with Android Device Robot Controller
Driver Station and Robot Controller Pairing
Wiring Diagram
Configuration
REV Hub Interface Software
Powered by GitBook
On this page
Getting Started with Programming
Adding a Expansion Hub
Managing the Control Hub
Slim Battery Best Practices
Was this helpful?
Export as PDF
Being able to connect to the Robot Controller Console, connect a Driver Station to a Control Hub, and the basics of wiring different actuators and sensors is just the start!
This section focuses on the next steps for using the REV Control System, including getting started with programming and best practices for managing the Control Hub and Slim Batteries.
Getting Started with Programming
Now that the Control Hub is setup, it is ready to start programming to control a robot.
Hello Robot, available for
Blocks
and
OnBot Java
, will walk you through the basics of getting started moving motors, using sensors, and programming a basic drivetrain!
Before you program:
In order for the Control Hub to properly communicate with hardware components, you must perform a two part process known as hardware mapping. One of the most important, and commonly forgotten steps, when getting started programming is the creation of the configuration file, which is the first part of the hardware mapping process.
A properly created configuration file, defines each hardware component with a unique name and a port type and number. After attaching hardware components to the Hub, use the Driver Station application to create a configuration, before beginning to program.
For more information on the important of hardware mapping and how to configure your robot please see the
Hello Robot - Configuration
page.
Adding a Expansion Hub
Depending on the application more motor, sensor, or servo ports maybe needed. If your robot needs more motors adding an Expansion Hub might be necessary. Adding an Expansion Hub adds the same amount of hardware ports as one Control Hub (an additional four motor ports, six servo ports, and all the sensor ports) to the system.
For more information on how to add a secondary Expansion Hub please visit our
Adding an Expansion Hub
page.
Managing the Control Hub
The Control Hub and Expansion Hub are field upgradable devices. When new software is released with new features, bug fixes, and season specific changes users can update the device themselves. Checking for software updates at the start of September and then about
every 6-8 weeks is recommended.
To check for software updates you can use the
REV Hardware Client
.
Information on updating various pieces of software for the Control Hub, Expansion Hub, and Driver Hub can be found in the Updating and Managing section on the left hand list.
Slim Battery Best Practices
To maintain and care for your battery, reference the general best practices on the 12V Slim Battery (
REV-31-1302
) product page or the information below. This includes how to properly store, charge, and care for your battery on the long term.
All rechargeable batteries have a finite lifespan. Factors that affect lifespan include the number of discharge/charge cycles and the average loading of the battery. The following best practices can help maximize the lifespan of your battery:
Charge rate
Minimum: 1.5A
Maximum: 3.0A
Recommended: 1.8A or 2.0A
Do not overcharge
Disconnect the battery from the charger once it indicates a full charge.
Typical charge time does not exceed 2 hours.
Do not charge a battery that hasn't been discharged significantly.
For example, running the robot under minimal load for a few minutes will not significantly discharge the battery.
Minimum no-load voltage: 9.0V
Discharging the battery past 9.0V can reduce the lifespan of the battery and can permanently damage the cells.
Periodic dips below 9.0V when under load is expected and OK.
For example, don't forget to unplug your battery after you are finished running the robot and don't run your robot until it completely stops responding!
Temperature
Let the battery cool before and after charging.
The battery may feel warm after heavy loading or after charging. This is normal.
Previous
Wiring Diagram
Next
Getting Started with Driver Hub
Last updated
11 months ago
Was this helpful?