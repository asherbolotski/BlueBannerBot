REVLib - C++
ColorMatch.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2020-2024 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include <optional>
32
#include <vector>
33
34
#include <frc/util/Color.h>
35
36
namespace
rev
{
37
43
class
ColorMatch
{
44
public
:
45
ColorMatch
();
46
53
void
AddColorMatch
(
const
frc::Color& color);
54
60
void
SetConfidenceThreshold
(
double
confidence);
61
70
std::optional<frc::Color>
MatchColor
(
const
frc::Color& colorToMatch);
71
83
std::optional<frc::Color>
MatchColor
(
const
frc::Color& colorToMatch,
84
double
& confidence);
85
97
frc::Color
MatchClosestColor
(
const
frc::Color& colorToMatch,
98
double
& confidence);
99
100
private
:
101
std::vector<frc::Color> m_colorsToMatch;
102
double
m_confidenceLevel;
103
};
104
105
}
// namespace rev
rev::ColorMatch
Definition:
ColorMatch.h:43
rev::ColorMatch::AddColorMatch
void AddColorMatch(const frc::Color &color)
Definition:
ColorMatch.cpp:52
rev::ColorMatch::ColorMatch
ColorMatch()
Definition:
ColorMatch.cpp:50
rev::ColorMatch::MatchColor
std::optional< frc::Color > MatchColor(const frc::Color &colorToMatch)
Definition:
ColorMatch.cpp:60
rev::ColorMatch::SetConfidenceThreshold
void SetConfidenceThreshold(double confidence)
Definition:
ColorMatch.cpp:56
rev::ColorMatch::MatchClosestColor
frc::Color MatchClosestColor(const frc::Color &colorToMatch, double &confidence)
Definition:
ColorMatch.cpp:76
rev
Definition:
SparkLowLevel.cpp:40
src
main
native
include
rev
ColorMatch.h
Generated by
1.9.2