REVLib - C++
EncoderConfigAccessor.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2024 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
namespace
rev::spark
{
32
33
class
EncoderConfigAccessor
{
34
friend
class
SparkBaseConfigAccessor
;
35
36
protected
:
37
explicit
EncoderConfigAccessor
(
void
* sparkHandle);
38
39
private
:
40
void
* m_sparkHandle;
41
42
public
:
43
int
GetCountsPerRevolution
();
44
bool
GetInverted
();
45
double
GetPositionConversionFactor
();
46
double
GetVelocityConversionFactor
();
47
int
GetQuadratureAverageDepth
();
48
int
GetQuadratureMeasurementPeriod
();
49
int
GetUvwAverageDepth
();
50
int
GetUvwMeasurementPeriod
();
51
};
52
53
}
// namespace rev::spark
rev::spark::EncoderConfigAccessor
Definition:
EncoderConfigAccessor.h:33
rev::spark::EncoderConfigAccessor::GetPositionConversionFactor
double GetPositionConversionFactor()
Definition:
EncoderConfigAccessor.cpp:54
rev::spark::EncoderConfigAccessor::GetVelocityConversionFactor
double GetVelocityConversionFactor()
Definition:
EncoderConfigAccessor.cpp:61
rev::spark::EncoderConfigAccessor::GetQuadratureAverageDepth
int GetQuadratureAverageDepth()
Definition:
EncoderConfigAccessor.cpp:68
rev::spark::EncoderConfigAccessor::GetUvwMeasurementPeriod
int GetUvwMeasurementPeriod()
Definition:
EncoderConfigAccessor.cpp:89
rev::spark::EncoderConfigAccessor::GetInverted
bool GetInverted()
Definition:
EncoderConfigAccessor.cpp:47
rev::spark::EncoderConfigAccessor::GetQuadratureMeasurementPeriod
int GetQuadratureMeasurementPeriod()
Definition:
EncoderConfigAccessor.cpp:75
rev::spark::EncoderConfigAccessor::GetUvwAverageDepth
int GetUvwAverageDepth()
Definition:
EncoderConfigAccessor.cpp:82
rev::spark::EncoderConfigAccessor::EncoderConfigAccessor
EncoderConfigAccessor(void *sparkHandle)
Definition:
EncoderConfigAccessor.cpp:37
rev::spark::EncoderConfigAccessor::GetCountsPerRevolution
int GetCountsPerRevolution()
Definition:
EncoderConfigAccessor.cpp:40
rev::spark::SparkBaseConfigAccessor
Definition:
SparkBaseConfigAccessor.h:42
rev::spark
Definition:
SparkLowLevel.cpp:40
src
main
native
include
rev
config
EncoderConfigAccessor.h
Generated by
1.9.2