REVLib - C++
SparkFlexConfig.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2024 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include <string>
32
33
#include "
rev/config/ExternalEncoderConfig.h
"
34
#include "
rev/config/SparkBaseConfig.h
"
35
36
namespace
rev::spark
{
37
38
class
SparkFlexConfig
:
public
SparkBaseConfig
{
39
public
:
40
SparkFlexConfig
() =
default
;
41
~SparkFlexConfig
()
override
=
default
;
42
43
SparkFlexConfig
(
const
SparkFlexConfig
&) =
delete
;
44
SparkFlexConfig
&
operator=
(
const
SparkFlexConfig
&) =
delete
;
45
SparkFlexConfig
(
SparkFlexConfig
&&) noexcept = delete;
46
SparkFlexConfig
& operator=(
SparkFlexConfig
&&) noexcept = delete;
47
48
using
SparkBaseConfig
::
Apply
;
49
60
SparkFlexConfig
&
Apply
(
SparkFlexConfig
& config);
61
72
SparkFlexConfig
&
Apply
(
ExternalEncoderConfig
& config);
73
74
std::
string
Flatten
() override;
75
76
ExternalEncoderConfig
externalEncoder
;
77
};
// class SparkFlexConfig
78
79
}
// namespace rev::spark
ExternalEncoderConfig.h
SparkBaseConfig.h
rev::spark::ExternalEncoderConfig
Definition:
ExternalEncoderConfig.h:35
rev::spark::SparkBaseConfig
Definition:
SparkBaseConfig.h:46
rev::spark::SparkFlexConfig
Definition:
SparkFlexConfig.h:38
rev::spark::SparkFlexConfig::SparkFlexConfig
SparkFlexConfig()=default
rev::spark::SparkFlexConfig::Apply
SparkFlexConfig & Apply(SparkFlexConfig &config)
Definition:
SparkFlexConfig.cpp:35
rev::spark::SparkFlexConfig::SparkFlexConfig
SparkFlexConfig(const SparkFlexConfig &)=delete
rev::spark::SparkFlexConfig::~SparkFlexConfig
~SparkFlexConfig() override=default
rev::spark::SparkFlexConfig::externalEncoder
ExternalEncoderConfig externalEncoder
Definition:
SparkFlexConfig.h:76
rev::spark::SparkFlexConfig::operator=
SparkFlexConfig & operator=(const SparkFlexConfig &)=delete
rev::spark::SparkFlexConfig::SparkFlexConfig
SparkFlexConfig(SparkFlexConfig &&) noexcept=delete
rev::spark::SparkFlexConfig::Flatten
std::string Flatten() override
Definition:
SparkFlexConfig.cpp:46
rev::spark
Definition:
SparkLowLevel.cpp:40
src
main
native
include
rev
config
SparkFlexConfig.h
Generated by
1.9.2