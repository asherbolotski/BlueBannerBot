JavaScript is disabled on your browser.
Package
com.revrobotics.spark.config
Class AlternateEncoderConfig
java.lang.Object
com.revrobotics.config.BaseConfig
com.revrobotics.spark.config.AlternateEncoderConfig
public class
AlternateEncoderConfig
extends
BaseConfig
Nested Class Summary
Nested Classes
Modifier and Type
Class
Description
static enum
AlternateEncoderConfig.Type
Nested classes/interfaces inherited from class com.revrobotics.config.
BaseConfig
BaseConfig.CANType
Constructor Summary
Constructors
Constructor
Description
AlternateEncoderConfig
()
Create a new object to configure an AlternateEncoder.
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
AlternateEncoderConfig
apply
(
AlternateEncoderConfig
config)
Applies settings from another
AlternateEncoderConfig
to this one.
AlternateEncoderConfig
averageDepth
(int depth)
Set the sampling depth of the velocity calculation process of the alternate encoder.
AlternateEncoderConfig
countsPerRevolution
(int cpr)
Set the counts per revolutions of the alternate encoder.
AlternateEncoderConfig
inverted
(boolean inverted)
Set the phase of the alternate encoder so that it is in phase with the motor itself.
AlternateEncoderConfig
measurementPeriod
(int periodMs)
Set the position measurement period used to calculate the velocity of the alternate encoder.
AlternateEncoderConfig
positionConversionFactor
(double factor)
Set the conversion factor for the position of the alternate encoder.
AlternateEncoderConfig
setSparkMaxDataPortConfig
()
Configures the data port to use the alternate encoder, which is specifically required for SPARK
 MAX.
AlternateEncoderConfig
velocityConversionFactor
(double factor)
Set the conversion factor for the velocity of the alternate encoder.
Methods inherited from class com.revrobotics.config.
BaseConfig
apply
,
flatten
,
getParameter
,
getParameter
,
putParameter
,
putParameter
,
putParameter
,
removeParameter
,
removeParameter
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Constructor Details
AlternateEncoderConfig
public
AlternateEncoderConfig
()
Create a new object to configure an AlternateEncoder.
Method Details
apply
public
AlternateEncoderConfig
apply
(
AlternateEncoderConfig
config)
Applies settings from another
AlternateEncoderConfig
to this one.
Settings in the provided config will overwrite existing values in this object. Settings not
 specified in the provided config remain unchanged.
Parameters:
config
- The
AlternateEncoderConfig
to copy settings from
Returns:
The updated
AlternateEncoderConfig
for method chaining
setSparkMaxDataPortConfig
public
AlternateEncoderConfig
setSparkMaxDataPortConfig
()
Configures the data port to use the alternate encoder, which is specifically required for SPARK
 MAX.
NOTE: This method is only necessary when using an alternate encoder with a SPARK MAX without
 configuring any of its settings
IMPORTANT: SPARK MAX does not support using an alternate encoder in conjunction with an
 absolute encoder and/or limit switches.
Returns:
The modified
AlternateEncoderConfig
object for method chaining
countsPerRevolution
public
AlternateEncoderConfig
countsPerRevolution
(int cpr)
Set the counts per revolutions of the alternate encoder.
Parameters:
cpr
- The counts per rotation
Returns:
The modified
AlternateEncoderConfig
object for method chaining
inverted
public
AlternateEncoderConfig
inverted
(boolean inverted)
Set the phase of the alternate encoder so that it is in phase with the motor itself.
Parameters:
inverted
- The phase of the encoder
Returns:
The modified
AlternateEncoderConfig
object for method chaining
positionConversionFactor
public
AlternateEncoderConfig
positionConversionFactor
(double factor)
Set the conversion factor for the position of the alternate encoder. Position is returned in
 native units of rotations and will be multiplied by this conversion factor.
Parameters:
factor
- The conversion factor to multiply the native units by
Returns:
The modified
AlternateEncoderConfig
object for method chaining
velocityConversionFactor
public
AlternateEncoderConfig
velocityConversionFactor
(double factor)
Set the conversion factor for the velocity of the alternate encoder. Velocity is returned in
 native units of rotations per minute and will be multiplied by this conversion factor.
Parameters:
factor
- The conversion factor to multiply the native units by
Returns:
The modified
AlternateEncoderConfig
object for method chaining
averageDepth
public
AlternateEncoderConfig
averageDepth
(int depth)
Set the sampling depth of the velocity calculation process of the alternate encoder. This value
 sets the number of samples in the average for velocity readings. For a quadrature encoder, this
 can be any value from 1 to 64 (default).
Parameters:
depth
- The velocity calculation process's sampling depth
Returns:
The modified
AlternateEncoderConfig
object for method chaining
measurementPeriod
public
AlternateEncoderConfig
measurementPeriod
(int periodMs)
Set the position measurement period used to calculate the velocity of the alternate encoder.
 For a quadrature encoder, this number may be between 1 and 100 (default).
The basic formula to calculate velocity is change in position / change in time. This
 parameter sets the change in time for measurement.
Parameters:
periodMs
- Measurement period in milliseconds
Returns:
The modified
AlternateEncoderConfig
object for method chaining