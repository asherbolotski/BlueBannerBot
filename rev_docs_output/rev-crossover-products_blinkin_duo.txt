REV Crossover
REV Crossover Landing
Sensors
Through Bore Encoder
Specifications
Application Examples
Color Sensor V3
Specifications
Application Examples
Discontinued Color Sensors
V2 Specifications & Examples
V1 Specifications & Examples
2m Distance Sensor
Specifications
Application Examples
Magnetic Limit Switch
Specifications
Application Examples
Touch Sensor
Specifications
Application Examples
Potentiometer
Specifications
Application Examples
9-Axis IMU
Specifications
Configuring the 9-Axis IMU
Blinkin LED Driver
Blinkin LED Driver Overview
Blinkin Specifications
Blinkin Getting Started
LED Pattern Tables
Blinkin Troubleshooting
REV ION Application Examples
REV DUO Application Examples
UltraPlanetary System
UltraPlanetary System Overview
UltraPlanetary Features
Cartridge Details
Load Ratings
Assembly Instructions
Mounting Brackets
Ultra 90 Degree Gearbox
Assembly Instructions
Rotation Direction
Servos & Accessories
Servo Hub
Servo Hub Wiring
Configuring the Servo Hub with a Control Hub
Channel Power
Channel Pulse
Servo Hub Status LED Patterns
Troubleshooting
REVLib for Servo Hub
Smart Robot Servo
SRS Gear Replacement
SRS Programmer
Switching Operating Modes
Servo Power Module
Indicators
Digital LED Indicator
Specifications
Application Examples
Gamepad
Gamepad Overview
Remapping Guide
Powered by GitBook
On this page
FIRST Tech Challenge Programming
Stand-Alone Wiring
Competition Robotics Application Ideas
Was this helpful?
Export as PDF
FIRST Tech Challenge Programming
One of the most common requests from Control Hub users is how to use the Blinkin to signal to a driver different actions the robot is performing. The basic code below walks through how to use the SDK to code the Blinkin to different actions. When a certain gamepad button is pressed the LED turns a solid color, if no buttons are pressed the LED defaults to the Beats Per Minute pattern with a Forest Pallette.
For information on the different patterns visit the
LED Pattern Tables
.
Blocks
OnBot Java
In Java the Blinkin LED pattern is assigned by using the CONSTANT_CASE naming convention. For instance, if you would like to utilize the
Custom Color Pattern, Color Gradient
the constant variable name is:
CP1_2_COLOR_GRADIENT
Copy
package
org
.
firstinspires
.
ftc
.
teamcode
;
import
com
.
qualcomm
.
robotcore
.
eventloop
.
opmode
.
LinearOpMode
;
import
com
.
qualcomm
.
hardware
.
rev
.
RevBlinkinLedDriver
;
import
com
.
qualcomm
.
robotcore
.
eventloop
.
opmode
.
TeleOp
;
import
com
.
qualcomm
.
robotcore
.
util
.
ElapsedTime
;
@
TeleOp
public
class
BlinkInTest
extends
LinearOpMode
{
RevBlinkinLedDriver
blinkinLedDriver;
RevBlinkinLedDriver
.
BlinkinPattern
pattern;
@
Override
public
void
runOpMode
() {
blinkinLedDriver
=
hardwareMap
.
get
(
RevBlinkinLedDriver
.
class
,
"blinkin"
);
waitForStart()
;
while
(
opModeIsActive()
) {
if
(
gamepad1
.
x
){
pattern
=
RevBlinkinLedDriver
.
BlinkinPattern
.
BLUE
;
blinkinLedDriver
.
setPattern
(pattern);
}
else
if
(
gamepad1
.
y
){
pattern
=
RevBlinkinLedDriver
.
BlinkinPattern
.
ORANGE
;
blinkinLedDriver
.
setPattern
(pattern);
}
else
if
(
gamepad1
.
b
){
pattern
=
RevBlinkinLedDriver
.
BlinkinPattern
.
WHITE
;
blinkinLedDriver
.
setPattern
(pattern);
}
else
if
(
gamepad1
.
a
){
pattern
=
RevBlinkinLedDriver
.
BlinkinPattern
.
VIOLET
;
blinkinLedDriver
.
setPattern
(pattern);
}
else
{
pattern
=
RevBlinkinLedDriver
.
BlinkinPattern
.
BEATS_PER_MINUTE_FOREST_PALETTE
;
blinkinLedDriver
.
setPattern
(pattern);
}
}
}
}
Stand-Alone Wiring
The Blinkin can run in a stand-alone operation mode when there is no way to generate a PWM signal, or a single output pattern is all that is needed. In this mode the Blinkin will be operating in Normal Mode with no input signal (blue blinking LED) and will default to the programmed no input signal pattern (factory setting is pattern 29 – Color Waves, Party Palette).
The currently displayed pattern can be changed at any time by pressing the up and down buttons to scroll through the
pattern list
. Unless a new default no signal test pattern is saved in memory by completing the setup mode process, the Blinkin will default back to the last saved pattern after a power cycle.
Connect to a 12V power source which can supply up to 5amps.
Select either a 12V or 5V LED strip.
Follow through
Setup and Configuration
to program to a default pattern.
Competition Robotics Application Ideas
Adding LEDs to your robot (or other project) can do more than just make them look cool, you can use LEDs to provide critical visual feedback. Here are some examples:
Program a controller button to change the LED output pattern (e.g. 85 – Solid Yellow) and the drive can use the LEDs to communicate to the human player at a portal station across the field that the robot is ready to receive a game object.
If the driver has poor visibility to see if the robot has acquired a game object, add a sensor to the intake and the LED strip can be programmed to automatically display a new pattern when the object is acquired. The driver never has to take their eyes off the robot to check the dashboard because the robot will clearly display its status.
Using the match time value available in software, the LEDs can be changes to a time warning pattern (e.g. – Solid Red) with X seconds left in a match.
The robot can display a different pattern when enabled vs disabled which provides a more visible indicator of the state of the robot than the RSL.
Previous
REV ION Application Examples
Next
UltraPlanetary System Overview
Last updated
1 year ago
Was this helpful?