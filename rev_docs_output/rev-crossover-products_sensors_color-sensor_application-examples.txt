REV Crossover
REV Crossover Landing
Sensors
Through Bore Encoder
Specifications
Application Examples
Color Sensor V3
Specifications
Application Examples
Discontinued Color Sensors
V2 Specifications & Examples
V1 Specifications & Examples
2m Distance Sensor
Specifications
Application Examples
Magnetic Limit Switch
Specifications
Application Examples
Touch Sensor
Specifications
Application Examples
Potentiometer
Specifications
Application Examples
9-Axis IMU
Specifications
Configuring the 9-Axis IMU
Blinkin LED Driver
Blinkin LED Driver Overview
Blinkin Specifications
Blinkin Getting Started
LED Pattern Tables
Blinkin Troubleshooting
REV ION Application Examples
REV DUO Application Examples
UltraPlanetary System
UltraPlanetary System Overview
UltraPlanetary Features
Cartridge Details
Load Ratings
Assembly Instructions
Mounting Brackets
Ultra 90 Degree Gearbox
Assembly Instructions
Rotation Direction
Servos & Accessories
Servo Hub
Servo Hub Wiring
Configuring the Servo Hub with a Control Hub
Channel Power
Channel Pulse
Servo Hub Status LED Patterns
Troubleshooting
REVLib for Servo Hub
Smart Robot Servo
SRS Gear Replacement
SRS Programmer
Switching Operating Modes
Servo Power Module
Indicators
Digital LED Indicator
Specifications
Application Examples
Gamepad
Gamepad Overview
Remapping Guide
Powered by GitBook
On this page
Application Information
FTC Application
FRC Application
Additional Resources
Was this helpful?
Export as PDF
Application Information
The REV Robotics Color Sensor has two sensing elements: color and proximity.
Color measurements consist of Red, Green, Blue, and Alpha (clear) values. The white LED on the sensor has a slide switch to turn the LED on or off. Unlit targets are best illuminated with the build-in LED while bright or light-emitting targets may not require the build-in LED. Color data is best collected within 2cm of the target for the strongest color differentiation.
Proximity measurements are based on IR reflectance and can vary depending on lighting conditions and target reflectivity. The proximity sensor is ideally used to determine if something is in front of the sensor. While you can receive rough distance data, we recommend using the
2m Distance Sensor
or similar time-of-flight sensor for accurate distance measurement.
FTC Application
Configuring for the Control System
Note to users transitioning from Color Sensor V2 to V3:
Color values will not be consistent between V2 and V3 sensors and there are minor changes to the FTC SDK. Be sure to update to the latest SDK.
When working with the Color Sensor V3 configure your robot to use the "REV Color Sensor V3" as shown in the image below.
In this example, the Color Sensor V3 is configured on I2C bus 1. The Color Sensor V3 can be configured on any of the I2C busses as long as a 2m Distance Sensor is not configured to the same bus.
Recall that I2C sensors must have different addresses in order to operate on the same bus. The Color Sensor V3 and 2m Distance Sensor share the same address.
Programming Example
This program shows a readout of values from the Color Sensor on your Driver Hub's screen while the program runs. "Light Detected" shows the amount of light detected between 0 and 1.
"Blue", "Red", and "Green" each show the amount of that "component" in the color the sensor is pointed at. If pointed at a red color, for example, it will likely have the highest amount shown.
To learn more about programming a Color Sensors check out Hello Robot for
Blocks
and
OnBot Java
!
Blocks
OnBot Java
Example Blocks Code for the Color Sensor
The code assumes that the Color Sensor was configured with the name “test_color.”
Copy
@TeleOp
public class ColorSensorTest extends LinearOpMode {
private NormalizedColorSensor test_color;
@Override
public void runOpMode() {
test_color = hardwareMap.get(NormalizedColorSensor.class, "test_color");
waitForStart();
while (opModeIsActive()) {
telemetry.addData("Light Detected", ((OpticalDistanceSensor) test_color).getLightDetected());
NormalizedRGBA colors = test_color.getNormalizedColors();
//Determining the amount of red, green, and blue
telemetry.addData("Red", "%.3f", colors.red);
telemetry.addData("Green", "%.3f", colors.green);
telemetry.addData("Blue", "%.3f", colors.blue);
telemetry.update();
}
}
}
FRC Application
​When using the Color Sensor V3 on the navX’s I2C Interface, you will need to make sure that the Voltage Select Jumper on the navX is set to 3.3V. The Color Sensor V3 has a max operating voltage of 3.3V and applying 5V can damage the sensor.
Software Libraries
Latest REVLib Installation Information
API Documentation
Online REVLib Java Documentation
Online REVLib C++ Documentation
REV Color Sensor V3 Example Code
C++ Examples
Java Examples
LabVIEW Examples
Additional Resources
Additional information about the APDS-9151, its capabilities, and its features can be found in the following datasheet:
APDS-9151 Datasheet
Previous
Specifications
Next
Discontinued Color Sensors
Last updated
2 months ago
Was this helpful?