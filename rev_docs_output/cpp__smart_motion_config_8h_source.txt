REVLib - C++
SmartMotionConfig.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2024-2025 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include "
rev/ClosedLoopTypes.h
"
32
#include "
rev/config/BaseConfig.h
"
33
34
namespace
rev::spark
{
35
36
class
SmartMotionConfig
:
public
BaseConfig
{
37
public
:
38
SmartMotionConfig
() =
default
;
39
~SmartMotionConfig
()
override
=
default
;
40
41
SmartMotionConfig
(
const
SmartMotionConfig
&) =
delete
;
42
SmartMotionConfig
&
operator=
(
const
SmartMotionConfig
&) =
delete
;
43
SmartMotionConfig
(
SmartMotionConfig
&&) noexcept = delete;
44
SmartMotionConfig
& operator=(
SmartMotionConfig
&&) noexcept = delete;
45
55
SmartMotionConfig
&
Apply
(
SmartMotionConfig
& config);
56
72
[[deprecated]]
SmartMotionConfig
&
MaxVelocity
(
double
maxVelocity,
73
ClosedLoopSlot
slot =
kSlot0
);
74
87
[[deprecated]]
SmartMotionConfig
&
MaxAcceleration
(
88
double
maxAcceleration,
ClosedLoopSlot
slot =
kSlot0
);
89
102
[[deprecated]]
SmartMotionConfig
&
MinOutputVelocity
(
103
double
minVelocity,
ClosedLoopSlot
slot =
kSlot0
);
104
118
[[deprecated]]
SmartMotionConfig
&
AllowedClosedLoopError
(
119
double
allowedError,
ClosedLoopSlot
slot =
kSlot0
);
120
};
// class SmartMotionConfig
121
122
}
// namespace rev::spark
BaseConfig.h
ClosedLoopTypes.h
rev::BaseConfig
Definition:
BaseConfig.h:40
rev::spark::SmartMotionConfig
Definition:
SmartMotionConfig.h:36
rev::spark::SmartMotionConfig::SmartMotionConfig
SmartMotionConfig(const SmartMotionConfig &)=delete
rev::spark::SmartMotionConfig::MinOutputVelocity
SmartMotionConfig & MinOutputVelocity(double minVelocity, ClosedLoopSlot slot=kSlot0)
Definition:
SmartMotionConfig.cpp:62
rev::spark::SmartMotionConfig::SmartMotionConfig
SmartMotionConfig()=default
rev::spark::SmartMotionConfig::~SmartMotionConfig
~SmartMotionConfig() override=default
rev::spark::SmartMotionConfig::AllowedClosedLoopError
SmartMotionConfig & AllowedClosedLoopError(double allowedError, ClosedLoopSlot slot=kSlot0)
Definition:
SmartMotionConfig.cpp:70
rev::spark::SmartMotionConfig::operator=
SmartMotionConfig & operator=(const SmartMotionConfig &)=delete
rev::spark::SmartMotionConfig::MaxVelocity
SmartMotionConfig & MaxVelocity(double maxVelocity, ClosedLoopSlot slot=kSlot0)
Definition:
SmartMotionConfig.cpp:47
rev::spark::SmartMotionConfig::Apply
SmartMotionConfig & Apply(SmartMotionConfig &config)
Definition:
SmartMotionConfig.cpp:41
rev::spark::SmartMotionConfig::MaxAcceleration
SmartMotionConfig & MaxAcceleration(double maxAcceleration, ClosedLoopSlot slot=kSlot0)
Definition:
SmartMotionConfig.cpp:55
rev::spark::SmartMotionConfig::SmartMotionConfig
SmartMotionConfig(SmartMotionConfig &&) noexcept=delete
rev::spark
Definition:
SparkLowLevel.cpp:40
rev::spark::ClosedLoopSlot
ClosedLoopSlot
Definition:
ClosedLoopTypes.h:35
rev::spark::kSlot0
@ kSlot0
Definition:
ClosedLoopTypes.h:35
src
main
native
include
rev
config
SmartMotionConfig.h
Generated by
1.9.2