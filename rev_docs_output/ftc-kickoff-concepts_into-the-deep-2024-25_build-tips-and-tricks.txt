REV DUO Kickoff Concepts
2025-26 REV DUO FTC Starter Bot
DECODE 2025-26
Starter Bot - DECODE
Bill of Materials
Programming TeleOp
Build Tips & Tricks
Starter Bot Changelog 2025-26
INTO THE DEEP 2024-25
2024-25 REV DUO FTC Starter Bot
Starter Bot - INTO THE DEEP
Bill of Materials
Programming TeleOp
Programming - Initialization
Programming - Creating Functions
Programming - Controlling the Arm and Wrist
Programming - Intake and Claw Toggle
Programming - Driving and Telemetry
Programming - OnBot Java Overview
Build Tips & Tricks
Upgrades!
Starter Bot Changelog 2024-25
CENTERSTAGE 2023-2024
Starter Bot - CENTERSTAGE
Bill of Materials
Programming Teleop
Building Tips & Tricks
Upgrades
Starter Bot Changelog
POWERPLAY 2022-2023
Starter Bot - POWERPLAY
Alternative Control Hub Placement
Starter Bot - Programming TeleOp
Game Breakdown
Game Elements
Drivetrain
Intake
Lifts
Freight Frenzy - 2021-2022
Starter Bot - Freight Frenzy
Starter Bot - Programming TeleOp
Game Breakdown
Game Elements
Drivetrain
Intake
Carousel Mechanism
Freight Delivery Mechanisms
Programming Autonomous
Ultimate Goal - 2020-2021
Game Strategy
Game Piece
Drivetrain
Intake
Conveyor
Flywheel Launcher
Powered by GitBook
On this page
Compatibility with Starter Kit V3
Pre-Loading Brackets
UltraPlanetary Overtightening
Making the Chain and Master Links
Squaring Your Assembly
Initializing Your Robot
Programing Your Smart Robot Servo
Wire Management
Starter Bot Programming TeleOp without Initialization
Download of Starter Bot Program without Initialization
Robot Start Up Position
Left Bumper Reset
Adjusting the STATE_MACHINE
Was this helpful?
Export as PDF
Compatibility with Starter Kit V3
The 2024-25 REV DUO Starter Bot is designed to be built with the FTC Starter Kit V3.1, however there are only a few parts missing from the Starter Kit V3. Below is the list of parts you will need to add to your Starter V3 to make it compatible with the 2024-25 REV DUO Starter Bot.
Part number
Description
Quantity
REV-41-1124-PK100
M3 x 20mm Hex Cap Screws - 100 Pack
1
REV-41-1600
UltraPlanetary Gearbox Kit & HD Hex Motor
1
REV-41-1491-PK4
M3 Standoff - 30mm - 4 Pack
2
REV-41-1493-PK4
M3 Standoff - 45mm - 4 Pack
1
REV-41-2702-PK4
Flap Wheel - 5mm Hex Bore - Medium (Dark Gray) - 4 Pack
2
Pre-Loading Brackets
There are many brackets used in the 2024-25 REV DUO Starter Bot, pre-loading these brackets with the appropriate screws and nuts make these steps easier. Pre-Loading is discussed in the
Channel Drivetrain build guide
. When pre-loading remember that the head of the Hex Cap screw should face the extrusion.
UltraPlanetary Overtightening
When you
assemble your UltraPlanetary
take care not to over-tighten the gearbox housing screws. Hand tight is enough to keep the gearbox assembled. If you overtighten the gears might bind leading to poor performance and possibly damage.
Making the Chain and Master Links
Roller chain is typically connected into a continuous loop. This can be done using a Chain Tool to press the pins in and out of the desired outer link as described in the build guide. An alternate way to make the chain is using a common roller chain accessory called a
Master Link
, or quick-release link. Two of these master links come in your FTC Starter Kit V3.1. Master links allow for easy chain assembly/disassembly without any special chain tools. Master links can typically be reused many times, but can become bent with multiple uses. At the point that master links become bent they should be discarded.
Squaring Your Assembly
When assembling your Starter Bot, it is important to square up your shafts and extrusion. This will ensure your robot operates smoothly and effectively. To check if your assembly is square you can use a Square tool or if that is not available you can use something with a known 90 degree angle such as a sheet of paper.
Initializing Your Robot
The preset positions, such as "Intake" and "Low Basket," in the default Starter Bot code work using the built-in encoders of the motors. To ensure the robot moves to the correct position for these presets, make sure the robot is powered on while in its initialization orientation.
This orientation is pictured below: arm down and the wrist folded up.
Programing Your Smart Robot Servo
The 2024-25 REV DUO Starter Bot uses two Smart Robot Servos. The Intake servo needs to be programed in Continuous Rotation mode and the Claw servo needs to be programed in Default Operation with angular limits set. Use the
SRS Programmer (REV-31-1108)
to
switch the operating modes.
Wire Management
One of the most important steps for a reliable and safe robot is wire management. Wire management involves bundling and routing wires along a defined path to the electrical parts, such as servos and motors. Wires can bundled with zip ties, wrapped in tape, tucked into extrusion, and routed away from moving parts of your robot.
Pinch Points
There are points on the robot that can catch an unconstrainted wire and pinch it causing it to be damaged or disconnected. This is most noticeable with the gears on the arm and the servo wires, however, the arm still needs to move we can not completely constrain the wires.
We recommend using a length of extra wire to form a "service loop", like the one shown above. This loop keeps wires bundled together, and provides a predictable path of movement as your arm pivots.
Strain Relief
Minimizing stress on a wire connection, which is often a two-part connector on FTC Robots, is a great method to avoid wiring getting pulled loose within your control system! Proper strain relief ensures that the wires are not causing unnecessary stress on the connectors and that the connection remains snug.
To add strain relief to your wiring, secure the wire about one or two inches from the connector and leave a bit of slack on the connector side. This helps avoid unintentional tension that could damage the connector and allows for easy disconnection when needed for testing or replacing modules.
Be careful to not leave too much or too little slack on either end of the connection
Too little slack can cause the wires to pull apart
Too much slack can become an entanglement risk
Smart Tug
A "Smart Tug" is a test where you test your wiring by tugging on a wire with a reasonable amount of force to see if it comes undone. The Smart Tug simulates many common scenarios, including a wire getting caught on a field element, actuator, or another robot. It is a good practice to do this test any time you connect a wire to ensure it is fully seated in the connector and secure.
If you perform a Smart Tug on your wire and it becomes disconnected, you can use one of the above methods to secure the wire!
Starter Bot Programming TeleOp without Initialization
The provided program template for the 2024-25 Starter Bot has the robot move to initialization at the start of the program. However, in some situations the arm and wrist motor may never hit the designated starting position leading to oscillating movements, or the Control Hub may have been powered on in the wrong positions, which determines these motors' zeroes, leading to unexpected movement.
Below is a version of the TeleOp program that changes this initialization so the robot no longer moves until receiving input from the gamepad. This version is only available for the basic Blocks template and not for any upgrades. Read through the short guide below to learn more about the changes!
Download of Starter Bot Program without Initialization
40KB
Starterbot2025TeleOpBlocksNoInit.blk
Robot Start Up Position
When the program begins, the robot will first STOP_AND_RESET_ENCODER for the arm's HD Hex Motor and wrist's Core Hex Motor. Whatever position the arm and wrist are in will become the "zero" the presets are based around.
STATE_MACHINE with INIT change
Because of this, the arm and wrist should still start in a similar position as we recommended on the
default program
, which is ideal for a competition set up as well. Your team should consider marking or labeling your robot in some way to know always where the arm should be reset between runs of the program.
Left Bumper Reset
When pressing the left bumper on the gamepad, the arm and wrist will return to their start up position. To prevent this from also resetting the encoder, a new variable called ZEROING has been added to our STATE_MACHINE as seen below:
ZEROING position
The call for the left bumper now looks like below:
When LeftBumper is pressed the arm and wrist move to ZEROING
Adjusting the STATE_MACHINE
Due to variations in the robot's structure and how team's decide to position it for start up, you will likely need to make some adjustments to your arm and wrist values within the STATE_MACHINE to fit your team's needs for the presets.
Updated STATE_MACHINE
Some changes to the targetArm position have already been included, but we recommend using the telemetry readout on your Driver Hub to refine your movements!
Remember if you change where you start your arm and wrist the zero for the motors will change
. A breakdown of the
positions can be found here as part of the main tutorial
.
Previous
Programming - OnBot Java Overview
Next
Upgrades!
Last updated
2 months ago
Was this helpful?