JavaScript is disabled on your browser.
Package
com.revrobotics.spark.config
Class SparkBaseConfigAccessor
java.lang.Object
com.revrobotics.spark.config.SparkBaseConfigAccessor
Direct Known Subclasses:
SparkFlexConfigAccessor
,
SparkMaxConfigAccessor
public class
SparkBaseConfigAccessor
extends
Object
Field Summary
Fields
Modifier and Type
Field
Description
final
AbsoluteEncoderConfigAccessor
absoluteEncoder
Accessor for parameters relating to the absolute encoder.
final
AnalogSensorConfigAccessor
analogSensor
Accessor for parameters relating to the analog sensor.
final
ClosedLoopConfigAccessor
closedLoop
Accessor for parameters relating to the closed loop controller.
final
EncoderConfigAccessor
encoder
Accessor for parameters relating to the primary encoder.
final
LimitSwitchConfigAccessor
limitSwitch
Accessor for parameters relating to the hardware limit switches.
final
SignalsConfigAccessor
signals
Accessor for parameters relating to the Status Signals.
final
SoftLimitConfigAccessor
softLimit
Accessor for parameters relating to the Software Limits.
Constructor Summary
Constructors
Modifier
Constructor
Description
protected
SparkBaseConfigAccessor
(long sparkHandle)
Method Summary
All Methods
Instance Methods
Concrete Methods
Modifier and Type
Method
Description
double
getClosedLoopRampRate
()
boolean
getFollowerModeInverted
()
int
getFollowerModeLeaderId
()
SparkBaseConfig.IdleMode
getIdleMode
()
boolean
getInverted
()
double
getOpenLoopRampRate
()
double
getSecondaryCurrentLimit
()
int
getSecondaryCurrentLimitChopCycles
()
int
getSmartCurrentFreeLimit
()
int
getSmartCurrentLimit
()
int
getSmartCurrentRPMLimit
()
double
getVoltageCompensation
()
boolean
getVoltageCompensationEnabled
()
Methods inherited from class java.lang.
Object
clone
,
equals
,
finalize
,
getClass
,
hashCode
,
notify
,
notifyAll
,
toString
,
wait
,
wait
,
wait
Field Details
absoluteEncoder
public final
AbsoluteEncoderConfigAccessor
absoluteEncoder
Accessor for parameters relating to the absolute encoder. To configure these values, use
AbsoluteEncoderConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
analogSensor
public final
AnalogSensorConfigAccessor
analogSensor
Accessor for parameters relating to the analog sensor. To configure these values, use
AnalogSensorConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
encoder
public final
EncoderConfigAccessor
encoder
Accessor for parameters relating to the primary encoder. To configure these values, use
EncoderConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
limitSwitch
public final
LimitSwitchConfigAccessor
limitSwitch
Accessor for parameters relating to the hardware limit switches. To configure these values, use
LimitSwitchConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
closedLoop
public final
ClosedLoopConfigAccessor
closedLoop
Accessor for parameters relating to the closed loop controller. To configure these values, use
ClosedLoopConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
softLimit
public final
SoftLimitConfigAccessor
softLimit
Accessor for parameters relating to the Software Limits. To configure these values, use
SoftLimitConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
signals
public final
SignalsConfigAccessor
signals
Accessor for parameters relating to the Status Signals. To configure these values, use
SignalsConfig
and call
SparkBase.configure(SparkBaseConfig, SparkBase.ResetMode, SparkBase.PersistMode)
.
NOTE: This uses calls that are blocking to retrieve parameters and should be used
 infrequently.
Constructor Details
SparkBaseConfigAccessor
protected
SparkBaseConfigAccessor
(long sparkHandle)
Method Details
getIdleMode
public
SparkBaseConfig.IdleMode
getIdleMode
()
getInverted
public
boolean
getInverted
()
getSmartCurrentLimit
public
int
getSmartCurrentLimit
()
getSmartCurrentFreeLimit
public
int
getSmartCurrentFreeLimit
()
getSmartCurrentRPMLimit
public
int
getSmartCurrentRPMLimit
()
getSecondaryCurrentLimit
public
double
getSecondaryCurrentLimit
()
getSecondaryCurrentLimitChopCycles
public
int
getSecondaryCurrentLimitChopCycles
()
getOpenLoopRampRate
public
double
getOpenLoopRampRate
()
getClosedLoopRampRate
public
double
getClosedLoopRampRate
()
getVoltageCompensation
public
double
getVoltageCompensation
()
getVoltageCompensationEnabled
public
boolean
getVoltageCompensationEnabled
()
getFollowerModeLeaderId
public
int
getFollowerModeLeaderId
()
getFollowerModeInverted
public
boolean
getFollowerModeInverted
()