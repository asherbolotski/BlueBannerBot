REVLib - C++
SparkFlexExternalEncoder.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2021-2025 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include <stdint.h>
32
33
#include <atomic>
34
35
#include "
rev/REVLibError.h
"
36
#include "
rev/RelativeEncoder.h
"
37
38
namespace
rev::spark
{
39
40
class
SparkFlex;
41
42
class
SparkFlexExternalEncoder
:
public
RelativeEncoder
{
43
// Friend to allow construction
44
friend
class
SparkFlex
;
45
46
public
:
47
SparkFlexExternalEncoder
(
SparkFlexExternalEncoder
&& rhs) =
default
;
48
SparkFlexExternalEncoder
&
operator=
(
SparkFlexExternalEncoder
&& rhs) =
49
default
;
50
51
SparkFlexExternalEncoder
(
const
SparkFlexExternalEncoder
& rhs) =
default
;
52
53
~SparkFlexExternalEncoder
()
override
=
default
;
54
63
double
GetPosition
()
const override
;
64
73
double
GetVelocity
()
const override
;
74
82
REVLibError
SetPosition
(
double
position)
override
;
83
84
private
:
85
SparkFlex
* m_device;
86
87
explicit
SparkFlexExternalEncoder
(
SparkFlex
& device);
88
};
89
90
}
// namespace rev::spark
REVLibError.h
RelativeEncoder.h
rev::RelativeEncoder
Definition:
RelativeEncoder.h:50
rev::spark::SparkFlexExternalEncoder
Definition:
SparkFlexExternalEncoder.h:42
rev::spark::SparkFlexExternalEncoder::SetPosition
REVLibError SetPosition(double position) override
Definition:
SparkFlexExternalEncoder.cpp:61
rev::spark::SparkFlexExternalEncoder::~SparkFlexExternalEncoder
~SparkFlexExternalEncoder() override=default
rev::spark::SparkFlexExternalEncoder::SparkFlexExternalEncoder
SparkFlexExternalEncoder(SparkFlexExternalEncoder &&rhs)=default
rev::spark::SparkFlexExternalEncoder::GetPosition
double GetPosition() const override
Definition:
SparkFlexExternalEncoder.cpp:46
rev::spark::SparkFlexExternalEncoder::operator=
SparkFlexExternalEncoder & operator=(SparkFlexExternalEncoder &&rhs)=default
rev::spark::SparkFlexExternalEncoder::GetVelocity
double GetVelocity() const override
Definition:
SparkFlexExternalEncoder.cpp:54
rev::spark::SparkFlexExternalEncoder::SparkFlexExternalEncoder
SparkFlexExternalEncoder(const SparkFlexExternalEncoder &rhs)=default
rev::spark::SparkFlex
Definition:
SparkFlex.h:37
rev::spark
Definition:
SparkLowLevel.cpp:40
rev::REVLibError
REVLibError
Definition:
REVLibError.h:33
src
main
native
include
rev
SparkFlexExternalEncoder.h
Generated by
1.9.2