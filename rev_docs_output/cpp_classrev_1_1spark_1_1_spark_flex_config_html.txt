REVLib - C++
Public Member Functions
|
Public Attributes
|
List of all members
rev::spark::SparkFlexConfig Class Reference
#include <
SparkFlexConfig.h
>
Inherits
rev::spark::SparkBaseConfig
.
Public Member Functions
SparkFlexConfig
()=default
~SparkFlexConfig
() override=default
SparkFlexConfig
(const
SparkFlexConfig
&)=delete
SparkFlexConfig
&
operator=
(const
SparkFlexConfig
&)=delete
SparkFlexConfig
(
SparkFlexConfig
&&) noexcept=delete
SparkFlexConfig
&
operator=
(
SparkFlexConfig
&&) noexcept=delete
SparkFlexConfig
&
Apply
(
SparkFlexConfig
&config)
SparkFlexConfig
&
Apply
(
ExternalEncoderConfig
&config)
std::string
Flatten
() override
virtual
SparkBaseConfig
&
Apply
(
SparkBaseConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
AbsoluteEncoderConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
AnalogSensorConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
EncoderConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
LimitSwitchConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
SoftLimitConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
ClosedLoopConfig
&config)
virtual
SparkBaseConfig
&
Apply
(
SignalsConfig
&config)
Public Member Functions inherited from
rev::spark::SparkBaseConfig
SparkBaseConfig
()=default
~SparkBaseConfig
() override=default
SparkBaseConfig
(const
SparkBaseConfig
&)=delete
SparkBaseConfig
&
operator=
(const
SparkBaseConfig
&)=delete
SparkBaseConfig
(
SparkBaseConfig
&&) noexcept=delete
SparkBaseConfig
&
operator=
(
SparkBaseConfig
&&) noexcept=delete
virtual
SparkBaseConfig
&
SetIdleMode
(
IdleMode
idleMode)
virtual
SparkBaseConfig
&
Inverted
(bool inverted)
virtual
SparkBaseConfig
&
SmartCurrentLimit
(int stallLimit, int freeLimit=0, int limitRpm=20000)
virtual
SparkBaseConfig
&
SecondaryCurrentLimit
(double limit, int chopCycles=0)
virtual
SparkBaseConfig
&
OpenLoopRampRate
(double rate)
virtual
SparkBaseConfig
&
ClosedLoopRampRate
(double rate)
virtual
SparkBaseConfig
&
VoltageCompensation
(double nominalVoltage)
virtual
SparkBaseConfig
&
DisableVoltageCompensation
()
virtual
SparkBaseConfig
&
Follow
(int leaderCanId, bool invert=false)
virtual
SparkBaseConfig
&
Follow
(
SparkBase
&leader, bool invert=false)
virtual
SparkBaseConfig
&
DisableFollowerMode
()
Public Member Functions inherited from
rev::BaseConfig
virtual
~BaseConfig
()=default
Public Attributes
ExternalEncoderConfig
externalEncoder
Public Attributes inherited from
rev::spark::SparkBaseConfig
AbsoluteEncoderConfig
absoluteEncoder
AnalogSensorConfig
analogSensor
ClosedLoopConfig
closedLoop
EncoderConfig
encoder
LimitSwitchConfig
limitSwitch
SignalsConfig
signals
SoftLimitConfig
softLimit
Additional Inherited Members
Public Types inherited from
rev::spark::SparkBaseConfig
enum
IdleMode
: uint32_t {
kCoast
= 0
,
kBrake
= 1
 }
Protected Types inherited from
rev::BaseConfig
using
REVLibConfig_t
= std::variant< int32_t, uint32_t, float, bool >
Protected Member Functions inherited from
rev::BaseConfig
BaseConfig
()=default
BaseConfig
(const
BaseConfig
&)=delete
BaseConfig
&
operator=
(const
BaseConfig
&)=delete
BaseConfig
(
BaseConfig
&&) noexcept=delete
BaseConfig
&
operator=
(
BaseConfig
&&) noexcept=delete
template<typename ConfigType >
void
PutParameter
(uint8_t parameterId, ConfigType value)
std::optional<
REVLibConfig_t
>
GetParameter
(uint8_t parameterId)
void
RemoveParameter
(uint8_t parameterId)
void
Apply
(
BaseConfig
&config)
Static Protected Member Functions inherited from
rev::BaseConfig
static std::optional<
REVLibConfig_t
>
GetParameter
(
BaseConfig
&fromConfig, uint8_t parameterId)
static void
RemoveParameter
(
BaseConfig
&fromConfig, uint8_t parameterId)
Constructor & Destructor Documentation
◆
SparkFlexConfig()
[1/3]
rev::spark::SparkFlexConfig::SparkFlexConfig
(
)
default
◆
~SparkFlexConfig()
rev::spark::SparkFlexConfig::~SparkFlexConfig
(
)
override
default
◆
SparkFlexConfig()
[2/3]
rev::spark::SparkFlexConfig::SparkFlexConfig
(
const
SparkFlexConfig
&
)
delete
◆
SparkFlexConfig()
[3/3]
rev::spark::SparkFlexConfig::SparkFlexConfig
(
SparkFlexConfig
&&
)
delete
noexcept
Member Function Documentation
◆
operator=()
[1/2]
SparkFlexConfig
& rev::spark::SparkFlexConfig::operator=
(
const
SparkFlexConfig
&
)
delete
◆
operator=()
[2/2]
SparkFlexConfig
& rev::spark::SparkFlexConfig::operator=
(
SparkFlexConfig
&&
)
delete
noexcept
◆
Apply()
[1/10]
SparkFlexConfig
& SparkFlexConfig::Apply
(
SparkFlexConfig
&
config
)
Applies settings from another
SparkFlexConfig
to this one, including all of its nested configurations.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
SparkFlexConfig
to copy settings from
Returns
The updated
SparkFlexConfig
for method chaining
◆
Apply()
[2/10]
SparkFlexConfig
& SparkFlexConfig::Apply
(
ExternalEncoderConfig
&
config
)
Applies settings from an
ExternalEncoderConfig
to this
SparkFlexConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
ExternalEncoderConfig
to copy settings from
Returns
The updated
SparkFlexConfig
for method chaining
◆
Flatten()
std::string SparkFlexConfig::Flatten
(
)
override
virtual
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[3/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
SparkBaseConfig
&
config
)
virtual
Applies settings from another
SparkBaseConfig
to this one, including all of its nested configurations.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
SparkBaseConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[4/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
AbsoluteEncoderConfig
&
config
)
virtual
Applies settings from an
AbsoluteEncoderConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
AbsoluteEncoderConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[5/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
AnalogSensorConfig
&
config
)
virtual
Applies settings from an
AnalogSensorConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
AnalogSensorConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[6/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
EncoderConfig
&
config
)
virtual
Applies settings from an
EncoderConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
EncoderConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[7/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
LimitSwitchConfig
&
config
)
virtual
Applies settings from a
LimitSwitchConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
LimitSwitchConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[8/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
SoftLimitConfig
&
config
)
virtual
Applies settings from a
SoftLimitConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
SoftLimitConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[9/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
ClosedLoopConfig
&
config
)
virtual
Applies settings from a
ClosedLoopConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
ClosedLoopConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
◆
Apply()
[10/10]
SparkBaseConfig
& SparkBaseConfig::Apply
(
SignalsConfig
&
config
)
virtual
Applies settings from a
SignalsConfig
to this
SparkBaseConfig
.
Settings in the provided config will overwrite existing values in this object. Settings not specified in the provided config remain unchanged.
Parameters
config
The
SignalsConfig
to copy settings from
Returns
The updated
SparkBaseConfig
for method chaining
Reimplemented from
rev::spark::SparkBaseConfig
.
Member Data Documentation
◆
externalEncoder
ExternalEncoderConfig
rev::spark::SparkFlexConfig::externalEncoder
The documentation for this class was generated from the following files:
src/main/native/include/rev/config/
SparkFlexConfig.h
src/main/native/cpp/config/
SparkFlexConfig.cpp
rev
spark
SparkFlexConfig
Generated by
1.9.2