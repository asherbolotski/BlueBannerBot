REVLib - C++
FeedForwardConfigAccessor.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2024-2025 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include "
rev/ClosedLoopTypes.h
"
32
#include "
rev/config/FeedForwardConfig.h
"
33
34
namespace
rev::spark
{
35
36
class
FeedForwardConfigAccessor
{
37
friend
class
ClosedLoopConfigAccessor
;
38
39
protected
:
40
explicit
FeedForwardConfigAccessor
(
void
* sparkHandle);
41
42
private
:
43
void
* m_sparkHandle;
44
45
public
:
46
double
getkS
(
ClosedLoopSlot
slot =
kSlot0
);
47
48
double
getkV
(
ClosedLoopSlot
slot =
kSlot0
);
49
50
double
getkA
(
ClosedLoopSlot
slot =
kSlot0
);
51
52
double
getkG
(
ClosedLoopSlot
slot =
kSlot0
);
53
54
double
getkCos
(
ClosedLoopSlot
slot =
kSlot0
);
55
56
double
getkCosRatio
(
ClosedLoopSlot
slot =
kSlot0
);
57
};
58
59
}
// namespace rev::spark
ClosedLoopTypes.h
FeedForwardConfig.h
rev::spark::ClosedLoopConfigAccessor
Definition:
ClosedLoopConfigAccessor.h:39
rev::spark::FeedForwardConfigAccessor
Definition:
FeedForwardConfigAccessor.h:36
rev::spark::FeedForwardConfigAccessor::getkV
double getkV(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:48
rev::spark::FeedForwardConfigAccessor::FeedForwardConfigAccessor
FeedForwardConfigAccessor(void *sparkHandle)
Definition:
FeedForwardConfigAccessor.cpp:37
rev::spark::FeedForwardConfigAccessor::getkA
double getkA(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:56
rev::spark::FeedForwardConfigAccessor::getkCosRatio
double getkCosRatio(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:81
rev::spark::FeedForwardConfigAccessor::getkCos
double getkCos(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:72
rev::spark::FeedForwardConfigAccessor::getkS
double getkS(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:40
rev::spark::FeedForwardConfigAccessor::getkG
double getkG(ClosedLoopSlot slot=kSlot0)
Definition:
FeedForwardConfigAccessor.cpp:64
rev::spark
Definition:
SparkLowLevel.cpp:40
rev::spark::ClosedLoopSlot
ClosedLoopSlot
Definition:
ClosedLoopTypes.h:35
rev::spark::kSlot0
@ kSlot0
Definition:
ClosedLoopTypes.h:35
src
main
native
include
rev
config
FeedForwardConfigAccessor.h
Generated by
1.9.2