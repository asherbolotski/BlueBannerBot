REVLib - C++
SparkAbsoluteEncoder.h
Go to the documentation of this file.
1
/*
2
* Copyright (c) 2021-2025 REV Robotics
3
*
4
* Redistribution and use in source and binary forms, with or without
5
* modification, are permitted provided that the following conditions are met:
6
*
7
* 1. Redistributions of source code must retain the above copyright notice,
8
*    this list of conditions and the following disclaimer.
9
* 2. Redistributions in binary form must reproduce the above copyright
10
*    notice, this list of conditions and the following disclaimer in the
11
*    documentation and/or other materials provided with the distribution.
12
* 3. Neither the name of REV Robotics nor the names of its
13
*    contributors may be used to endorse or promote products derived from
14
*    this software without specific prior written permission.
15
*
16
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
17
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
18
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
19
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
20
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
21
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
22
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
23
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
24
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
25
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
26
* POSSIBILITY OF SUCH DAMAGE.
27
*/
28
29
#pragma once
30
31
#include <stdint.h>
32
33
#include "
rev/AbsoluteEncoder.h
"
34
#include "
rev/REVLibError.h
"
35
36
namespace
rev::spark
{
37
38
class
SparkBase;
39
44
class
SparkAbsoluteEncoder
:
public
AbsoluteEncoder
{
45
// Friend to allow construction
46
friend
class
SparkBase
;
47
48
public
:
49
SparkAbsoluteEncoder
(
SparkAbsoluteEncoder
&& rhs) =
default
;
50
SparkAbsoluteEncoder
&
operator=
(
SparkAbsoluteEncoder
&& rhs) =
default
;
51
52
SparkAbsoluteEncoder
(
const
SparkAbsoluteEncoder
& rhs) =
default
;
53
54
~SparkAbsoluteEncoder
()
override
=
default
;
55
63
double
GetPosition
()
const override
;
64
72
double
GetVelocity
()
const override
;
73
74
private
:
75
SparkBase
* m_device;
76
77
explicit
SparkAbsoluteEncoder
(
SparkBase
& device);
78
};
79
80
}
// namespace rev::spark
AbsoluteEncoder.h
REVLibError.h
rev::AbsoluteEncoder
Definition:
AbsoluteEncoder.h:48
rev::spark::SparkAbsoluteEncoder
Definition:
SparkAbsoluteEncoder.h:44
rev::spark::SparkAbsoluteEncoder::~SparkAbsoluteEncoder
~SparkAbsoluteEncoder() override=default
rev::spark::SparkAbsoluteEncoder::SparkAbsoluteEncoder
SparkAbsoluteEncoder(const SparkAbsoluteEncoder &rhs)=default
rev::spark::SparkAbsoluteEncoder::SparkAbsoluteEncoder
SparkAbsoluteEncoder(SparkAbsoluteEncoder &&rhs)=default
rev::spark::SparkAbsoluteEncoder::GetPosition
double GetPosition() const override
Definition:
SparkAbsoluteEncoder.cpp:44
rev::spark::SparkAbsoluteEncoder::GetVelocity
double GetVelocity() const override
Definition:
SparkAbsoluteEncoder.cpp:52
rev::spark::SparkAbsoluteEncoder::operator=
SparkAbsoluteEncoder & operator=(SparkAbsoluteEncoder &&rhs)=default
rev::spark::SparkBase
Definition:
SparkBase.h:58
rev::spark
Definition:
SparkLowLevel.cpp:40
src
main
native
include
rev
SparkAbsoluteEncoder.h
Generated by
1.9.2